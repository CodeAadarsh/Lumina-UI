{"version":3,"file":"index.esm10.js","sources":["../src/components/ui/MotionCard.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, HTMLAttributes, CSSProperties, ReactNode } from 'react';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { useTheme } from '../../providers/ThemeProvider';\n\n// Define types for variant options\nexport type MotionCardVariant = \n  | 'default'\n  | 'elevated'\n  | 'glass'\n  | 'glass-premium'\n  | 'gradient'\n  | 'dark'\n  | 'neumorphic-light'\n  | 'neumorphic-dark';\n\nexport type MotionCardIntensity = 'subtle' | 'medium' | 'strong';\nexport type MotionCardRounded = 'none' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | 'full';\nexport type MotionCardGlow = 'none' | 'subtle' | 'medium' | 'strong';\nexport type MotionCardHighlight = 'none' | 'subtle' | 'medium' | 'strong';\nexport type MotionCardEffect = 'none' | 'float' | 'shimmer' | 'border' | 'multi-border';\n\n// Interface for mouse position\ninterface Position {\n  x: number;\n  y: number;\n}\n\n// Motion Card variants using cva\nconst motionCardVariants = cva(\n  // Base styles\n  'relative transition-transform duration-200 transform-gpu will-change-transform bg-background-secondary overflow-hidden',\n  {\n    variants: {\n      // Card variants\n      variant: {\n        // Default card\n        default: 'border border-border',\n        \n        // Elevated card with shadow\n        elevated: 'border border-border shadow-lg',\n        \n        // Glass effect card\n        glass: 'backdrop-blur-md bg-white/10 border border-white/20',\n        \n        // Premium glass card\n        'glass-premium': 'backdrop-blur-xl bg-white/5 border border-white/10 shadow-lg',\n        \n        // Gradient card\n        gradient: 'bg-gradient-to-br from-primary-light/10 to-accent-purple/10 border border-white/10',\n        \n        // Dark card\n        dark: 'bg-gray-900 border border-gray-800 shadow-xl',\n        \n        // Neumorphic light\n        'neumorphic-light': 'bg-[#e0e5ec] text-gray-700 border-none shadow-[5px_5px_15px_#b8b9be,-5px_-5px_15px_#ffffff]',\n        \n        // Neumorphic dark\n        'neumorphic-dark': 'bg-[#2a2d3e] text-gray-100 border-none shadow-[5px_5px_15px_#1e2030,-5px_-5px_15px_#363b50]',\n      },\n      \n      // Card intensity - controls the strength of 3D effect\n      intensity: {\n        subtle: 'motion-intensity-subtle', // Custom class for JS manipulation\n        medium: 'motion-intensity-medium', // Custom class for JS manipulation\n        strong: 'motion-intensity-strong', // Custom class for JS manipulation\n      },\n      \n      // Card roundedness\n      rounded: {\n        none: 'rounded-none',\n        sm: 'rounded-sm',\n        md: 'rounded',\n        lg: 'rounded-lg',\n        xl: 'rounded-xl',\n        '2xl': 'rounded-2xl',\n        '3xl': 'rounded-3xl',\n        full: 'rounded-[28px]',\n      },\n      \n      // Card glow effect\n      glow: {\n        none: '',\n        subtle: 'motion-card-glow-subtle', // Custom class for JS manipulation\n        medium: 'motion-card-glow-medium', // Custom class for JS manipulation\n        strong: 'motion-card-glow-strong', // Custom class for JS manipulation\n      },\n      \n      // Card highlight effect (shine)\n      highlight: {\n        none: '',\n        subtle: 'motion-card-highlight-subtle', // Custom class for JS manipulation\n        medium: 'motion-card-highlight-medium', // Custom class for JS manipulation\n        strong: 'motion-card-highlight-strong', // Custom class for JS manipulation\n      },\n      \n      // Additional effects\n      effect: {\n        none: '',\n        float: 'animate-float',\n        shimmer: 'before:absolute before:inset-0 before:-translate-x-full before:animate-shimmer before:bg-gradient-to-r before:from-transparent before:via-white/10 before:to-transparent overflow-hidden',\n        border: 'motion-card-border', // Custom class for JS manipulation\n        'multi-border': 'motion-card-multi-border', // Custom class for JS manipulation\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      intensity: 'medium',\n      rounded: 'lg',\n      glow: 'none',\n      highlight: 'none',\n      effect: 'none',\n    },\n  }\n);\n\n// Extract variant props from cva\nexport type MotionCardVariantProps = VariantProps<typeof motionCardVariants>;\n\n// Theme defaults object type\ninterface ThemeDefaults {\n  variant: MotionCardVariant;\n  intensity: MotionCardIntensity;\n  rounded: MotionCardRounded;\n  glow: MotionCardGlow;\n  highlight: MotionCardHighlight;\n  effect: MotionCardEffect;\n}\n\n// Helper function to get default card properties based on the theme\nconst getThemeDefaults = (\n  theme: string,\n  variant?: MotionCardVariant,\n  intensity?: MotionCardIntensity,\n  rounded?: MotionCardRounded,\n  glow?: MotionCardGlow,\n  highlight?: MotionCardHighlight,\n  effect?: MotionCardEffect\n): ThemeDefaults => {\n  let effectiveVariant: MotionCardVariant = variant || 'default';\n  let effectiveIntensity: MotionCardIntensity = intensity || 'medium';\n  let effectiveRounded: MotionCardRounded = rounded || 'lg';\n  let effectiveGlow: MotionCardGlow = glow || 'none';\n  let effectiveHighlight: MotionCardHighlight = highlight || 'none';\n  let effectiveEffect: MotionCardEffect = effect || 'none';\n  \n  // Adjust styles based on active theme\n  if (theme === 'techDark' && !variant) {\n    // Default for tech dark theme\n    effectiveVariant = 'dark';\n    if (!intensity) effectiveIntensity = 'medium';\n    if (!rounded) effectiveRounded = 'xl';\n    if (!glow) effectiveGlow = 'medium';\n    if (!highlight) effectiveHighlight = 'subtle';\n    if (!effect) effectiveEffect = 'none';\n  } \n  else if (theme === 'glass' && !variant) {\n    // Default for glass theme\n    effectiveVariant = 'glass-premium';\n    if (!intensity) effectiveIntensity = 'medium';\n    if (!rounded) effectiveRounded = 'xl';\n    if (!glow) effectiveGlow = 'subtle';\n    if (!highlight) effectiveHighlight = 'medium';\n    if (!effect) effectiveEffect = 'none';\n  }\n  \n  return {\n    variant: effectiveVariant,\n    intensity: effectiveIntensity,\n    rounded: effectiveRounded,\n    glow: effectiveGlow,\n    highlight: effectiveHighlight,\n    effect: effectiveEffect,\n  };\n};\n\n// Get intensity factor based on the intensity prop\nconst getIntensityFactor = (intensity: MotionCardIntensity | undefined): number => {\n  switch (intensity) {\n    case 'subtle': return 10;\n    case 'medium': return 20;\n    case 'strong': return 35;\n    default: return 20;\n  }\n};\n\n// Get glow intensity based on the glow prop\nconst getGlowIntensity = (glow: MotionCardGlow | undefined): number => {\n  switch (glow) {\n    case 'subtle': return 0.5;\n    case 'medium': return 1;\n    case 'strong': return 1.5;\n    default: return 0;\n  }\n};\n\n// Get highlight intensity based on the highlight prop\nconst getHighlightIntensity = (highlight: MotionCardHighlight | undefined): number => {\n  switch (highlight) {\n    case 'subtle': return 0.1;\n    case 'medium': return 0.2;\n    case 'strong': return 0.3;\n    default: return 0;\n  }\n};\n\n// Props interface for the MotionCard component\nexport interface MotionCardProps extends HTMLAttributes<HTMLDivElement>, MotionCardVariantProps {\n  // Card appearance props\n  variant?: MotionCardVariant;\n  intensity?: MotionCardIntensity;\n  rounded?: MotionCardRounded;\n  glow?: MotionCardGlow;\n  highlight?: MotionCardHighlight;\n  effect?: MotionCardEffect;\n  className?: string;\n  style?: CSSProperties;\n  children?: ReactNode;\n  \n  // Card behavior props\n  resetOnLeave?: boolean;\n  disableRotation?: boolean;\n  disableScale?: boolean;\n  disableGlow?: boolean;\n  disableHighlight?: boolean;\n  glowColor?: string;\n}\n\n/**\n * 3D Motion Card Component\n * A card component that responds to mouse movement with 3D rotation effects\n */\nexport const MotionCard: React.FC<MotionCardProps> = ({\n  // Card appearance props\n  variant,\n  intensity,\n  rounded,\n  glow,\n  highlight,\n  effect,\n  className = '',\n  style = {},\n  children,\n  \n  // Card behavior props\n  resetOnLeave = true,\n  disableRotation = false,\n  disableScale = false,\n  disableGlow = false,\n  disableHighlight = false,\n  glowColor = 'rgba(100, 130, 255, 0.4)',\n  \n  // Other props\n  ...props\n}) => {\n  // Get theme context\n  interface ThemeContext {\n    theme: string;\n    [key: string]: any;\n  }\n  \n  const { theme } = useTheme() as ThemeContext;\n  const cardRef = useRef<HTMLDivElement>(null);\n  const glowRef = useRef<HTMLDivElement>(null);\n  const highlightRef = useRef<HTMLDivElement>(null);\n  const [position, setPosition] = useState<Position>({ x: 0, y: 0 });\n  const [isHovered, setIsHovered] = useState<boolean>(false);\n  \n  // Get theme-specific defaults\n  const {\n    variant: effectiveVariant,\n    intensity: effectiveIntensity,\n    rounded: effectiveRounded,\n    glow: effectiveGlow,\n    highlight: effectiveHighlight,\n    effect: effectiveEffect,\n  } = getThemeDefaults(theme, variant, intensity, rounded, glow, highlight, effect);\n  \n  // Get intensity factors\n  const intensityFactor = getIntensityFactor(effectiveIntensity);\n  const glowIntensity = getGlowIntensity(effectiveGlow);\n  const highlightIntensity = getHighlightIntensity(effectiveHighlight);\n  \n  // Card classes\n  const cardClasses = motionCardVariants({\n    variant: effectiveVariant,\n    intensity: effectiveIntensity,\n    rounded: effectiveRounded,\n    glow: disableGlow ? 'none' : effectiveGlow,\n    highlight: disableHighlight ? 'none' : effectiveHighlight,\n    effect: effectiveEffect,\n    className,\n  });\n  \n  // Update card transform based on mouse position\n  const updateCardTransform = (e: React.MouseEvent<HTMLDivElement>): void => {\n    if (!cardRef.current || disableRotation) return;\n    \n    const card = cardRef.current;\n    const rect = card.getBoundingClientRect();\n    \n    // Calculate cursor position within the card (from -0.5 to 0.5)\n    const x = (e.clientX - rect.left) / rect.width - 0.5;\n    const y = (e.clientY - rect.top) / rect.height - 0.5;\n    \n    // Set the position for rendering\n    setPosition({ x, y });\n  };\n  \n  // Reset card transform when mouse leaves\n  const resetCardTransform = (): void => {\n    if (resetOnLeave) {\n      setPosition({ x: 0, y: 0 });\n    }\n    setIsHovered(false);\n  };\n  \n  // Handle mouse enter\n  const handleMouseEnter = (): void => {\n    setIsHovered(true);\n  };\n  \n  // Update card transform on mouse move or position change\n  useEffect(() => {\n    if (!cardRef.current) return;\n    \n    const { x, y } = position;\n    const card = cardRef.current;\n    \n    // Calculate rotation based on intensity\n    const rotateY = disableRotation ? 0 : x * intensityFactor;\n    const rotateX = disableRotation ? 0 : -y * intensityFactor;\n    \n    // Calculate scale based on hover state\n    const scale = isHovered && !disableScale ? 1.02 : 1;\n    \n    // Apply transformations\n    card.style.transform = `\n      perspective(1000px) \n      rotateX(${rotateX}deg) \n      rotateY(${rotateY}deg)\n      scale(${scale})\n    `;\n    \n    // Update glow effect\n    if (glowRef.current && !disableGlow && glowIntensity > 0) {\n      const glow = glowRef.current;\n      const glowX = 50 + x * 50; // 0-100%\n      const glowY = 50 + y * 50; // 0-100%\n      \n      glow.style.background = `radial-gradient(\n        circle at ${glowX}% ${glowY}%, \n        ${glowColor}, \n        transparent ${60 / glowIntensity}%\n      )`;\n      \n      glow.style.opacity = isHovered ? glowIntensity.toString() : '0';\n    }\n    \n    // Update highlight effect\n    if (highlightRef.current && !disableHighlight && highlightIntensity > 0) {\n      const highlight = highlightRef.current;\n      const highlightX = 50 + x * 100; // -50% to 150%\n      const highlightY = 50 + y * 100; // -50% to 150%\n      \n      highlight.style.background = `radial-gradient(\n        circle at ${highlightX}% ${highlightY}%, \n        rgba(255, 255, 255, ${highlightIntensity}), \n        transparent 25%\n      )`;\n      \n      highlight.style.opacity = isHovered ? '1' : '0';\n    }\n  }, [position, isHovered, intensityFactor, glowIntensity, highlightIntensity, disableRotation, disableScale, disableGlow, disableHighlight, glowColor]);\n  \n  return (\n    <div\n      ref={cardRef}\n      className={`${cardClasses} transform-gpu`}\n      onMouseMove={updateCardTransform}\n      onMouseLeave={resetCardTransform}\n      onMouseEnter={handleMouseEnter}\n      style={{\n        transformStyle: 'preserve-3d',\n        ...style\n      }}\n      {...props}\n    >\n      {/* Glow effect overlay */}\n      {!disableGlow && glowIntensity > 0 && (\n        <div \n          ref={glowRef}\n          className=\"absolute inset-0 opacity-0 transition-opacity duration-300 rounded-inherit z-[-1]\"\n          style={{ borderRadius: 'inherit' }}\n        />\n      )}\n      \n      {/* Highlight effect overlay */}\n      {!disableHighlight && highlightIntensity > 0 && (\n        <div \n          ref={highlightRef}\n          className=\"absolute inset-0 opacity-0 transition-opacity duration-300 pointer-events-none mix-blend-overlay\"\n          style={{ borderRadius: 'inherit' }}\n        />\n      )}\n      \n      {/* Content - giving it a subtle transform to enhance 3D effect */}\n      <div \n        className=\"relative z-10 motion-card-content\"\n        style={{ \n          transform: disableRotation ? 'none' : 'translateZ(20px)',\n          transformStyle: 'preserve-3d'\n        }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\n// Props interface for the MotionCardContent component\nexport interface MotionCardContentProps extends HTMLAttributes<HTMLDivElement> {\n  className?: string;\n  children?: ReactNode;\n}\n\n// Content area for the motion card\nexport const MotionCardContent: React.FC<MotionCardContentProps> = ({ \n  className = '', \n  children, \n  ...props \n}) => {\n  const contentClasses = `p-5 ${className}`;\n  \n  return (\n    <div className={contentClasses} {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Props interface for the MotionCardLayer component\nexport interface MotionCardLayerProps extends HTMLAttributes<HTMLDivElement> {\n  className?: string;\n  children?: ReactNode;\n  depth?: number;\n  disableDepth?: boolean;\n}\n\n// For creating layered 3D content inside the card\nexport const MotionCardLayer: React.FC<MotionCardLayerProps> = ({ \n  className = '', \n  children, \n  depth = 20, \n  disableDepth = false,\n  ...props \n}) => {\n  return (\n    <div \n      className={`relative ${className}`}\n      style={{ \n        transform: disableDepth ? 'none' : `translateZ(${depth}px)`,\n        transformStyle: 'preserve-3d'\n      }}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport { motionCardVariants };"],"names":["motionCardVariants","cva","getThemeDefaults","theme","variant","intensity","rounded","glow","highlight","effect","effectiveVariant","effectiveIntensity","effectiveRounded","effectiveGlow","effectiveHighlight","effectiveEffect","getIntensityFactor","getGlowIntensity","getHighlightIntensity","MotionCard","className","style","children","resetOnLeave","disableRotation","disableScale","disableGlow","disableHighlight","glowColor","props","useTheme","cardRef","useRef","glowRef","highlightRef","position","setPosition","useState","isHovered","setIsHovered","intensityFactor","glowIntensity","highlightIntensity","cardClasses","updateCardTransform","e","rect","x","y","resetCardTransform","handleMouseEnter","useEffect","card","rotateY","rotateX","scale","glowX","glowY","highlightX","highlightY","jsxs","jsx","MotionCardContent","contentClasses","MotionCardLayer","depth","disableDepth"],"mappings":"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"}