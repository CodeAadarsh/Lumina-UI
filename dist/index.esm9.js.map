{"version":3,"file":"index.esm9.js","sources":["../src/components/ui/ScratchCard.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect, useCallback, ReactNode } from 'react';\nimport { useTheme } from '../../providers/ThemeProvider';\nimport { cn } from \"@/lib/utils\";\n\n// Define theme types\nexport type ScratchCardTheme = 'default' | 'enterprise' | 'techDark' | 'glass' | 'neumorphic' | 'glow';\nexport type ScratchCardVariant = 'default' | 'prize' | 'ticket' | 'coupon';\n\n// Theme context type\ninterface ThemeContextType {\n  themeObject: Record<string, unknown>;\n  theme: ScratchCardTheme;\n}\n\n// Theme styles interface\ninterface ThemeStyles {\n  background: string;\n  foreground: string;\n  borderColor: string;\n  shadow: string;\n  brushColor: string;\n  blur?: string;\n  glow?: string;\n  shadowInset?: string;\n  pattern?: string;\n  patternSize?: string;\n}\n\n// Component props interface\nexport interface ScratchCardProps extends React.HTMLAttributes<HTMLDivElement> {\n  /** Custom class name for the component */\n  className?: string;\n  /** Width of the scratch card in pixels */\n  width?: number;\n  /** Height of the scratch card in pixels */\n  height?: number;\n  /** Size of the scratching brush in pixels */\n  brushSize?: number;\n  /** URL of the image to show on cover (before scratching) */\n  coverImage?: string;\n  /** Background color of the cover layer */\n  coverColor?: string;\n  /** URL of the image to reveal after scratching */\n  revealImage?: string;\n  /** Content to reveal after scratching (JSX) */\n  revealContent?: ReactNode;\n  /** Percentage threshold at which the card is considered fully revealed (0-100) */\n  completionThreshold?: number;\n  /** Callback function triggered when scratching reaches the completion threshold */\n  onComplete?: () => void;\n  /** Whether the scratch card is disabled */\n  disabled?: boolean;\n  /** Whether to immediately reveal the entire card */\n  revealAll?: boolean;\n  /** Theme to apply to the scratch card */\n  theme?: ScratchCardTheme;\n  /** Visual variant of the scratch card */\n  variant?: ScratchCardVariant;\n}\n\n// Point interface for scratch coordinates\ninterface Point {\n  x: number;\n  y: number;\n}\n\nexport const ScratchCard: React.FC<ScratchCardProps> = ({\n  className,\n  width = 300,\n  height = 150,\n  brushSize = 20,\n  coverImage,\n  coverColor,\n  revealImage,\n  revealContent,\n  completionThreshold = 70,\n  onComplete,\n  disabled = false,\n  revealAll = false,\n  theme: themeProp,\n  variant = \"default\",\n  ...props\n}) => {\n  // Get theme context\n  const { themeObject, theme: contextTheme } = useTheme() as ThemeContextType;\n  const activeTheme = themeProp || contextTheme;\n  \n  // Refs\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const containerRef = useRef<HTMLDivElement | null>(null);\n  const isDrawingRef = useRef<boolean>(false);\n  \n  // State\n  const [isRevealed, setIsRevealed] = useState<boolean>(false);\n  const [percentScratched, setPercentScratched] = useState<number>(0);\n  const [lastPoint, setLastPoint] = useState<Point | null>(null);\n  const [canvasContext, setCanvasContext] = useState<CanvasRenderingContext2D | null>(null);\n  \n  // Theme-specific style values\n  const getThemeStyles = (): ThemeStyles => {\n    const baseStyles: ThemeStyles = {\n      background: '#f5f5f5',\n      foreground: '#333333',\n      borderColor: '#e0e0e0',\n      shadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n      brushColor: 'rgba(255, 255, 255, 0)',\n    };\n    \n    switch (activeTheme) {\n      case 'enterprise':\n        return {\n          background: coverColor || '#f8f9fa',\n          foreground: '#111827',\n          borderColor: '#e5e7eb',\n          shadow: '0 4px 10px rgba(0, 0, 0, 0.04)',\n          brushColor: 'rgba(255, 255, 255, 0)',\n        };\n      case 'techDark':\n        return {\n          background: coverColor || '#1f2937',\n          foreground: '#f9fafb',\n          borderColor: '#374151',\n          shadow: '0 4px 20px rgba(0, 0, 0, 0.3)',\n          brushColor: 'rgba(255, 255, 255, 0)',\n          glow: '0 0 15px rgba(139, 92, 246, 0.3)',\n        };\n      case 'glass':\n        return {\n          background: coverColor || 'rgba(15, 23, 42, 0.3)',\n          foreground: '#ffffff',\n          borderColor: 'rgba(255, 255, 255, 0.1)',\n          shadow: '0 8px 32px rgba(0, 0, 0, 0.1)',\n          brushColor: 'rgba(255, 255, 255, 0)',\n          blur: '8px',\n        };\n      case 'neumorphic':\n        return {\n          background: coverColor || '#e0e5ec',\n          foreground: '#333333',\n          borderColor: 'transparent',\n          shadow: '8px 8px 16px #bebebe, -8px -8px 16px #ffffff',\n          shadowInset: 'inset 5px 5px 10px #bebebe, inset -5px -5px 10px #ffffff',\n          brushColor: 'rgba(255, 255, 255, 0)',\n        };\n      case 'glow':\n        return {\n          background: coverColor || '#111827',\n          foreground: '#ffffff',\n          borderColor: 'rgba(59, 130, 246, 0.3)',\n          shadow: '0 0 15px rgba(59, 130, 246, 0.3), 0 0 30px rgba(59, 130, 246, 0.2)',\n          brushColor: 'rgba(255, 255, 255, 0)',\n        };\n      default:\n        return baseStyles;\n    }\n  };\n  \n  // Get variant-specific styles\n  const getVariantStyles = (themeStyles: ThemeStyles): ThemeStyles => {\n    switch (variant) {\n      case 'prize':\n        return {\n          ...themeStyles,\n          background: coverColor || (activeTheme === 'techDark' ? '#6d28d9' : activeTheme === 'enterprise' ? '#3b82f6' : activeTheme === 'glass' ? 'rgba(139, 92, 246, 0.4)' : activeTheme === 'neumorphic' ? '#dee4ec' : '#4f46e5'),\n          pattern: 'radial-gradient(circle at center, transparent 0%, transparent 5%, rgba(255, 255, 255, 0.1) 5.1%, rgba(255, 255, 255, 0.2) 10%, transparent 10.1%)',\n          patternSize: '20px 20px',\n        };\n      case 'ticket':\n        return {\n          ...themeStyles,\n          pattern: 'repeating-linear-gradient(45deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.1) 10px, rgba(255, 255, 255, 0.2) 10px, rgba(255, 255, 255, 0.2) 20px)',\n        };\n      case 'coupon':\n        return {\n          ...themeStyles,\n          pattern: 'repeating-radial-gradient(circle at 50% 50%, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0) 15px, rgba(255, 255, 255, 0.1) 15px, rgba(255, 255, 255, 0.1) 30px)',\n        };\n      default:\n        return themeStyles;\n    }\n  };\n  \n  // Initialize canvas drawing\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    // Set canvas size\n    canvas.width = width;\n    canvas.height = height;\n    \n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    \n    setCanvasContext(ctx);\n    \n    // Set initial state\n    // Apply styles\n    const themeStyles = getThemeStyles();\n    const variantStyles = getVariantStyles(themeStyles);\n    \n    // Draw background\n    ctx.fillStyle = variantStyles.background;\n    ctx.fillRect(0, 0, width, height);\n    \n    // Draw pattern if defined\n    if (variantStyles.pattern) {\n      ctx.save();\n      const patternCanvas = document.createElement('canvas');\n      const patternCtx = patternCanvas.getContext('2d');\n      if (!patternCtx) {\n        ctx.restore();\n        return;\n      }\n      \n      patternCanvas.width = 40;\n      patternCanvas.height = 40;\n      \n      // Create gradient or pattern\n      const gradient = patternCtx.createLinearGradient(0, 0, 40, 40);\n      gradient.addColorStop(0, 'rgba(255, 255, 255, 0.1)');\n      gradient.addColorStop(1, 'rgba(255, 255, 255, 0.2)');\n      patternCtx.fillStyle = gradient;\n      patternCtx.fillRect(0, 0, 40, 40);\n      \n      const pattern = ctx.createPattern(patternCanvas, 'repeat');\n      if (pattern) {\n        ctx.fillStyle = pattern;\n        ctx.fillRect(0, 0, width, height);\n      }\n      ctx.restore();\n    }\n    \n    // Draw cover image if provided\n    if (coverImage) {\n      const img = new Image();\n      img.onload = () => {\n        if (ctx) {\n          ctx.drawImage(img, 0, 0, width, height);\n        }\n      };\n      img.src = coverImage;\n    }\n    \n    // Draw stylistic elements based on theme variant\n    if (variant === 'ticket') {\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.3)';\n      ctx.setLineDash([5, 5]);\n      ctx.beginPath();\n      ctx.moveTo(0, 15);\n      ctx.lineTo(width, 15);\n      ctx.stroke();\n      \n      ctx.beginPath();\n      ctx.moveTo(0, height - 15);\n      ctx.lineTo(width, height - 15);\n      ctx.stroke();\n    } else if (variant === 'coupon') {\n      // Draw coupon edges\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.3)';\n      ctx.setLineDash([]);\n      \n      const circleRadius = 8;\n      const circles = Math.floor(height / (circleRadius * 2 + 4));\n      const gap = (height - circles * circleRadius * 2) / (circles + 1);\n      \n      for (let i = 0; i < circles; i++) {\n        const y = gap + i * (gap + circleRadius * 2) + circleRadius;\n        \n        // Left side circle\n        ctx.beginPath();\n        ctx.arc(-circleRadius / 2, y, circleRadius, 0, Math.PI * 2);\n        ctx.stroke();\n        \n        // Right side circle\n        ctx.beginPath();\n        ctx.arc(width + circleRadius / 2, y, circleRadius, 0, Math.PI * 2);\n        ctx.stroke();\n      }\n    }\n\n    // Handle reveal all\n    if (revealAll) {\n      handleRevealAll();\n    }\n  }, [width, height, coverImage, coverColor, revealAll, activeTheme, variant]);\n  \n  // Setup event handlers\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || disabled) return;\n    \n    const handleMouseDown = (e: MouseEvent) => {\n      isDrawingRef.current = true;\n      const point = getPointFromEvent(e);\n      setLastPoint(point);\n      drawLine(point, point);\n    };\n    \n    const handleMouseMove = (e: MouseEvent) => {\n      if (!isDrawingRef.current) return;\n      \n      const currentPoint = getPointFromEvent(e);\n      drawLine(lastPoint, currentPoint);\n      setLastPoint(currentPoint);\n      \n      // Check scratch percentage\n      calculateScratchPercentage();\n    };\n    \n    const handleMouseUp = () => {\n      isDrawingRef.current = false;\n    };\n    \n    const handleMouseOut = () => {\n      isDrawingRef.current = false;\n    };\n    \n    // Touch events\n    const handleTouchStart = (e: TouchEvent) => {\n      e.preventDefault();\n      handleMouseDown(e.touches[0] as unknown as MouseEvent);\n    };\n    \n    const handleTouchMove = (e: TouchEvent) => {\n      e.preventDefault();\n      handleMouseMove(e.touches[0] as unknown as MouseEvent);\n    };\n    \n    const handleTouchEnd = (e: TouchEvent) => {\n      e.preventDefault();\n      handleMouseUp();\n    };\n    \n    // Add event listeners\n    canvas.addEventListener('mousedown', handleMouseDown);\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('mouseup', handleMouseUp);\n    canvas.addEventListener('mouseout', handleMouseOut);\n    \n    // Touch events\n    canvas.addEventListener('touchstart', handleTouchStart);\n    canvas.addEventListener('touchmove', handleTouchMove);\n    canvas.addEventListener('touchend', handleTouchEnd);\n    \n    // Cleanup\n    return () => {\n      canvas.removeEventListener('mousedown', handleMouseDown);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('mouseup', handleMouseUp);\n      canvas.removeEventListener('mouseout', handleMouseOut);\n      \n      canvas.removeEventListener('touchstart', handleTouchStart);\n      canvas.removeEventListener('touchmove', handleTouchMove);\n      canvas.removeEventListener('touchend', handleTouchEnd);\n    };\n  }, [disabled, lastPoint]);\n  \n  // Completion tracking\n  useEffect(() => {\n    if (percentScratched >= completionThreshold && !isRevealed) {\n      setIsRevealed(true);\n      if (onComplete) {\n        onComplete();\n      }\n    }\n  }, [percentScratched, completionThreshold, isRevealed, onComplete]);\n  \n  // Helper to get point from mouse or touch event\n  const getPointFromEvent = (e: MouseEvent | Touch): Point => {\n    const canvas = canvasRef.current;\n    if (!canvas) return { x: 0, y: 0 };\n    \n    const rect = canvas.getBoundingClientRect();\n    return {\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    };\n  };\n  \n  // Draw scratch line\n  const drawLine = (start: Point | null, end: Point | null): void => {\n    if (!canvasContext || !start || !end) return;\n    \n    canvasContext.globalCompositeOperation = 'destination-out';\n    canvasContext.strokeStyle = 'rgba(255, 255, 255, 1)';\n    canvasContext.lineWidth = brushSize;\n    canvasContext.lineCap = 'round';\n    canvasContext.lineJoin = 'round';\n    \n    canvasContext.beginPath();\n    canvasContext.moveTo(start.x, start.y);\n    canvasContext.lineTo(end.x, end.y);\n    canvasContext.stroke();\n  };\n  \n  // Calculate scratch percentage\n  const calculateScratchPercentage = (): void => {\n    if (!canvasContext) return;\n    \n    const imageData = canvasContext.getImageData(0, 0, width, height);\n    const pixels = imageData.data;\n    let transparentPixels = 0;\n    \n    // Count fully transparent pixels (alpha = 0)\n    for (let i = 3; i < pixels.length; i += 4) {\n      if (pixels[i] === 0) {\n        transparentPixels++;\n      }\n    }\n    \n    const totalPixels = width * height;\n    const percentTransparent = (transparentPixels / totalPixels) * 100;\n    setPercentScratched(percentTransparent);\n  };\n  \n  // Reveal the entire card\n  const handleRevealAll = useCallback((): void => {\n    if (!canvasContext) return;\n    \n    canvasContext.globalCompositeOperation = 'destination-out';\n    canvasContext.fillRect(0, 0, width, height);\n    setIsRevealed(true);\n    setPercentScratched(100);\n    \n    if (onComplete) {\n      onComplete();\n    }\n  }, [canvasContext, width, height, onComplete]);\n  \n  // Reset the scratch card\n  const handleReset = useCallback((): void => {\n    if (!canvasContext) return;\n    \n    // Redraw the cover\n    const themeStyles = getThemeStyles();\n    const variantStyles = getVariantStyles(themeStyles);\n    \n    canvasContext.globalCompositeOperation = 'source-over';\n    canvasContext.fillStyle = variantStyles.background;\n    canvasContext.fillRect(0, 0, width, height);\n    \n    if (coverImage) {\n      const img = new Image();\n      img.onload = () => {\n        if (canvasContext) {\n          canvasContext.drawImage(img, 0, 0, width, height);\n        }\n      };\n      img.src = coverImage;\n    }\n    \n    setIsRevealed(false);\n    setPercentScratched(0);\n  }, [canvasContext, width, height, coverImage, activeTheme, variant]);\n  \n  // Get theme-specific container styles\n  const containerStyles = getThemeStyles();\n  const variantStyles = getVariantStyles(containerStyles);\n  \n  return (\n    <div \n      ref={containerRef}\n      className={cn(\n        \"relative rounded-lg overflow-hidden\",\n        className\n      )}\n      style={{\n        width,\n        height,\n        borderRadius: '0.5rem',\n        border: `1px solid ${variantStyles.borderColor}`,\n        boxShadow: variantStyles.shadow,\n        ...(variantStyles.blur ? { backdropFilter: `blur(${variantStyles.blur})` } : {}),\n      }}\n      {...props}\n    >\n      {/* Content to reveal */}\n      <div \n        className=\"absolute inset-0 flex items-center justify-center z-0 p-4\"\n        style={{\n          color: variantStyles.foreground,\n          background: activeTheme === 'glass' ? 'rgba(255, 255, 255, 0.1)' : \n                    activeTheme === 'techDark' ? '#111827' : \n                    activeTheme === 'neumorphic' ? '#e0e5ec' :\n                    activeTheme === 'glow' ? '#030712' : '#ffffff',\n        }}\n      >\n        {revealImage ? (\n          <img src={revealImage} alt=\"Revealed content\" className=\"max-w-full max-h-full object-contain\" />\n        ) : (\n          <div className=\"text-center\">\n            {revealContent}\n          </div>\n        )}\n      </div>\n      \n      {/* Scratch canvas */}\n      <canvas\n        ref={canvasRef}\n        className={cn(\n          \"absolute inset-0 cursor-pointer z-10\",\n          { \"cursor-not-allowed\": disabled }\n        )}\n        style={{\n          opacity: isRevealed && revealAll ? 0 : 1,\n          transition: 'opacity 0.5s ease-in-out',\n        }}\n      />\n      \n      {/* Progress indicator (optional) */}\n      {false && (\n        <div className=\"absolute bottom-2 right-2 text-xs bg-black/50 text-white px-2 py-1 rounded\">\n          {Math.floor(percentScratched)}%\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScratchCard;"],"names":["ScratchCard","className","width","height","brushSize","coverImage","coverColor","revealImage","revealContent","completionThreshold","onComplete","disabled","revealAll","themeProp","variant","props","themeObject","contextTheme","useTheme","activeTheme","canvasRef","useRef","containerRef","isDrawingRef","isRevealed","setIsRevealed","useState","percentScratched","setPercentScratched","lastPoint","setLastPoint","canvasContext","setCanvasContext","getThemeStyles","baseStyles","getVariantStyles","themeStyles","useEffect","canvas","ctx","variantStyles","patternCanvas","patternCtx","gradient","pattern","img","circleRadius","circles","gap","i","y","handleRevealAll","handleMouseDown","e","point","getPointFromEvent","drawLine","handleMouseMove","currentPoint","calculateScratchPercentage","handleMouseUp","handleMouseOut","handleTouchStart","handleTouchMove","handleTouchEnd","rect","start","end","pixels","transparentPixels","totalPixels","percentTransparent","useCallback","containerStyles","jsxs","cn","jsx"],"mappings":"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"}