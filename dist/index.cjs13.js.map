{"version":3,"file":"index.cjs13.js","sources":["../src/components/ui/AnimatedTestimonialSlider.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { useSafeTheme } from '../../hooks/useSafeTheme';\nimport { cn } from '../../utils/cn';\n\n// Define theme types\nexport type TestimonialTheme = 'enterprise' | 'techDark' | 'glass' | 'neumorphicLight' | 'glow' | '3d';\nexport type TestimonialPosition = 'front' | 'middle' | 'back' | 'hidden';\n\n// Define the testimonial item type\nexport interface TestimonialItem {\n  name: string;\n  title?: string;\n  quote: string;\n  image?: string;\n}\n\n// Define the variants with class-variance-authority\nconst testimonialSliderVariants = cva(\n  // Base styles for all Testimonial components\n  \"relative w-full max-w-screen-xl mx-auto flex flex-col md:flex-row items-center md:items-start justify-between gap-12 px-4 py-12\",\n  {\n    variants: {\n      // Theme variants\n      theme: {\n        enterprise: \"text-gray-800\",\n        techDark: \"text-white\",\n        glass: \"text-white\",\n        neumorphicLight: \"text-gray-700\",\n        glow: \"text-white\",\n        '3d': \"text-gray-900 dark:text-white\",\n      },\n    },\n    defaultVariants: {\n      theme: 'techDark',\n    },\n  }\n);\n\n// Content container variants\nconst contentContainerVariants = cva(\n  \"w-full md:w-3/5 flex flex-col justify-center md:pr-8\",\n  {\n    variants: {\n      theme: {\n        enterprise: \"text-gray-800\",\n        techDark: \"text-white\",\n        glass: \"text-white\",\n        neumorphicLight: \"text-gray-700\",\n        glow: \"text-white\",\n        '3d': \"text-gray-900 dark:text-white\",\n      },\n    },\n    defaultVariants: {\n      theme: 'techDark',\n    },\n  }\n);\n\n// Image stack container variants\nconst imageStackContainerVariants = cva(\n  \"relative w-full md:w-2/5 flex items-center justify-center py-8\",\n  {\n    variants: {\n      theme: {\n        enterprise: \"\",\n        techDark: \"\",\n        glass: \"\",\n        neumorphicLight: \"\",\n        glow: \"\",\n        '3d': \"\",\n      },\n    },\n    defaultVariants: {\n      theme: 'techDark',\n    },\n  }\n);\n\n// Testimonial image card variants\nconst testimonialImageCardVariants = cva(\n  \"absolute overflow-hidden transition-all duration-900 ease-out transform-gpu rounded-3xl shadow-lg\",\n  {\n    variants: {\n      // Theme variants\n      theme: {\n        enterprise: \"bg-white border border-gray-200 shadow-xl\",\n        techDark: \"bg-gray-900 border border-gray-800 shadow-2xl\",\n        glass: \"glass-effect border border-white/30 shadow-xl backdrop-blur-lg\",\n        neumorphicLight: \"bg-[#e0e5ec] shadow-[20px_20px_60px_#bebebe,-20px_-20px_60px_#ffffff] border-none\",\n        glow: \"bg-gray-900/90 border border-blue-500/30 shadow-2xl shadow-[0_0_15px_rgba(59,130,246,0.5),0_0_30px_rgba(59,130,246,0.3)]\",\n        '3d': \"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 shadow-xl\",\n      },\n      // Card position variants\n      position: {\n        front: \"z-30 rotate-0 translate-y-0 translate-x-0 scale-100 opacity-100\",\n        middle: \"z-20 rotate-[-8deg] translate-y-[8%] translate-x-[-8%] scale-[0.9] opacity-75\",\n        back: \"z-10 rotate-[-16deg] translate-y-[16%] translate-x-[-16%] scale-[0.8] opacity-50\",\n        hidden: \"opacity-0 translate-x-[60%] scale-[0.7] z-0\",\n      },\n    },\n    compoundVariants: [\n      // Special styling for front card in each theme\n      {\n        theme: \"enterprise\",\n        position: \"front\",\n        className: \"shadow-2xl\", \n      },\n      {\n        theme: \"techDark\",\n        position: \"front\",\n        className: \"shadow-purple-glow\", \n      },\n      {\n        theme: \"glass\",\n        position: \"front\",\n        className: \"shadow-white-glow border-white/50\", \n      },\n      {\n        theme: \"neumorphicLight\",\n        position: \"front\",\n        className: \"shadow-[30px_30px_80px_#bebebe,-30px_-30px_80px_#ffffff]\", \n      },\n      {\n        theme: \"glow\",\n        position: \"front\",\n        className: \"animate-glow border-blue-500/50\", \n      },\n      {\n        theme: \"3d\",\n        position: \"front\",\n        className: \"shadow-2xl\", \n      },\n    ],\n    defaultVariants: {\n      theme: 'techDark',\n      position: 'front',\n    },\n  }\n);\n\n// Quote container variants\nconst quoteContainerVariants = cva(\n  \"mb-8 p-6 rounded-lg\",\n  {\n    variants: {\n      theme: {\n        enterprise: \"bg-white/5 border border-gray-200/20\",\n        techDark: \"bg-gray-800/30 border border-gray-700/30\",\n        glass: \"bg-white/10 backdrop-blur-sm border border-white/10\",\n        neumorphicLight: \"bg-[#e0e5ec] shadow-[inset_3px_3px_6px_#b8b9be,inset_-3px_-3px_6px_#ffffff]\",\n        glow: \"bg-gray-800/40 border border-blue-500/20\",\n        '3d': \"bg-white/10 dark:bg-gray-800/40 border border-gray-200/20 dark:border-gray-700/30\",\n      },\n    },\n    defaultVariants: {\n      theme: 'techDark',\n    },\n  }\n);\n\n// Navigation button variants\nconst navButtonVariants = cva(\n  \"flex items-center justify-center w-10 h-10 rounded-full focus:outline-none transition-all duration-300\",\n  {\n    variants: {\n      // Theme variants\n      theme: {\n        enterprise: \"bg-white text-gray-800 border border-gray-200 shadow-md hover:shadow-lg hover:bg-gray-50\",\n        techDark: \"bg-gray-800 text-white border border-gray-700 hover:bg-gray-700\",\n        glass: \"bg-white/20 backdrop-blur-md text-white border border-white/30 hover:bg-white/30\",\n        neumorphicLight: \"bg-[#e0e5ec] text-gray-700 shadow-[3px_3px_6px_#b8b9be,-3px_-3px_6px_#ffffff] hover:shadow-[inset_3px_3px_6px_#b8b9be,inset_-3px_-3px_6px_#ffffff]\",\n        glow: \"bg-gray-900 text-white border border-blue-500/30 shadow-[0_0_10px_rgba(59,130,246,0.3)] hover:shadow-[0_0_15px_rgba(59,130,246,0.5)]\",\n        '3d': \"bg-white dark:bg-gray-800 text-gray-900 dark:text-white border border-gray-200 dark:border-gray-700 shadow-md hover:shadow-lg\",\n      },\n    },\n    defaultVariants: {\n      theme: 'techDark',\n    },\n  }\n);\n\n// Create VariantProps interfaces\nexport type TestimonialSliderVariantsProps = VariantProps<typeof testimonialSliderVariants>;\nexport type TestimonialImageCardVariantsProps = VariantProps<typeof testimonialImageCardVariants>;\n\n// Define component props, extending the variant props\nexport interface AnimatedTestimonialSliderProps extends \n  React.HTMLAttributes<HTMLDivElement>,\n  TestimonialSliderVariantsProps {\n  testimonials: TestimonialItem[];\n  autoplay?: boolean;\n  autoplaySpeed?: number;\n}\n\nexport const AnimatedTestimonialSlider: React.FC<AnimatedTestimonialSliderProps> = ({\n  testimonials,\n  className,\n  theme: themeProp,\n  autoplay = true,\n  autoplaySpeed = 5000,\n  ...props\n}) => {\n  // Get the current theme from context\n  const { theme: contextTheme } = useSafeTheme();\n  \n  // Use prop theme or fall back to context\n  const activeTheme = themeProp || contextTheme || 'techDark';\n  \n  // State for current testimonial\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n  const [animating, setAnimating] = useState<boolean>(false);\n  const autoplayTimerRef = useRef<ReturnType<typeof setInterval> | null>(null);\n  \n  // Function to go to next testimonial\n  const nextTestimonial = (): void => {\n    if (animating) return;\n    \n    setAnimating(true);\n    setCurrentIndex((prevIndex) => (prevIndex + 1) % testimonials.length);\n    \n    setTimeout(() => {\n      setAnimating(false);\n    }, 900); // Match this with animation duration\n  };\n  \n  // Function to go to previous testimonial\n  const prevTestimonial = (): void => {\n    if (animating) return;\n    \n    setAnimating(true);\n    setCurrentIndex((prevIndex) => (prevIndex - 1 + testimonials.length) % testimonials.length);\n    \n    setTimeout(() => {\n      setAnimating(false);\n    }, 900); // Match this with animation duration\n  };\n  \n  // Setup autoplay\n  useEffect(() => {\n    if (autoplay) {\n      autoplayTimerRef.current = setInterval(() => {\n        nextTestimonial();\n      }, autoplaySpeed);\n    }\n    \n    return () => {\n      if (autoplayTimerRef.current) {\n        clearInterval(autoplayTimerRef.current);\n      }\n    };\n  }, [autoplay, autoplaySpeed, currentIndex, animating]);\n  \n  // Reset autoplay timer when manually changing slides\n  const resetAutoplayTimer = (): void => {\n    if (autoplay && autoplayTimerRef.current) {\n      clearInterval(autoplayTimerRef.current);\n      autoplayTimerRef.current = setInterval(() => {\n        nextTestimonial();\n      }, autoplaySpeed);\n    }\n  };\n  \n  // Determine card position for each testimonial\n  const getCardPosition = (index: number): TestimonialPosition => {\n    const totalCount = testimonials.length;\n    \n    if (index === currentIndex) return 'front';\n    if (index === (currentIndex + 1) % totalCount) return 'middle';\n    if (index === (currentIndex + 2) % totalCount) return 'back';\n    return 'hidden';\n  };\n  \n  // Keyboard navigation\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent): void => {\n      if (e.key === 'ArrowLeft') {\n        prevTestimonial();\n        resetAutoplayTimer();\n      } else if (e.key === 'ArrowRight') {\n        nextTestimonial();\n        resetAutoplayTimer();\n      }\n    };\n    \n    window.addEventListener('keydown', handleKeyDown);\n    \n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [currentIndex, animating]);\n  \n  // Get container classes\n  const containerClasses = testimonialSliderVariants({\n    theme: activeTheme as TestimonialTheme,\n    className,\n  });\n  \n  // Get content container classes\n  const contentClasses = contentContainerVariants({\n    theme: activeTheme as TestimonialTheme,\n  });\n  \n  // Get image stack container classes\n  const imageStackClasses = imageStackContainerVariants({\n    theme: activeTheme as TestimonialTheme,\n  });\n  \n  // Get quote container classes\n  const quoteClasses = quoteContainerVariants({\n    theme: activeTheme as TestimonialTheme,\n  });\n  \n  // Get navigation button classes\n  const prevButtonClasses = navButtonVariants({\n    theme: activeTheme as TestimonialTheme,\n  });\n  \n  const nextButtonClasses = navButtonVariants({\n    theme: activeTheme as TestimonialTheme,\n  });\n  \n  // Current testimonial\n  const currentTestimonial = testimonials[currentIndex];\n  \n  return (\n    <div className={containerClasses} {...props}>\n      {/* Left side - Content and Navigation */}\n      <div className={contentClasses}>\n        {/* Testimonial Content */}\n        <div>\n          <h2 className=\"text-4xl font-bold mb-2\">{currentTestimonial.name}</h2>\n          <p className=\"text-xl opacity-80 mb-6\">{currentTestimonial.title}</p>\n          \n          <div className={quoteClasses}>\n            <p className=\"text-2xl leading-relaxed\">\n              {currentTestimonial.quote}\n            </p>\n          </div>\n        </div>\n        \n        {/* Navigation */}\n        <div className=\"flex space-x-4\">\n          <button \n            className={prevButtonClasses} \n            onClick={() => {\n              prevTestimonial();\n              resetAutoplayTimer();\n            }}\n            aria-label=\"Previous testimonial\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n              <path d=\"M15 18l-6-6 6-6\" />\n            </svg>\n          </button>\n          \n          <button \n            className={nextButtonClasses}\n            onClick={() => {\n              nextTestimonial();\n              resetAutoplayTimer();\n            }}\n            aria-label=\"Next testimonial\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n              <path d=\"M9 18l6-6-6-6\" />\n            </svg>\n          </button>\n        </div>\n      </div>\n      \n      {/* Right side - Stacked Image Cards */}\n      <div className={imageStackClasses}>\n        <div className=\"relative w-full max-w-[350px] aspect-square\">\n          {testimonials.map((testimonial, index) => {\n            const position = getCardPosition(index);\n            \n            // Get image card classes\n            const imageCardClasses = testimonialImageCardVariants({\n              theme: activeTheme as TestimonialTheme,\n              position,\n            });\n            \n            // Don't render hidden cards for performance\n            if (position === 'hidden') return null;\n            \n            return (\n              <div\n                key={index}\n                className={cn(imageCardClasses)}\n                style={{\n                  width: '100%',\n                  height: '100%',\n                  transition: 'all 0.9s cubic-bezier(0.16, 1, 0.3, 1)',\n                  transformOrigin: 'bottom left',\n                }}\n              >\n                {/* Person Image */}\n                {testimonial.image && (\n                  <img\n                    src={testimonial.image}\n                    alt={testimonial.name}\n                    className=\"w-full h-full object-cover\"\n                  />\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { testimonialSliderVariants };"],"names":["testimonialSliderVariants","cva","contentContainerVariants","imageStackContainerVariants","testimonialImageCardVariants","quoteContainerVariants","navButtonVariants","AnimatedTestimonialSlider","testimonials","className","themeProp","autoplay","autoplaySpeed","props","contextTheme","useSafeTheme","activeTheme","currentIndex","setCurrentIndex","useState","animating","setAnimating","autoplayTimerRef","useRef","nextTestimonial","prevIndex","prevTestimonial","useEffect","resetAutoplayTimer","getCardPosition","index","totalCount","handleKeyDown","e","containerClasses","contentClasses","imageStackClasses","quoteClasses","prevButtonClasses","nextButtonClasses","currentTestimonial","jsxs","jsx","testimonial","position","imageCardClasses","cn"],"mappings":"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"}