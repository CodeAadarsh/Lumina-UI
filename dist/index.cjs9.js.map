{"version":3,"file":"index.cjs9.js","sources":["../src/components/ui/ScratchCard.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect, useCallback, ReactNode } from 'react';\nimport { useTheme } from '../../providers/ThemeProvider';\nimport { cn } from \"@/lib/utils\";\n\n// Define theme types\nexport type ScratchCardTheme = 'default' | 'enterprise' | 'techDark' | 'glass' | 'neumorphic' | 'glow';\nexport type ScratchCardVariant = 'default' | 'prize' | 'ticket' | 'coupon';\n\n// Theme context type\ninterface ThemeContextType {\n  themeObject: Record<string, unknown>;\n  theme: ScratchCardTheme;\n}\n\n// Theme styles interface\ninterface ThemeStyles {\n  background: string;\n  foreground: string;\n  borderColor: string;\n  shadow: string;\n  brushColor: string;\n  blur?: string;\n  glow?: string;\n  shadowInset?: string;\n  pattern?: string;\n  patternSize?: string;\n}\n\n// Component props interface\nexport interface ScratchCardProps extends React.HTMLAttributes<HTMLDivElement> {\n  /** Custom class name for the component */\n  className?: string;\n  /** Width of the scratch card in pixels */\n  width?: number;\n  /** Height of the scratch card in pixels */\n  height?: number;\n  /** Size of the scratching brush in pixels */\n  brushSize?: number;\n  /** URL of the image to show on cover (before scratching) */\n  coverImage?: string;\n  /** Background color of the cover layer */\n  coverColor?: string;\n  /** URL of the image to reveal after scratching */\n  revealImage?: string;\n  /** Content to reveal after scratching (JSX) */\n  revealContent?: ReactNode;\n  /** Percentage threshold at which the card is considered fully revealed (0-100) */\n  completionThreshold?: number;\n  /** Callback function triggered when scratching reaches the completion threshold */\n  onComplete?: () => void;\n  /** Whether the scratch card is disabled */\n  disabled?: boolean;\n  /** Whether to immediately reveal the entire card */\n  revealAll?: boolean;\n  /** Theme to apply to the scratch card */\n  theme?: ScratchCardTheme;\n  /** Visual variant of the scratch card */\n  variant?: ScratchCardVariant;\n}\n\n// Point interface for scratch coordinates\ninterface Point {\n  x: number;\n  y: number;\n}\n\nexport const ScratchCard: React.FC<ScratchCardProps> = ({\n  className,\n  width = 300,\n  height = 150,\n  brushSize = 20,\n  coverImage,\n  coverColor,\n  revealImage,\n  revealContent,\n  completionThreshold = 70,\n  onComplete,\n  disabled = false,\n  revealAll = false,\n  theme: themeProp,\n  variant = \"default\",\n  ...props\n}) => {\n  // Get theme context\n  const { themeObject, theme: contextTheme } = useTheme() as ThemeContextType;\n  const activeTheme = themeProp || contextTheme;\n  \n  // Refs\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const containerRef = useRef<HTMLDivElement | null>(null);\n  const isDrawingRef = useRef<boolean>(false);\n  \n  // State\n  const [isRevealed, setIsRevealed] = useState<boolean>(false);\n  const [percentScratched, setPercentScratched] = useState<number>(0);\n  const [lastPoint, setLastPoint] = useState<Point | null>(null);\n  const [canvasContext, setCanvasContext] = useState<CanvasRenderingContext2D | null>(null);\n  \n  // Theme-specific style values\n  const getThemeStyles = (): ThemeStyles => {\n    const baseStyles: ThemeStyles = {\n      background: '#f5f5f5',\n      foreground: '#333333',\n      borderColor: '#e0e0e0',\n      shadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n      brushColor: 'rgba(255, 255, 255, 0)',\n    };\n    \n    switch (activeTheme) {\n      case 'enterprise':\n        return {\n          background: coverColor || '#f8f9fa',\n          foreground: '#111827',\n          borderColor: '#e5e7eb',\n          shadow: '0 4px 10px rgba(0, 0, 0, 0.04)',\n          brushColor: 'rgba(255, 255, 255, 0)',\n        };\n      case 'techDark':\n        return {\n          background: coverColor || '#1f2937',\n          foreground: '#f9fafb',\n          borderColor: '#374151',\n          shadow: '0 4px 20px rgba(0, 0, 0, 0.3)',\n          brushColor: 'rgba(255, 255, 255, 0)',\n          glow: '0 0 15px rgba(139, 92, 246, 0.3)',\n        };\n      case 'glass':\n        return {\n          background: coverColor || 'rgba(15, 23, 42, 0.3)',\n          foreground: '#ffffff',\n          borderColor: 'rgba(255, 255, 255, 0.1)',\n          shadow: '0 8px 32px rgba(0, 0, 0, 0.1)',\n          brushColor: 'rgba(255, 255, 255, 0)',\n          blur: '8px',\n        };\n      case 'neumorphic':\n        return {\n          background: coverColor || '#e0e5ec',\n          foreground: '#333333',\n          borderColor: 'transparent',\n          shadow: '8px 8px 16px #bebebe, -8px -8px 16px #ffffff',\n          shadowInset: 'inset 5px 5px 10px #bebebe, inset -5px -5px 10px #ffffff',\n          brushColor: 'rgba(255, 255, 255, 0)',\n        };\n      case 'glow':\n        return {\n          background: coverColor || '#111827',\n          foreground: '#ffffff',\n          borderColor: 'rgba(59, 130, 246, 0.3)',\n          shadow: '0 0 15px rgba(59, 130, 246, 0.3), 0 0 30px rgba(59, 130, 246, 0.2)',\n          brushColor: 'rgba(255, 255, 255, 0)',\n        };\n      default:\n        return baseStyles;\n    }\n  };\n  \n  // Get variant-specific styles\n  const getVariantStyles = (themeStyles: ThemeStyles): ThemeStyles => {\n    switch (variant) {\n      case 'prize':\n        return {\n          ...themeStyles,\n          background: coverColor || (activeTheme === 'techDark' ? '#6d28d9' : activeTheme === 'enterprise' ? '#3b82f6' : activeTheme === 'glass' ? 'rgba(139, 92, 246, 0.4)' : activeTheme === 'neumorphic' ? '#dee4ec' : '#4f46e5'),\n          pattern: 'radial-gradient(circle at center, transparent 0%, transparent 5%, rgba(255, 255, 255, 0.1) 5.1%, rgba(255, 255, 255, 0.2) 10%, transparent 10.1%)',\n          patternSize: '20px 20px',\n        };\n      case 'ticket':\n        return {\n          ...themeStyles,\n          pattern: 'repeating-linear-gradient(45deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.1) 10px, rgba(255, 255, 255, 0.2) 10px, rgba(255, 255, 255, 0.2) 20px)',\n        };\n      case 'coupon':\n        return {\n          ...themeStyles,\n          pattern: 'repeating-radial-gradient(circle at 50% 50%, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0) 15px, rgba(255, 255, 255, 0.1) 15px, rgba(255, 255, 255, 0.1) 30px)',\n        };\n      default:\n        return themeStyles;\n    }\n  };\n  \n  // Initialize canvas drawing\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    // Set canvas size\n    canvas.width = width;\n    canvas.height = height;\n    \n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    \n    setCanvasContext(ctx);\n    \n    // Set initial state\n    // Apply styles\n    const themeStyles = getThemeStyles();\n    const variantStyles = getVariantStyles(themeStyles);\n    \n    // Draw background\n    ctx.fillStyle = variantStyles.background;\n    ctx.fillRect(0, 0, width, height);\n    \n    // Draw pattern if defined\n    if (variantStyles.pattern) {\n      ctx.save();\n      const patternCanvas = document.createElement('canvas');\n      const patternCtx = patternCanvas.getContext('2d');\n      if (!patternCtx) {\n        ctx.restore();\n        return;\n      }\n      \n      patternCanvas.width = 40;\n      patternCanvas.height = 40;\n      \n      // Create gradient or pattern\n      const gradient = patternCtx.createLinearGradient(0, 0, 40, 40);\n      gradient.addColorStop(0, 'rgba(255, 255, 255, 0.1)');\n      gradient.addColorStop(1, 'rgba(255, 255, 255, 0.2)');\n      patternCtx.fillStyle = gradient;\n      patternCtx.fillRect(0, 0, 40, 40);\n      \n      const pattern = ctx.createPattern(patternCanvas, 'repeat');\n      if (pattern) {\n        ctx.fillStyle = pattern;\n        ctx.fillRect(0, 0, width, height);\n      }\n      ctx.restore();\n    }\n    \n    // Draw cover image if provided\n    if (coverImage) {\n      const img = new Image();\n      img.onload = () => {\n        if (ctx) {\n          ctx.drawImage(img, 0, 0, width, height);\n        }\n      };\n      img.src = coverImage;\n    }\n    \n    // Draw stylistic elements based on theme variant\n    if (variant === 'ticket') {\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.3)';\n      ctx.setLineDash([5, 5]);\n      ctx.beginPath();\n      ctx.moveTo(0, 15);\n      ctx.lineTo(width, 15);\n      ctx.stroke();\n      \n      ctx.beginPath();\n      ctx.moveTo(0, height - 15);\n      ctx.lineTo(width, height - 15);\n      ctx.stroke();\n    } else if (variant === 'coupon') {\n      // Draw coupon edges\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.3)';\n      ctx.setLineDash([]);\n      \n      const circleRadius = 8;\n      const circles = Math.floor(height / (circleRadius * 2 + 4));\n      const gap = (height - circles * circleRadius * 2) / (circles + 1);\n      \n      for (let i = 0; i < circles; i++) {\n        const y = gap + i * (gap + circleRadius * 2) + circleRadius;\n        \n        // Left side circle\n        ctx.beginPath();\n        ctx.arc(-circleRadius / 2, y, circleRadius, 0, Math.PI * 2);\n        ctx.stroke();\n        \n        // Right side circle\n        ctx.beginPath();\n        ctx.arc(width + circleRadius / 2, y, circleRadius, 0, Math.PI * 2);\n        ctx.stroke();\n      }\n    }\n\n    // Handle reveal all\n    if (revealAll) {\n      handleRevealAll();\n    }\n  }, [width, height, coverImage, coverColor, revealAll, activeTheme, variant]);\n  \n  // Setup event handlers\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || disabled) return;\n    \n    const handleMouseDown = (e: MouseEvent) => {\n      isDrawingRef.current = true;\n      const point = getPointFromEvent(e);\n      setLastPoint(point);\n      drawLine(point, point);\n    };\n    \n    const handleMouseMove = (e: MouseEvent) => {\n      if (!isDrawingRef.current) return;\n      \n      const currentPoint = getPointFromEvent(e);\n      drawLine(lastPoint, currentPoint);\n      setLastPoint(currentPoint);\n      \n      // Check scratch percentage\n      calculateScratchPercentage();\n    };\n    \n    const handleMouseUp = () => {\n      isDrawingRef.current = false;\n    };\n    \n    const handleMouseOut = () => {\n      isDrawingRef.current = false;\n    };\n    \n    // Touch events\n    const handleTouchStart = (e: TouchEvent) => {\n      e.preventDefault();\n      handleMouseDown(e.touches[0] as unknown as MouseEvent);\n    };\n    \n    const handleTouchMove = (e: TouchEvent) => {\n      e.preventDefault();\n      handleMouseMove(e.touches[0] as unknown as MouseEvent);\n    };\n    \n    const handleTouchEnd = (e: TouchEvent) => {\n      e.preventDefault();\n      handleMouseUp();\n    };\n    \n    // Add event listeners\n    canvas.addEventListener('mousedown', handleMouseDown);\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('mouseup', handleMouseUp);\n    canvas.addEventListener('mouseout', handleMouseOut);\n    \n    // Touch events\n    canvas.addEventListener('touchstart', handleTouchStart);\n    canvas.addEventListener('touchmove', handleTouchMove);\n    canvas.addEventListener('touchend', handleTouchEnd);\n    \n    // Cleanup\n    return () => {\n      canvas.removeEventListener('mousedown', handleMouseDown);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('mouseup', handleMouseUp);\n      canvas.removeEventListener('mouseout', handleMouseOut);\n      \n      canvas.removeEventListener('touchstart', handleTouchStart);\n      canvas.removeEventListener('touchmove', handleTouchMove);\n      canvas.removeEventListener('touchend', handleTouchEnd);\n    };\n  }, [disabled, lastPoint]);\n  \n  // Completion tracking\n  useEffect(() => {\n    if (percentScratched >= completionThreshold && !isRevealed) {\n      setIsRevealed(true);\n      if (onComplete) {\n        onComplete();\n      }\n    }\n  }, [percentScratched, completionThreshold, isRevealed, onComplete]);\n  \n  // Helper to get point from mouse or touch event\n  const getPointFromEvent = (e: MouseEvent | Touch): Point => {\n    const canvas = canvasRef.current;\n    if (!canvas) return { x: 0, y: 0 };\n    \n    const rect = canvas.getBoundingClientRect();\n    return {\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    };\n  };\n  \n  // Draw scratch line\n  const drawLine = (start: Point | null, end: Point | null): void => {\n    if (!canvasContext || !start || !end) return;\n    \n    canvasContext.globalCompositeOperation = 'destination-out';\n    canvasContext.strokeStyle = 'rgba(255, 255, 255, 1)';\n    canvasContext.lineWidth = brushSize;\n    canvasContext.lineCap = 'round';\n    canvasContext.lineJoin = 'round';\n    \n    canvasContext.beginPath();\n    canvasContext.moveTo(start.x, start.y);\n    canvasContext.lineTo(end.x, end.y);\n    canvasContext.stroke();\n  };\n  \n  // Calculate scratch percentage\n  const calculateScratchPercentage = (): void => {\n    if (!canvasContext) return;\n    \n    const imageData = canvasContext.getImageData(0, 0, width, height);\n    const pixels = imageData.data;\n    let transparentPixels = 0;\n    \n    // Count fully transparent pixels (alpha = 0)\n    for (let i = 3; i < pixels.length; i += 4) {\n      if (pixels[i] === 0) {\n        transparentPixels++;\n      }\n    }\n    \n    const totalPixels = width * height;\n    const percentTransparent = (transparentPixels / totalPixels) * 100;\n    setPercentScratched(percentTransparent);\n  };\n  \n  // Reveal the entire card\n  const handleRevealAll = useCallback((): void => {\n    if (!canvasContext) return;\n    \n    canvasContext.globalCompositeOperation = 'destination-out';\n    canvasContext.fillRect(0, 0, width, height);\n    setIsRevealed(true);\n    setPercentScratched(100);\n    \n    if (onComplete) {\n      onComplete();\n    }\n  }, [canvasContext, width, height, onComplete]);\n  \n  // Reset the scratch card\n  const handleReset = useCallback((): void => {\n    if (!canvasContext) return;\n    \n    // Redraw the cover\n    const themeStyles = getThemeStyles();\n    const variantStyles = getVariantStyles(themeStyles);\n    \n    canvasContext.globalCompositeOperation = 'source-over';\n    canvasContext.fillStyle = variantStyles.background;\n    canvasContext.fillRect(0, 0, width, height);\n    \n    if (coverImage) {\n      const img = new Image();\n      img.onload = () => {\n        if (canvasContext) {\n          canvasContext.drawImage(img, 0, 0, width, height);\n        }\n      };\n      img.src = coverImage;\n    }\n    \n    setIsRevealed(false);\n    setPercentScratched(0);\n  }, [canvasContext, width, height, coverImage, activeTheme, variant]);\n  \n  // Get theme-specific container styles\n  const containerStyles = getThemeStyles();\n  const variantStyles = getVariantStyles(containerStyles);\n  \n  return (\n    <div \n      ref={containerRef}\n      className={cn(\n        \"relative rounded-lg overflow-hidden\",\n        className\n      )}\n      style={{\n        width,\n        height,\n        borderRadius: '0.5rem',\n        border: `1px solid ${variantStyles.borderColor}`,\n        boxShadow: variantStyles.shadow,\n        ...(variantStyles.blur ? { backdropFilter: `blur(${variantStyles.blur})` } : {}),\n      }}\n      {...props}\n    >\n      {/* Content to reveal */}\n      <div \n        className=\"absolute inset-0 flex items-center justify-center z-0 p-4\"\n        style={{\n          color: variantStyles.foreground,\n          background: activeTheme === 'glass' ? 'rgba(255, 255, 255, 0.1)' : \n                    activeTheme === 'techDark' ? '#111827' : \n                    activeTheme === 'neumorphic' ? '#e0e5ec' :\n                    activeTheme === 'glow' ? '#030712' : '#ffffff',\n        }}\n      >\n        {revealImage ? (\n          <img src={revealImage} alt=\"Revealed content\" className=\"max-w-full max-h-full object-contain\" />\n        ) : (\n          <div className=\"text-center\">\n            {revealContent}\n          </div>\n        )}\n      </div>\n      \n      {/* Scratch canvas */}\n      <canvas\n        ref={canvasRef}\n        className={cn(\n          \"absolute inset-0 cursor-pointer z-10\",\n          { \"cursor-not-allowed\": disabled }\n        )}\n        style={{\n          opacity: isRevealed && revealAll ? 0 : 1,\n          transition: 'opacity 0.5s ease-in-out',\n        }}\n      />\n      \n      {/* Progress indicator (optional) */}\n      {false && (\n        <div className=\"absolute bottom-2 right-2 text-xs bg-black/50 text-white px-2 py-1 rounded\">\n          {Math.floor(percentScratched)}%\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScratchCard;"],"names":["ScratchCard","className","width","height","brushSize","coverImage","coverColor","revealImage","revealContent","completionThreshold","onComplete","disabled","revealAll","themeProp","variant","props","themeObject","contextTheme","useTheme","activeTheme","canvasRef","useRef","containerRef","isDrawingRef","isRevealed","setIsRevealed","useState","percentScratched","setPercentScratched","lastPoint","setLastPoint","canvasContext","setCanvasContext","getThemeStyles","baseStyles","getVariantStyles","themeStyles","useEffect","canvas","ctx","variantStyles","patternCanvas","patternCtx","gradient","pattern","img","circleRadius","circles","gap","i","y","handleRevealAll","handleMouseDown","e","point","getPointFromEvent","drawLine","handleMouseMove","currentPoint","calculateScratchPercentage","handleMouseUp","handleMouseOut","handleTouchStart","handleTouchMove","handleTouchEnd","rect","start","end","pixels","transparentPixels","totalPixels","percentTransparent","useCallback","containerStyles","jsxs","cn","jsx"],"mappings":"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"}