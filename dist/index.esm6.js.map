{"version":3,"file":"index.esm6.js","sources":["../src/components/ui/TextGenerateEffect.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef, HTMLAttributes } from 'react';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { useSafeTheme } from '../../hooks/useSafeTheme';\nimport { cn } from '../../utils/cn';\n\n// Theme types\nexport type TextGenerateTheme = \n  | 'enterprise' \n  | 'techDark' \n  | 'glass' \n  | 'neumorphicLight' \n  | 'glow' \n  | '3d';\n\n// Cursor types\nexport type CursorType = 'bar' | 'block' | 'underscore' | 'none';\n\n// Effect types\nexport type EffectType = 'none' | 'glow' | 'gradient' | 'shadow';\n\n// Speed types\nexport type SpeedType = 'slow' | 'normal' | 'fast';\n\n// Define the variants with class-variance-authority\nconst textGenerateVariants = cva(\n  \"relative inline-block\", // Base styles\n  {\n    variants: {\n      // Theme variants\n      theme: {\n        enterprise: \"text-gray-900\",\n        techDark: \"text-white\",\n        glass: \"text-white\",\n        neumorphicLight: \"text-gray-800\",\n        glow: \"text-white\",\n        '3d': \"text-gray-900 dark:text-white\",\n      },\n      // Size variants\n      size: {\n        xs: \"text-xs\",\n        sm: \"text-sm\",\n        md: \"text-base\",\n        lg: \"text-lg\",\n        xl: \"text-xl\",\n        \"2xl\": \"text-2xl\",\n        \"3xl\": \"text-3xl\",\n        \"4xl\": \"text-4xl\",\n        \"5xl\": \"text-5xl\",\n      },\n      // Weight variants\n      weight: {\n        light: \"font-light\",\n        normal: \"font-normal\",\n        medium: \"font-medium\",\n        semibold: \"font-semibold\",\n        bold: \"font-bold\",\n      },\n      // Cursor variants\n      cursor: {\n        bar: \"\",\n        block: \"\",\n        underscore: \"\",\n        none: \"\",\n      },\n      // Additional effect variants\n      effect: {\n        none: \"\",\n        glow: \"\",\n        gradient: \"\",\n        shadow: \"\",\n      },\n      // Speed variants\n      speed: {\n        slow: \"\",\n        normal: \"\",\n        fast: \"\",\n      },\n    },\n    // Compound variants\n    compoundVariants: [\n      // Effect specifics for different themes\n      {\n        effect: \"glow\",\n        theme: \"enterprise\",\n        className: \"text-shadow-blue\",\n      },\n      {\n        effect: \"glow\",\n        theme: \"techDark\",\n        className: \"text-shadow-purple\",\n      },\n      {\n        effect: \"glow\",\n        theme: \"glass\",\n        className: \"text-shadow-white\",\n      },\n      {\n        effect: \"glow\",\n        theme: \"neumorphicLight\",\n        className: \"text-shadow-blue-light\",\n      },\n      {\n        effect: \"glow\",\n        theme: \"glow\",\n        className: \"text-shadow-blue-strong\",\n      },\n      {\n        effect: \"gradient\",\n        theme: \"enterprise\",\n        className: \"bg-gradient-to-r from-blue-500 to-blue-700 text-transparent bg-clip-text\",\n      },\n      {\n        effect: \"gradient\",\n        theme: \"techDark\",\n        className: \"bg-gradient-to-r from-purple-500 to-blue-500 text-transparent bg-clip-text\",\n      },\n      {\n        effect: \"gradient\",\n        theme: \"glass\",\n        className: \"bg-gradient-to-r from-white to-blue-200 text-transparent bg-clip-text\",\n      },\n      {\n        effect: \"gradient\",\n        theme: \"neumorphicLight\",\n        className: \"bg-gradient-to-r from-blue-500 to-purple-500 text-transparent bg-clip-text\",\n      },\n      {\n        effect: \"gradient\",\n        theme: \"glow\",\n        className: \"bg-gradient-to-r from-blue-400 to-purple-500 text-transparent bg-clip-text\",\n      },\n      {\n        effect: \"shadow\",\n        theme: \"enterprise\",\n        className: \"drop-shadow-md\",\n      },\n      {\n        effect: \"shadow\",\n        theme: \"techDark\",\n        className: \"drop-shadow-lg\",\n      },\n      {\n        effect: \"shadow\",\n        theme: \"glass\",\n        className: \"drop-shadow-xl\",\n      },\n    ],\n    // Default variant values\n    defaultVariants: {\n      theme: \"enterprise\",\n      size: \"md\",\n      weight: \"normal\",\n      cursor: \"bar\",\n      effect: \"none\",\n      speed: \"normal\",\n    },\n  }\n);\n\n// Cursor component variants\nconst cursorVariants = cva(\n  \"inline-block\", // Base styles\n  {\n    variants: {\n      theme: {\n        enterprise: \"bg-blue-500\",\n        techDark: \"bg-purple-500\",\n        glass: \"bg-white\",\n        neumorphicLight: \"bg-blue-500\",\n        glow: \"bg-blue-500\",\n        '3d': \"bg-blue-500 dark:bg-blue-400\",\n      },\n      cursor: {\n        bar: \"h-4 w-1\",\n        block: \"h-4 w-3\",\n        underscore: \"h-1 w-4 align-bottom mb-0.5\",\n        none: \"hidden\",\n      },\n      effect: {\n        none: \"\",\n        glow: \"shadow-glow\",\n        gradient: \"\",\n        shadow: \"\",\n      },\n    },\n    compoundVariants: [\n      {\n        effect: \"glow\",\n        theme: \"enterprise\",\n        className: \"shadow-blue-glow\",\n      },\n      {\n        effect: \"glow\",\n        theme: \"techDark\",\n        className: \"shadow-purple-glow\",\n      },\n      {\n        effect: \"glow\",\n        theme: \"glass\",\n        className: \"shadow-white-glow\",\n      },\n      {\n        effect: \"glow\",\n        theme: \"glow\",\n        className: \"shadow-blue-glow-strong\",\n      },\n    ],\n    defaultVariants: {\n      theme: \"enterprise\",\n      cursor: \"bar\",\n      effect: \"none\",\n    },\n  }\n);\n\n// Extract variant props types from the CVA functions\nexport type TextGenerateVariantProps = VariantProps<typeof textGenerateVariants>;\nexport type CursorVariantProps = VariantProps<typeof cursorVariants>;\n\n// Define the props interface for the component\nexport interface TextGenerateEffectProps extends HTMLAttributes<HTMLSpanElement>, TextGenerateVariantProps {\n  words: string;\n  onComplete?: () => void;\n  loop?: boolean;\n  delay?: number;\n  typingDelay?: number;\n  theme?: TextGenerateTheme;\n}\n\nconst TextGenerateEffect: React.FC<TextGenerateEffectProps> = ({\n  words,\n  className,\n  theme: themeProp,\n  size,\n  weight,\n  cursor,\n  effect,\n  speed,\n  onComplete,\n  loop = false,\n  delay = 0,\n  typingDelay,\n  ...props\n}) => {\n  // Get the current theme from context\n  const { theme: contextTheme } = useSafeTheme();\n  \n  // Use prop theme or fall back to context\n  const activeTheme = themeProp || contextTheme;\n  \n  // State\n  const [wordArray, setWordArray] = useState<string[]>([]);\n  const [isComplete, setIsComplete] = useState<boolean>(false);\n  const [isPlaying, setIsPlaying] = useState<boolean>(true);\n  const timeoutRef = useRef<number | null>(null);\n  const intervalRef = useRef<number | null>(null);\n  \n  // Get typing speed based on the speed prop\n  const getTypingDelay = (): number => {\n    if (typingDelay !== undefined) return typingDelay;\n    \n    const speedMap: Record<SpeedType, number> = {\n      slow: 80,\n      normal: 30,\n      fast: 10,\n    };\n    \n    return speedMap[speed as SpeedType] || speedMap.normal;\n  };\n  \n  // Generate text effect\n  useEffect(() => {\n    if (!isPlaying) return;\n    \n    // Reset if words change\n    setWordArray([]);\n    setIsComplete(false);\n    \n    // Clear any existing timeouts/intervals\n    if (timeoutRef.current) clearTimeout(timeoutRef.current);\n    if (intervalRef.current) clearInterval(intervalRef.current);\n    \n    // Initial delay before starting\n    timeoutRef.current = window.setTimeout(() => {\n      // Split the words into an array of characters\n      const chars = words.split('');\n      \n      let index = -1;\n      \n      // Add each character to the array one by one with a delay\n      intervalRef.current = window.setInterval(() => {\n        index++;\n        setWordArray((prev) => [...prev, chars[index]]);\n        \n        if (index === chars.length - 1) {\n          if (intervalRef.current) clearInterval(intervalRef.current);\n          setIsComplete(true);\n          \n          if (onComplete) {\n            onComplete();\n          }\n          \n          // If looping is enabled, reset after a delay\n          if (loop) {\n            timeoutRef.current = window.setTimeout(() => {\n              setWordArray([]);\n              setIsComplete(false);\n            }, 2000); // Pause before restarting\n          }\n        }\n      }, getTypingDelay());\n    }, delay);\n    \n    return () => {\n      if (timeoutRef.current) clearTimeout(timeoutRef.current);\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, [words, isPlaying, loop, delay, speed, onComplete, typingDelay]);\n  \n  // Get main text classes\n  const textClasses = textGenerateVariants({\n    theme: activeTheme as TextGenerateTheme,\n    size,\n    weight,\n    cursor,\n    effect,\n    speed,\n    className,\n  });\n  \n  // Get cursor classes\n  const cursorClasses = cursorVariants({\n    theme: activeTheme as TextGenerateTheme,\n    cursor,\n    effect,\n  });\n  \n  // Pause/resume functionality\n  const togglePlayPause = (): void => {\n    setIsPlaying(!isPlaying);\n  };\n  \n  return (\n    <span className={cn(textClasses)} onClick={togglePlayPause} {...props}>\n      {wordArray.join('')}\n      {!isComplete && (\n        <span \n          className={cn(cursorClasses, \"ml-1 animate-blink\")}\n          style={{\n            animation: \"blink 0.8s infinite\",\n          }}\n        />\n      )}\n      <style jsx global>{`\n        @keyframes blink {\n          0%, 100% { opacity: 0; }\n          50% { opacity: 1; }\n        }\n        .text-shadow-blue {\n          text-shadow: 0 0 8px rgba(59, 130, 246, 0.5);\n        }\n        .text-shadow-purple {\n          text-shadow: 0 0 8px rgba(139, 92, 246, 0.5);\n        }\n        .text-shadow-white {\n          text-shadow: 0 0 8px rgba(255, 255, 255, 0.5);\n        }\n        .text-shadow-blue-light {\n          text-shadow: 0 0 5px rgba(59, 130, 246, 0.3);\n        }\n        .text-shadow-blue-strong {\n          text-shadow: 0 0 12px rgba(59, 130, 246, 0.8);\n        }\n        .shadow-blue-glow {\n          box-shadow: 0 0 5px rgba(59, 130, 246, 0.5);\n        }\n        .shadow-purple-glow {\n          box-shadow: 0 0 5px rgba(139, 92, 246, 0.5);\n        }\n        .shadow-white-glow {\n          box-shadow: 0 0 5px rgba(255, 255, 255, 0.5);\n        }\n        .shadow-blue-glow-strong {\n          box-shadow: 0 0 8px rgba(59, 130, 246, 0.8);\n        }\n      `}</style>\n    </span>\n  );\n};\n\nexport { TextGenerateEffect, textGenerateVariants };"],"names":["textGenerateVariants","cva","cursorVariants","TextGenerateEffect","words","className","themeProp","size","weight","cursor","effect","speed","onComplete","loop","delay","typingDelay","props","contextTheme","useSafeTheme","activeTheme","wordArray","setWordArray","useState","isComplete","setIsComplete","isPlaying","setIsPlaying","timeoutRef","useRef","intervalRef","getTypingDelay","speedMap","useEffect","chars","index","prev","textClasses","cursorClasses","togglePlayPause","jsxs","cn","jsx"],"mappings":"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"}