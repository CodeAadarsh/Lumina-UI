{"version":3,"file":"index.cjs3.js","sources":["../src/components/ui/Input.tsx"],"sourcesContent":["import React, { forwardRef, useState, useRef, memo, useEffect, FC, ChangeEvent, FocusEvent } from 'react';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { useTheme } from '../../providers/ThemeProvider';\nimport { Eye, EyeOff, X, Check } from 'lucide-react';\n\n// Define theme type\ninterface ThemeState {\n  theme: string;\n  themeObject: Record<string, any>;\n}\n\n// Input wrapper variants\nconst inputWrapperVariants = cva(\n  'relative transition-all duration-200',\n  {\n    variants: {\n      fullWidth: {\n        true: 'w-full',\n        false: 'w-auto',\n      },\n    },\n    defaultVariants: {\n      fullWidth: true,\n    },\n  }\n);\n\n// Label variants\nconst labelVariants = cva(\n  'block text-sm font-medium transition-all duration-200',\n  {\n    variants: {\n      state: {\n        default: 'text-foreground-secondary',\n        error: 'text-red-500',\n        success: 'text-green-500',\n        focused: 'text-primary-base',\n      },\n      effect: {\n        none: 'mb-1.5',\n        float: 'transform origin-top-left absolute left-0 top-0',\n      },\n      variant: {\n        default: '',\n        filled: '',\n        outline: '',\n        underline: '',\n        glass: 'text-foreground-secondary',\n        'glass-premium': 'text-foreground-primary',\n        'glass-frost': 'text-foreground-primary/90',\n      }\n    },\n    defaultVariants: {\n      state: 'default',\n      effect: 'none',\n      variant: 'default',\n    },\n  }\n);\n\n// Input variants with enhanced options\nconst inputVariants = cva(\n  // Base styles - improved focus handling and transitions\n  'w-full transition-all duration-200 focus:outline-none disabled:cursor-not-allowed disabled:opacity-60 placeholder:opacity-60',\n  {\n    variants: {\n      // Input variants with enhanced glassmorphism options\n      variant: {\n        // Default input\n        default: 'bg-background-secondary border border-border focus:border-border-focus text-foreground-primary',\n        \n        // Filled input with improved hover/focus states\n        filled: 'bg-background-tertiary border border-transparent hover:bg-background-secondary focus:bg-background-secondary focus:border-border-focus text-foreground-primary',\n        \n        // Outline input with transparent background\n        outline: 'bg-transparent border border-border focus:border-border-focus text-foreground-primary',\n        \n        // Underline input (only bottom border)\n        underline: 'bg-transparent border-0 border-b-2 border-border rounded-none focus:border-border-focus text-foreground-primary',\n        \n        // Glass effect input - standard\n        glass: 'backdrop-blur-md bg-white/10 border border-white/10 focus:border-white/30 text-foreground-primary placeholder:text-foreground-secondary/70',\n        \n        // Premium glass effect - enhanced blur and better borders\n        'glass-premium': 'backdrop-blur-xl bg-white/5 border border-white/20 focus:border-white/40 text-white placeholder:text-white/60',\n        \n        // Frosted glass effect - more opacity\n        'glass-frost': 'backdrop-blur-xl bg-white/10 border-t border-l border-white/30 border-r border-b border-white/10 text-white placeholder:text-white/60',\n        \n        // Dark glass effect - darker background\n        'glass-dark': 'backdrop-blur-md bg-black/40 border border-white/10 focus:border-white/30 text-white placeholder:text-white/60',\n        \n        // Gradient glass effect\n        'glass-gradient': 'backdrop-blur-md bg-gradient-to-br from-primary/10 to-accent-purple/10 border border-white/20 focus:border-white/40 text-white placeholder:text-white/60',\n        \n        // Solid input\n        solid: 'bg-background-tertiary border border-border focus:border-border-focus text-foreground-primary',\n        \n        // Modern minimalist style\n        'modern': 'bg-background-secondary/50 border-none shadow-sm focus:shadow-md text-foreground-primary',\n        \n        // Material design inspired\n        'material': 'bg-transparent border-b-2 border-border px-0 focus:border-primary text-foreground-primary',\n        \n        // Neumorphic light\n        'neumorphic-light': 'bg-[#e0e5ec] text-gray-700 border-none shadow-[inset_2px_2px_5px_#b8b9be,inset_-3px_-3px_7px_#fff] focus:shadow-[inset_1px_1px_2px_#b8b9be,inset_-1px_-1px_2px_#fff]',\n        \n        // Neumorphic dark\n        'neumorphic-dark': 'bg-[#2a2d3e] text-gray-100 border-none shadow-[inset_2px_2px_5px_#1e2030,inset_-3px_-3px_7px_#363b50] focus:shadow-[inset_1px_1px_2px_#1e2030,inset_-1px_-1px_2px_#363b50]',\n      },\n      \n      // Input padding with more options\n      padding: {\n        xs: 'px-2 py-1 text-xs',\n        sm: 'px-2.5 py-1.5 text-sm',\n        md: 'px-3 py-2 text-base',\n        lg: 'px-4 py-2.5 text-lg',\n        xl: 'px-5 py-3 text-xl',\n      },\n      \n      // Input roundedness with more options\n      rounded: {\n        none: 'rounded-none',\n        xs: 'rounded-sm',\n        sm: 'rounded',\n        md: 'rounded-md',\n        lg: 'rounded-lg',\n        xl: 'rounded-xl',\n        '2xl': 'rounded-2xl',\n        full: 'rounded-full',\n      },\n      \n      // Enhanced special effects\n      effect: {\n        none: '',\n        glow: 'focus:shadow-blue-glow focus:border-primary/70',\n        'purple-glow': 'focus:shadow-purple-glow focus:border-purple-500/70',\n        'cyan-glow': 'focus:shadow-[0_0_15px_rgba(6,182,212,0.5)] focus:border-cyan-500/70',\n        'multi-glow': 'focus:shadow-multi-glow',\n        gradientBorder: 'gradient-border-1',\n        rainbowBorder: 'rainbow-border-1',\n        shimmer: 'overflow-hidden after:absolute after:inset-0 after:w-full after:h-full after:-translate-x-full focus:after:animate-shimmer-contained after:bg-gradient-to-r after:from-transparent after:via-white/10 after:to-transparent',\n        float: 'focus:-translate-y-1 focus:shadow-md',\n        scale: 'focus:scale-[1.02] origin-center',\n        'focus-ring': 'focus:ring-2 focus:ring-offset-2 focus:ring-primary',\n      },\n      \n      // Input state - combined with variant\n      state: {\n        default: '',\n        error: 'border-red-500/70 focus:border-red-500 focus:ring-red-500/50',\n        success: 'border-green-500/70 focus:border-green-500 focus:ring-green-500/50',\n        focused: 'border-primary-base',\n      },\n      \n      // Input size - height control for better vertical alignment\n      size: {\n        xs: 'h-7',\n        sm: 'h-8',\n        md: 'h-10',\n        lg: 'h-12',\n        xl: 'h-14',\n      },\n    },\n    compoundVariants: [\n      // Glass effect with glow combinations\n      {\n        variant: 'glass',\n        effect: 'glow',\n        className: 'focus:shadow-blue-glow focus:border-blue-400/50'\n      },\n      {\n        variant: 'glass-premium',\n        effect: 'glow',\n        className: 'focus:shadow-blue-glow focus:border-blue-400/50'\n      },\n      {\n        variant: 'glass-frost',\n        effect: 'purple-glow',\n        className: 'focus:shadow-purple-glow focus:border-purple-400/50'\n      },\n      {\n        variant: 'glass-dark',\n        effect: 'glow',\n        className: 'focus:shadow-[0_0_20px_rgba(255,255,255,0.2)]'\n      },\n      \n      // Error states with appropriate focus colors\n      {\n        state: 'error',\n        effect: 'glow',\n        className: 'focus:shadow-[0_0_15px_rgba(239,68,68,0.5)]'\n      },\n      {\n        state: 'success',\n        effect: 'glow',\n        className: 'focus:shadow-[0_0_15px_rgba(34,197,94,0.5)]'\n      },\n      \n      // Specific variants for material design\n      {\n        variant: 'material',\n        state: 'focused',\n        className: 'border-b-primary-base'\n      },\n      \n      // Neumorphic with state combos\n      {\n        variant: ['neumorphic-light', 'neumorphic-dark'],\n        state: 'error',\n        className: 'shadow-[inset_0_0_5px_rgba(239,68,68,0.5)]'\n      },\n      {\n        variant: ['neumorphic-light', 'neumorphic-dark'],\n        state: 'success',\n        className: 'shadow-[inset_0_0_5px_rgba(34,197,94,0.5)]'\n      },\n    ],\n    defaultVariants: {\n      variant: 'default',\n      padding: 'md',\n      rounded: 'md',\n      effect: 'none',\n      state: 'default',\n      size: 'md',\n    },\n  }\n);\n\n// Helper text variants for different states\nconst helperTextVariants = cva(\n  'mt-1.5 text-sm transition-all',\n  {\n    variants: {\n      state: {\n        default: 'text-foreground-tertiary',\n        error: 'text-red-500',\n        success: 'text-green-500',\n      },\n    },\n    defaultVariants: {\n      state: 'default',\n    },\n  }\n);\n\n// Extract variant props from CVA functions\ntype InputWrapperVariantProps = VariantProps<typeof inputWrapperVariants>;\ntype LabelVariantProps = VariantProps<typeof labelVariants>;\ntype InputVariantProps = VariantProps<typeof inputVariants>;\ntype HelperTextVariantProps = VariantProps<typeof helperTextVariants>;\n\n// Define all possible input types for better intellisense\ntype InputType = \n  | 'text'\n  | 'password'\n  | 'email'\n  | 'number'\n  | 'tel'\n  | 'url'\n  | 'search'\n  | 'date'\n  | 'time'\n  | 'datetime-local'\n  | 'month'\n  | 'week'\n  | 'color';\n\n// Base props interface that extends HTML input props\ninterface BaseInputProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'size'> {\n  // Appearance props from variants\n  variant?: InputVariantProps['variant'];\n  padding?: InputVariantProps['padding'];\n  rounded?: InputVariantProps['rounded'];\n  effect?: InputVariantProps['effect'];\n  size?: InputVariantProps['size'];\n  \n  // Input functionality props\n  type?: InputType;\n  error?: string;\n  success?: string;\n  label?: string;\n  helperText?: string;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n  prefix?: string;\n  suffix?: string;\n  fullWidth?: InputWrapperVariantProps['fullWidth'];\n  floatingLabel?: boolean;\n  clearable?: boolean;\n  showPasswordToggle?: boolean;\n  \n  // Class names for styling\n  className?: string;\n  wrapperClassName?: string;\n  labelClassName?: string;\n  helperTextClassName?: string;\n  \n  // Animation related props\n  animated?: boolean;\n}\n\n// Exported interface for documentation and external usage\nexport interface InputProps extends BaseInputProps {}\n\n// Type definition for the forwarded ref\nexport type InputRef = HTMLInputElement;\n\n// Enhanced Input Component with performance optimizations\nconst Input = memo(forwardRef<InputRef, InputProps>(({\n  // Input appearance props\n  variant,\n  padding,\n  rounded,\n  effect,\n  size,\n  className = '',\n  wrapperClassName = '',\n  labelClassName = '',\n  helperTextClassName = '',\n  \n  // Input functionality props\n  type = 'text',\n  error,\n  success,\n  label,\n  helperText,\n  leftIcon,\n  rightIcon,\n  prefix,\n  suffix,\n  fullWidth = true,\n  floatingLabel = false,\n  clearable = false,\n  showPasswordToggle = true,\n  \n  // Animation related props\n  animated = true,\n  \n  // Event handlers with performance optimizations\n  onChange,\n  onFocus,\n  onBlur,\n  \n  // Other props\n  ...props\n}, ref) => {\n  // Use internal ref if none provided\n  const inputRef = useRef<HTMLInputElement>(null);\n  const combinedRef = (ref || inputRef) as React.RefObject<HTMLInputElement>;\n  \n  // Component state\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n  const [isFocused, setIsFocused] = useState<boolean>(false);\n  const [hasValue, setHasValue] = useState<boolean>(!!props.value || !!props.defaultValue);\n  const { theme, themeObject } = useTheme() as ThemeState;\n  \n  // Apply theme-specific styles\n  let effectiveVariant = variant;\n  let effectiveRounded = rounded;\n  let effectiveEffect = effect;\n  let effectiveSize = size;\n  \n  // Adjust styles based on active theme\n  if (theme === 'techDark' && !variant) {\n    // Default for tech dark theme\n    effectiveVariant = 'filled';\n    if (!rounded) effectiveRounded = 'md';\n    if (!effect) effectiveEffect = 'none';\n  } \n  else if (theme === 'glass' && !variant) {\n    // Default for glass theme\n    effectiveVariant = 'glass-premium';\n    if (!rounded) effectiveRounded = 'lg';\n    if (!effect) effectiveEffect = 'glow';\n  }\n  \n  // Determine input type (handle password visibility)\n  const inputType = type === 'password' && showPassword ? 'text' : type;\n  \n  // Determine input state for styling\n  const inputState: InputVariantProps['state'] = error \n    ? 'error' \n    : success \n    ? 'success' \n    : isFocused \n    ? 'focused' \n    : 'default';\n  \n  // Handle floating label animation\n  const labelState: LabelVariantProps['state'] = inputState;\n  const labelEffect: LabelVariantProps['effect'] = floatingLabel ? 'float' : 'none';\n  const floatingLabelClass = floatingLabel \n    ? `${hasValue || isFocused ? 'text-xs transform -translate-y-7' : 'text-base transform translate-y-2'} pointer-events-none absolute left-3 transition-all duration-200` \n    : '';\n  \n  // Padding adjustments for icons or affixes\n  const paddingLeftClass = leftIcon || prefix ? 'pl-10' : '';\n  const paddingRightClass = type === 'password' || rightIcon || suffix || (clearable && hasValue) ? 'pr-10' : '';\n  \n  // Optimized input classes\n  const inputClasses = inputVariants({\n    variant: effectiveVariant,\n    padding,\n    rounded: effectiveRounded,\n    effect: effectiveEffect,\n    state: inputState,\n    size: effectiveSize,\n    className: `${paddingLeftClass} ${paddingRightClass} ${className}`,\n  });\n  \n  // Wrapper classes\n  const wrapperClasses = inputWrapperVariants({\n    fullWidth,\n    className: wrapperClassName,\n  });\n  \n  // Label classes\n  const labelClasses = labelVariants({\n    state: labelState, \n    effect: labelEffect,\n    variant: effectiveVariant,\n    className: `${floatingLabelClass} ${labelClassName}`,\n  });\n  \n  // Helper text classes\n  const helperTextClasses = helperTextVariants({\n    state: error ? 'error' : success ? 'success' : 'default',\n    className: helperTextClassName,\n  });\n  \n  // Toggle password visibility\n  const togglePasswordVisibility = (): void => {\n    setShowPassword(prev => !prev);\n  };\n  \n  // Track input value for floating label and clearable functionality\n  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    setHasValue(!!e.target.value);\n    if (onChange) onChange(e);\n  };\n  \n  // Handle focus with custom handler\n  const handleFocus = (e: FocusEvent<HTMLInputElement>): void => {\n    setIsFocused(true);\n    if (onFocus) onFocus(e);\n  };\n  \n  // Handle blur with custom handler\n  const handleBlur = (e: FocusEvent<HTMLInputElement>): void => {\n    setIsFocused(false);\n    if (onBlur) onBlur(e);\n  };\n  \n  // Handle input clearing\n  const handleClear = (): void => {\n    // Reset input value\n    if (combinedRef.current) {\n      combinedRef.current.value = '';\n      \n      // Trigger synthetic change event\n      const event = new Event('change', { bubbles: true });\n      combinedRef.current.dispatchEvent(event);\n      \n      // Set focus back to input\n      combinedRef.current.focus();\n      \n      // Update state\n      setHasValue(false);\n      \n      // Call onChange if provided\n      if (onChange) {\n        const syntheticEvent = { target: combinedRef.current } as ChangeEvent<HTMLInputElement>;\n        onChange(syntheticEvent);\n      }\n    }\n  };\n  \n  // Update hasValue when value changes externally\n  useEffect(() => {\n    setHasValue(!!props.value);\n  }, [props.value]);\n  \n  // Check if we need to show validation icons\n  const showSuccessIcon = success && !rightIcon && !suffix && type !== 'password';\n  const showErrorIcon = error && !rightIcon && !suffix && type !== 'password';\n  \n  return (\n    <div className={wrapperClasses}>\n      {/* Non-floating label */}\n      {label && !floatingLabel && (\n        <label \n          htmlFor={props.id} \n          className={labelClasses}\n        >\n          {label}\n        </label>\n      )}\n      \n      {/* Input container */}\n      <div className=\"relative\">\n        {/* Floating label */}\n        {label && floatingLabel && (\n          <label \n            htmlFor={props.id} \n            className={labelClasses}\n          >\n            {label}\n          </label>\n        )}\n        \n        {/* Left icon or prefix */}\n        {leftIcon && (\n          <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none text-foreground-tertiary\">\n            {leftIcon}\n          </div>\n        )}\n        \n        {prefix && (\n          <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none text-foreground-tertiary\">\n            <span className=\"text-sm\">{prefix}</span>\n          </div>\n        )}\n        \n        {/* Input element */}\n        <input\n          ref={combinedRef}\n          type={inputType}\n          className={inputClasses}\n          onChange={handleChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          {...props}\n        />\n        \n        {/* Right icon, suffix, password toggle, or clear button */}\n        <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center gap-2\">\n          {/* Success icon */}\n          {showSuccessIcon && (\n            <Check className=\"h-4 w-4 text-green-500\" />\n          )}\n          \n          {/* Error icon */}\n          {showErrorIcon && (\n            <div className=\"text-red-500\">!</div>\n          )}\n          \n          {/* Clear button */}\n          {clearable && hasValue && !showSuccessIcon && !showErrorIcon && (\n            <button\n              type=\"button\"\n              onClick={handleClear}\n              className=\"text-foreground-tertiary hover:text-foreground-secondary transition-colors\"\n              tabIndex={-1}\n            >\n              <X size={16} />\n            </button>\n          )}\n          \n          {/* Password toggle */}\n          {type === 'password' && showPasswordToggle && (\n            <button\n              type=\"button\"\n              onClick={togglePasswordVisibility}\n              className=\"text-foreground-tertiary hover:text-foreground-secondary transition-colors\"\n              tabIndex={-1}\n              aria-label={showPassword ? 'Hide password' : 'Show password'}\n            >\n              {showPassword ? <EyeOff size={18} /> : <Eye size={18} />}\n            </button>\n          )}\n          \n          {/* Right icon */}\n          {type !== 'password' && rightIcon && (\n            <span className=\"pointer-events-none text-foreground-tertiary\">\n              {rightIcon}\n            </span>\n          )}\n          \n          {/* Suffix */}\n          {type !== 'password' && suffix && !rightIcon && (\n            <span className=\"pointer-events-none text-foreground-tertiary text-sm\">\n              {suffix}\n            </span>\n          )}\n        </div>\n      </div>\n      \n      {/* Helper text, error or success message */}\n      {(error || success || helperText) && (\n        <p className={helperTextClasses}>\n          {error || success || helperText}\n        </p>\n      )}\n    </div>\n  );\n}));\n\n// Add JSDoc comments for better intellisense\n/**\n * Input component with extensive styling options and features.\n * \n * @example\n * // Basic usage\n * <Input label=\"Email\" placeholder=\"Enter your email\" />\n * \n * @example\n * // Password input with toggle\n * <Input \n *   type=\"password\" \n *   label=\"Password\" \n *   placeholder=\"Enter your password\"\n *   showPasswordToggle\n * />\n * \n * @example\n * // Styled input with effects\n * <Input \n *   variant=\"glass-premium\"\n *   effect=\"glow\"\n *   rounded=\"lg\"\n *   label=\"Username\"\n *   placeholder=\"Choose a username\"\n * />\n */\n// Display name for dev tools\nInput.displayName = 'Input';\n\nexport default Input;"],"names":["inputWrapperVariants","cva","labelVariants","inputVariants","helperTextVariants","Input","memo","forwardRef","variant","padding","rounded","effect","size","className","wrapperClassName","labelClassName","helperTextClassName","type","error","success","label","helperText","leftIcon","rightIcon","prefix","suffix","fullWidth","floatingLabel","clearable","showPasswordToggle","animated","onChange","onFocus","onBlur","props","ref","inputRef","useRef","combinedRef","showPassword","setShowPassword","useState","isFocused","setIsFocused","hasValue","setHasValue","theme","themeObject","useTheme","effectiveVariant","effectiveRounded","effectiveEffect","effectiveSize","inputType","inputState","labelState","labelEffect","floatingLabelClass","inputClasses","wrapperClasses","labelClasses","helperTextClasses","togglePasswordVisibility","prev","handleChange","e","handleFocus","handleBlur","handleClear","event","syntheticEvent","useEffect","showSuccessIcon","showErrorIcon","jsxs","jsx","Check","X","EyeOff","Eye"],"mappings":"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"}