{"version":3,"file":"index.cjs6.js","sources":["../src/components/ui/TextGenerateEffect.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef, HTMLAttributes } from 'react';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { useSafeTheme } from '../../hooks/useSafeTheme';\nimport { cn } from '../../utils/cn';\n\n// Theme types\nexport type TextGenerateTheme = \n  | 'enterprise' \n  | 'techDark' \n  | 'glass' \n  | 'neumorphicLight' \n  | 'glow' \n  | '3d';\n\n// Cursor types\nexport type CursorType = 'bar' | 'block' | 'underscore' | 'none';\n\n// Effect types\nexport type EffectType = 'none' | 'glow' | 'gradient' | 'shadow';\n\n// Speed types\nexport type SpeedType = 'slow' | 'normal' | 'fast';\n\n// Define the variants with class-variance-authority\nconst textGenerateVariants = cva(\n  \"relative inline-block\", // Base styles\n  {\n    variants: {\n      // Theme variants\n      theme: {\n        enterprise: \"text-gray-900\",\n        techDark: \"text-white\",\n        glass: \"text-white\",\n        neumorphicLight: \"text-gray-800\",\n        glow: \"text-white\",\n        '3d': \"text-gray-900 dark:text-white\",\n      },\n      // Size variants\n      size: {\n        xs: \"text-xs\",\n        sm: \"text-sm\",\n        md: \"text-base\",\n        lg: \"text-lg\",\n        xl: \"text-xl\",\n        \"2xl\": \"text-2xl\",\n        \"3xl\": \"text-3xl\",\n        \"4xl\": \"text-4xl\",\n        \"5xl\": \"text-5xl\",\n      },\n      // Weight variants\n      weight: {\n        light: \"font-light\",\n        normal: \"font-normal\",\n        medium: \"font-medium\",\n        semibold: \"font-semibold\",\n        bold: \"font-bold\",\n      },\n      // Cursor variants\n      cursor: {\n        bar: \"\",\n        block: \"\",\n        underscore: \"\",\n        none: \"\",\n      },\n      // Additional effect variants\n      effect: {\n        none: \"\",\n        glow: \"\",\n        gradient: \"\",\n        shadow: \"\",\n      },\n      // Speed variants\n      speed: {\n        slow: \"\",\n        normal: \"\",\n        fast: \"\",\n      },\n    },\n    // Compound variants\n    compoundVariants: [\n      // Effect specifics for different themes\n      {\n        effect: \"glow\",\n        theme: \"enterprise\",\n        className: \"text-shadow-blue\",\n      },\n      {\n        effect: \"glow\",\n        theme: \"techDark\",\n        className: \"text-shadow-purple\",\n      },\n      {\n        effect: \"glow\",\n        theme: \"glass\",\n        className: \"text-shadow-white\",\n      },\n      {\n        effect: \"glow\",\n        theme: \"neumorphicLight\",\n        className: \"text-shadow-blue-light\",\n      },\n      {\n        effect: \"glow\",\n        theme: \"glow\",\n        className: \"text-shadow-blue-strong\",\n      },\n      {\n        effect: \"gradient\",\n        theme: \"enterprise\",\n        className: \"bg-gradient-to-r from-blue-500 to-blue-700 text-transparent bg-clip-text\",\n      },\n      {\n        effect: \"gradient\",\n        theme: \"techDark\",\n        className: \"bg-gradient-to-r from-purple-500 to-blue-500 text-transparent bg-clip-text\",\n      },\n      {\n        effect: \"gradient\",\n        theme: \"glass\",\n        className: \"bg-gradient-to-r from-white to-blue-200 text-transparent bg-clip-text\",\n      },\n      {\n        effect: \"gradient\",\n        theme: \"neumorphicLight\",\n        className: \"bg-gradient-to-r from-blue-500 to-purple-500 text-transparent bg-clip-text\",\n      },\n      {\n        effect: \"gradient\",\n        theme: \"glow\",\n        className: \"bg-gradient-to-r from-blue-400 to-purple-500 text-transparent bg-clip-text\",\n      },\n      {\n        effect: \"shadow\",\n        theme: \"enterprise\",\n        className: \"drop-shadow-md\",\n      },\n      {\n        effect: \"shadow\",\n        theme: \"techDark\",\n        className: \"drop-shadow-lg\",\n      },\n      {\n        effect: \"shadow\",\n        theme: \"glass\",\n        className: \"drop-shadow-xl\",\n      },\n    ],\n    // Default variant values\n    defaultVariants: {\n      theme: \"enterprise\",\n      size: \"md\",\n      weight: \"normal\",\n      cursor: \"bar\",\n      effect: \"none\",\n      speed: \"normal\",\n    },\n  }\n);\n\n// Cursor component variants\nconst cursorVariants = cva(\n  \"inline-block\", // Base styles\n  {\n    variants: {\n      theme: {\n        enterprise: \"bg-blue-500\",\n        techDark: \"bg-purple-500\",\n        glass: \"bg-white\",\n        neumorphicLight: \"bg-blue-500\",\n        glow: \"bg-blue-500\",\n        '3d': \"bg-blue-500 dark:bg-blue-400\",\n      },\n      cursor: {\n        bar: \"h-4 w-1\",\n        block: \"h-4 w-3\",\n        underscore: \"h-1 w-4 align-bottom mb-0.5\",\n        none: \"hidden\",\n      },\n      effect: {\n        none: \"\",\n        glow: \"shadow-glow\",\n        gradient: \"\",\n        shadow: \"\",\n      },\n    },\n    compoundVariants: [\n      {\n        effect: \"glow\",\n        theme: \"enterprise\",\n        className: \"shadow-blue-glow\",\n      },\n      {\n        effect: \"glow\",\n        theme: \"techDark\",\n        className: \"shadow-purple-glow\",\n      },\n      {\n        effect: \"glow\",\n        theme: \"glass\",\n        className: \"shadow-white-glow\",\n      },\n      {\n        effect: \"glow\",\n        theme: \"glow\",\n        className: \"shadow-blue-glow-strong\",\n      },\n    ],\n    defaultVariants: {\n      theme: \"enterprise\",\n      cursor: \"bar\",\n      effect: \"none\",\n    },\n  }\n);\n\n// Extract variant props types from the CVA functions\nexport type TextGenerateVariantProps = VariantProps<typeof textGenerateVariants>;\nexport type CursorVariantProps = VariantProps<typeof cursorVariants>;\n\n// Define the props interface for the component\nexport interface TextGenerateEffectProps extends HTMLAttributes<HTMLSpanElement>, TextGenerateVariantProps {\n  words: string;\n  onComplete?: () => void;\n  loop?: boolean;\n  delay?: number;\n  typingDelay?: number;\n  theme?: TextGenerateTheme;\n}\n\nconst TextGenerateEffect: React.FC<TextGenerateEffectProps> = ({\n  words,\n  className,\n  theme: themeProp,\n  size,\n  weight,\n  cursor,\n  effect,\n  speed,\n  onComplete,\n  loop = false,\n  delay = 0,\n  typingDelay,\n  ...props\n}) => {\n  // Get the current theme from context\n  const { theme: contextTheme } = useSafeTheme();\n  \n  // Use prop theme or fall back to context\n  const activeTheme = themeProp || contextTheme;\n  \n  // State\n  const [wordArray, setWordArray] = useState<string[]>([]);\n  const [isComplete, setIsComplete] = useState<boolean>(false);\n  const [isPlaying, setIsPlaying] = useState<boolean>(true);\n  const timeoutRef = useRef<number | null>(null);\n  const intervalRef = useRef<number | null>(null);\n  \n  // Get typing speed based on the speed prop\n  const getTypingDelay = (): number => {\n    if (typingDelay !== undefined) return typingDelay;\n    \n    const speedMap: Record<SpeedType, number> = {\n      slow: 80,\n      normal: 30,\n      fast: 10,\n    };\n    \n    return speedMap[speed as SpeedType] || speedMap.normal;\n  };\n  \n  // Generate text effect\n  useEffect(() => {\n    if (!isPlaying) return;\n    \n    // Reset if words change\n    setWordArray([]);\n    setIsComplete(false);\n    \n    // Clear any existing timeouts/intervals\n    if (timeoutRef.current) clearTimeout(timeoutRef.current);\n    if (intervalRef.current) clearInterval(intervalRef.current);\n    \n    // Initial delay before starting\n    timeoutRef.current = window.setTimeout(() => {\n      // Split the words into an array of characters\n      const chars = words.split('');\n      \n      let index = -1;\n      \n      // Add each character to the array one by one with a delay\n      intervalRef.current = window.setInterval(() => {\n        index++;\n        setWordArray((prev) => [...prev, chars[index]]);\n        \n        if (index === chars.length - 1) {\n          if (intervalRef.current) clearInterval(intervalRef.current);\n          setIsComplete(true);\n          \n          if (onComplete) {\n            onComplete();\n          }\n          \n          // If looping is enabled, reset after a delay\n          if (loop) {\n            timeoutRef.current = window.setTimeout(() => {\n              setWordArray([]);\n              setIsComplete(false);\n            }, 2000); // Pause before restarting\n          }\n        }\n      }, getTypingDelay());\n    }, delay);\n    \n    return () => {\n      if (timeoutRef.current) clearTimeout(timeoutRef.current);\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, [words, isPlaying, loop, delay, speed, onComplete, typingDelay]);\n  \n  // Get main text classes\n  const textClasses = textGenerateVariants({\n    theme: activeTheme as TextGenerateTheme,\n    size,\n    weight,\n    cursor,\n    effect,\n    speed,\n    className,\n  });\n  \n  // Get cursor classes\n  const cursorClasses = cursorVariants({\n    theme: activeTheme as TextGenerateTheme,\n    cursor,\n    effect,\n  });\n  \n  // Pause/resume functionality\n  const togglePlayPause = (): void => {\n    setIsPlaying(!isPlaying);\n  };\n  \n  return (\n    <span className={cn(textClasses)} onClick={togglePlayPause} {...props}>\n      {wordArray.join('')}\n      {!isComplete && (\n        <span \n          className={cn(cursorClasses, \"ml-1 animate-blink\")}\n          style={{\n            animation: \"blink 0.8s infinite\",\n          }}\n        />\n      )}\n      <style jsx global>{`\n        @keyframes blink {\n          0%, 100% { opacity: 0; }\n          50% { opacity: 1; }\n        }\n        .text-shadow-blue {\n          text-shadow: 0 0 8px rgba(59, 130, 246, 0.5);\n        }\n        .text-shadow-purple {\n          text-shadow: 0 0 8px rgba(139, 92, 246, 0.5);\n        }\n        .text-shadow-white {\n          text-shadow: 0 0 8px rgba(255, 255, 255, 0.5);\n        }\n        .text-shadow-blue-light {\n          text-shadow: 0 0 5px rgba(59, 130, 246, 0.3);\n        }\n        .text-shadow-blue-strong {\n          text-shadow: 0 0 12px rgba(59, 130, 246, 0.8);\n        }\n        .shadow-blue-glow {\n          box-shadow: 0 0 5px rgba(59, 130, 246, 0.5);\n        }\n        .shadow-purple-glow {\n          box-shadow: 0 0 5px rgba(139, 92, 246, 0.5);\n        }\n        .shadow-white-glow {\n          box-shadow: 0 0 5px rgba(255, 255, 255, 0.5);\n        }\n        .shadow-blue-glow-strong {\n          box-shadow: 0 0 8px rgba(59, 130, 246, 0.8);\n        }\n      `}</style>\n    </span>\n  );\n};\n\nexport { TextGenerateEffect, textGenerateVariants };"],"names":["textGenerateVariants","cva","cursorVariants","TextGenerateEffect","words","className","themeProp","size","weight","cursor","effect","speed","onComplete","loop","delay","typingDelay","props","contextTheme","useSafeTheme","activeTheme","wordArray","setWordArray","useState","isComplete","setIsComplete","isPlaying","setIsPlaying","timeoutRef","useRef","intervalRef","getTypingDelay","speedMap","useEffect","chars","index","prev","textClasses","cursorClasses","togglePlayPause","jsxs","cn","jsx"],"mappings":"yOAwBMA,EAAuBC,EAAA,IAC3B,wBACA,CACE,SAAU,CAER,MAAO,CACL,WAAY,gBACZ,SAAU,aACV,MAAO,aACP,gBAAiB,gBACjB,KAAM,aACN,KAAM,+BACR,EAEA,KAAM,CACJ,GAAI,UACJ,GAAI,UACJ,GAAI,YACJ,GAAI,UACJ,GAAI,UACJ,MAAO,WACP,MAAO,WACP,MAAO,WACP,MAAO,UACT,EAEA,OAAQ,CACN,MAAO,aACP,OAAQ,cACR,OAAQ,cACR,SAAU,gBACV,KAAM,WACR,EAEA,OAAQ,CACN,IAAK,GACL,MAAO,GACP,WAAY,GACZ,KAAM,EACR,EAEA,OAAQ,CACN,KAAM,GACN,KAAM,GACN,SAAU,GACV,OAAQ,EACV,EAEA,MAAO,CACL,KAAM,GACN,OAAQ,GACR,KAAM,EAAA,CAEV,EAEA,iBAAkB,CAEhB,CACE,OAAQ,OACR,MAAO,aACP,UAAW,kBACb,EACA,CACE,OAAQ,OACR,MAAO,WACP,UAAW,oBACb,EACA,CACE,OAAQ,OACR,MAAO,QACP,UAAW,mBACb,EACA,CACE,OAAQ,OACR,MAAO,kBACP,UAAW,wBACb,EACA,CACE,OAAQ,OACR,MAAO,OACP,UAAW,yBACb,EACA,CACE,OAAQ,WACR,MAAO,aACP,UAAW,0EACb,EACA,CACE,OAAQ,WACR,MAAO,WACP,UAAW,4EACb,EACA,CACE,OAAQ,WACR,MAAO,QACP,UAAW,uEACb,EACA,CACE,OAAQ,WACR,MAAO,kBACP,UAAW,4EACb,EACA,CACE,OAAQ,WACR,MAAO,OACP,UAAW,4EACb,EACA,CACE,OAAQ,SACR,MAAO,aACP,UAAW,gBACb,EACA,CACE,OAAQ,SACR,MAAO,WACP,UAAW,gBACb,EACA,CACE,OAAQ,SACR,MAAO,QACP,UAAW,gBAAA,CAEf,EAEA,gBAAiB,CACf,MAAO,aACP,KAAM,KACN,OAAQ,SACR,OAAQ,MACR,OAAQ,OACR,MAAO,QAAA,CACT,CAEJ,EAGMC,EAAiBD,EAAA,IACrB,eACA,CACE,SAAU,CACR,MAAO,CACL,WAAY,cACZ,SAAU,gBACV,MAAO,WACP,gBAAiB,cACjB,KAAM,cACN,KAAM,8BACR,EACA,OAAQ,CACN,IAAK,UACL,MAAO,UACP,WAAY,8BACZ,KAAM,QACR,EACA,OAAQ,CACN,KAAM,GACN,KAAM,cACN,SAAU,GACV,OAAQ,EAAA,CAEZ,EACA,iBAAkB,CAChB,CACE,OAAQ,OACR,MAAO,aACP,UAAW,kBACb,EACA,CACE,OAAQ,OACR,MAAO,WACP,UAAW,oBACb,EACA,CACE,OAAQ,OACR,MAAO,QACP,UAAW,mBACb,EACA,CACE,OAAQ,OACR,MAAO,OACP,UAAW,yBAAA,CAEf,EACA,gBAAiB,CACf,MAAO,aACP,OAAQ,MACR,OAAQ,MAAA,CACV,CAEJ,EAgBME,EAAwD,CAAC,CAC7D,MAAAC,EACA,UAAAC,EACA,MAAOC,EACP,KAAAC,EACA,OAAAC,EACA,OAAAC,EACA,OAAAC,EACA,MAAAC,EACA,WAAAC,EACA,KAAAC,EAAO,GACP,MAAAC,EAAQ,EACR,YAAAC,EACA,GAAGC,CACL,IAAM,CAEJ,KAAM,CAAE,MAAOC,CAAa,EAAIC,eAAa,EAGvCC,EAAcb,GAAaW,EAG3B,CAACG,EAAWC,CAAY,EAAIC,EAAAA,SAAmB,CAAA,CAAE,EACjD,CAACC,EAAYC,CAAa,EAAIF,EAAAA,SAAkB,EAAK,EACrD,CAACG,EAAWC,CAAY,EAAIJ,EAAAA,SAAkB,EAAI,EAClDK,EAAaC,SAAsB,IAAI,EACvCC,EAAcD,SAAsB,IAAI,EAGxCE,EAAiB,IAAc,CAC/B,GAAAf,IAAgB,OAAkB,OAAAA,EAEtC,MAAMgB,EAAsC,CAC1C,KAAM,GACN,OAAQ,GACR,KAAM,EACR,EAEO,OAAAA,EAASpB,CAAkB,GAAKoB,EAAS,MAClD,EAGAC,EAAAA,UAAU,IAAM,CACd,GAAKP,EAGL,OAAAJ,EAAa,CAAA,CAAE,EACfG,EAAc,EAAK,EAGfG,EAAW,SAAsB,aAAAA,EAAW,OAAO,EACnDE,EAAY,SAAuB,cAAAA,EAAY,OAAO,EAG/CF,EAAA,QAAU,OAAO,WAAW,IAAM,CAErC,MAAAM,EAAQ7B,EAAM,MAAM,EAAE,EAE5B,IAAI8B,EAAQ,GAGAL,EAAA,QAAU,OAAO,YAAY,IAAM,CAC7CK,IACab,EAACc,GAAS,CAAC,GAAGA,EAAMF,EAAMC,CAAK,CAAC,CAAC,EAE1CA,IAAUD,EAAM,OAAS,IACvBJ,EAAY,SAAuB,cAAAA,EAAY,OAAO,EAC1DL,EAAc,EAAI,EAEdZ,GACSA,EAAA,EAITC,IACSc,EAAA,QAAU,OAAO,WAAW,IAAM,CAC3CN,EAAa,CAAA,CAAE,EACfG,EAAc,EAAK,GAClB,GAAI,GAGb,EAAGM,GAAgB,GAClBhB,CAAK,EAED,IAAM,CACPa,EAAW,SAAsB,aAAAA,EAAW,OAAO,EACnDE,EAAY,SAAuB,cAAAA,EAAY,OAAO,CAC5D,CAAA,EACC,CAACzB,EAAOqB,EAAWZ,EAAMC,EAAOH,EAAOC,EAAYG,CAAW,CAAC,EAGlE,MAAMqB,EAAcpC,EAAqB,CACvC,MAAOmB,EACP,KAAAZ,EACA,OAAAC,EACA,OAAAC,EACA,OAAAC,EACA,MAAAC,EACA,UAAAN,CAAA,CACD,EAGKgC,EAAgBnC,EAAe,CACnC,MAAOiB,EACP,OAAAV,EACA,OAAAC,CAAA,CACD,EAGK4B,EAAkB,IAAY,CAClCZ,EAAa,CAACD,CAAS,CACzB,EAGE,OAAAc,yBAAC,QAAK,UAAWC,EAAA,GAAGJ,CAAW,EAAG,QAASE,EAAkB,GAAGtB,EAC7D,SAAA,CAAAI,EAAU,KAAK,EAAE,EACjB,CAACG,GACAkB,EAAA,kBAAA,IAAC,OAAA,CACC,UAAWD,EAAAA,GAAGH,EAAe,oBAAoB,EACjD,MAAO,CACL,UAAW,qBAAA,CACb,CACF,EAEDI,EAAA,kBAAA,IAAA,QAAA,CAAM,IAAG,GAAC,OAAM,GAAE,SAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAgCjB,CAAA,CAAA,EACJ,CAEJ"}