{"version":3,"file":"index.esm11.js","sources":["../src/components/ui/Header.tsx"],"sourcesContent":["import React, { useState, useEffect, forwardRef, memo, ReactNode, MouseEvent, HTMLAttributes, ForwardedRef, ReactElement } from 'react';\nimport { cva, VariantProps } from 'class-variance-authority';\nimport { useSafeTheme } from '../../hooks/useSafeTheme';\nimport { cn } from '../../utils/cn';\n\n// Define theme types based on your available themes\nexport type HeaderTheme = 'enterprise' | 'techDark' | 'glass';\nexport type TransparentColor = 'white' | 'default';\n\n// Define the variants with class-variance-authority\nconst headerVariants = cva(\n  // Base styles for all Header components\n  \"w-full py-4 px-4 md:px-6 transition-all\",\n  {\n    variants: {\n      // Theme variants\n      theme: {\n        enterprise: \"bg-background-primary border-b border-border shadow-sm\",\n        techDark: \"bg-background-primary border-b border-border\",\n        glass: \"backdrop-blur-md border-b border-border/30\",\n      } as const,\n      // Position variants\n      position: {\n        static: \"relative\",\n        sticky: \"sticky top-0 z-50\",\n        fixed: \"fixed top-0 left-0 right-0 z-50\",\n      } as const,\n      // Size variants\n      size: {\n        sm: \"py-2\",\n        md: \"py-4\",\n        lg: \"py-6\",\n      } as const,\n      // Container width\n      width: {\n        full: \"w-full\",\n        contained: \"w-full max-w-7xl mx-auto\",\n      } as const,\n      // Extra visual styles\n      variant: {\n        default: \"\",\n        transparent: \"bg-transparent border-transparent\",\n        colored: \"\",\n        elevated: \"shadow-md\",\n      } as const,\n    },\n    compoundVariants: [\n      // Enterprise theme specifics\n      {\n        theme: \"enterprise\",\n        variant: \"colored\",\n        className: \"bg-primary text-primary-foreground\",\n      },\n      // Tech Dark theme specifics\n      {\n        theme: \"techDark\",\n        variant: \"elevated\",\n        className: \"shadow-lg bg-background-primary/90 backdrop-blur-sm\"\n      },\n      // Glass theme specifics\n      {\n        theme: \"glass\",\n        variant: \"default\",\n        className: \"bg-background-primary/70 backdrop-blur-md\"\n      },\n      {\n        theme: \"glass\",\n        variant: \"transparent\",\n        className: \"bg-transparent backdrop-blur-md\"\n      },\n      {\n        theme: \"glass\",\n        variant: \"colored\",\n        className: \"bg-primary/80 text-primary-foreground backdrop-blur-md\"\n      },\n    ],\n    defaultVariants: {\n      theme: \"enterprise\",\n      position: \"static\",\n      size: \"md\",\n      width: \"full\",\n      variant: \"default\",\n    }\n  }\n);\n\n// Define variants for the navigation container\nconst navVariants = cva(\n  \"hidden md:flex items-center space-x-1\",\n  {\n    variants: {\n      placement: {\n        center: \"justify-center\",\n        end: \"justify-end\",\n        start: \"justify-start\",\n        between: \"justify-between\",\n      } as const,\n      size: {\n        sm: \"text-sm\",\n        md: \"text-base\",\n        lg: \"text-lg\",\n      } as const,\n    },\n    defaultVariants: {\n      placement: \"end\",\n      size: \"md\",\n    }\n  }\n);\n\n// Define variants for the navigation items\nconst navItemVariants = cva(\n  \"relative transition-colors duration-200 font-medium hover:text-foreground-primary focus:outline-none focus:ring-2 focus:ring-primary/50 rounded\",\n  {\n    variants: {\n      theme: {\n        enterprise: \"text-foreground-secondary hover:text-foreground-primary\",\n        techDark: \"text-foreground-secondary hover:text-foreground-primary\",\n        glass: \"text-foreground-secondary hover:text-foreground-primary\",\n      } as const,\n      size: {\n        sm: \"px-2 py-1 text-sm\",\n        md: \"px-3 py-2\",\n        lg: \"px-4 py-3 text-lg\",\n      } as const,\n      active: {\n        true: \"\",\n        false: \"\",\n      } as const,\n      variant: {\n        default: \"\",\n        subtle: \"hover:bg-background-secondary/50\",\n        solid: \"hover:bg-background-secondary\",\n        pill: \"rounded-full\",\n      } as const,\n    },\n    compoundVariants: [\n      // Active state for enterprise theme\n      {\n        theme: \"enterprise\",\n        active: true,\n        className: \"text-primary font-semibold\",\n      },\n      // Active state for tech dark theme\n      {\n        theme: \"techDark\",\n        active: true,\n        className: \"text-primary font-semibold\",\n      },\n      // Active state for glass theme\n      {\n        theme: \"glass\",\n        active: true,\n        className: \"text-foreground-primary font-semibold\",\n      },\n      // Pill variant active states\n      {\n        variant: \"pill\",\n        active: true,\n        className: \"bg-background-secondary\",\n      },\n      // Solid variant active states\n      {\n        variant: \"solid\",\n        active: true,\n        className: \"bg-background-secondary\",\n      },\n    ],\n    defaultVariants: {\n      theme: \"enterprise\",\n      size: \"md\",\n      active: false,\n      variant: \"default\",\n    }\n  }\n);\n\n// Mobile menu button variant\nconst mobileMenuButtonVariants = cva(\n  \"md:hidden inline-flex items-center justify-center p-2 rounded-md focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary\",\n  {\n    variants: {\n      theme: {\n        enterprise: \"text-foreground-secondary hover:text-foreground-primary hover:bg-background-secondary\",\n        techDark: \"text-foreground-secondary hover:text-foreground-primary hover:bg-background-secondary/50\",\n        glass: \"text-foreground-secondary hover:text-foreground-primary hover:bg-white/10\",\n      } as const,\n      open: {\n        true: \"\",\n        false: \"\",\n      } as const\n    },\n    compoundVariants: [\n      {\n        theme: \"enterprise\",\n        open: true,\n        className: \"text-foreground-primary bg-background-secondary\",\n      },\n      {\n        theme: \"techDark\",\n        open: true,\n        className: \"text-foreground-primary bg-background-secondary/50\",\n      },\n      {\n        theme: \"glass\",\n        open: true,\n        className: \"text-foreground-primary bg-white/10\",\n      }\n    ],\n    defaultVariants: {\n      theme: \"enterprise\",\n      open: false,\n    }\n  }\n);\n\n// Mobile menu variant\nconst mobileMenuVariants = cva(\n  \"md:hidden absolute left-0 right-0 z-20 p-4 transition-all duration-300 transform origin-top shadow-lg border-t border-border\",\n  {\n    variants: {\n      theme: {\n        enterprise: \"bg-background-primary\",\n        techDark: \"bg-background-primary\",\n        glass: \"bg-background-primary/90 backdrop-blur-md\",\n      } as const,\n      open: {\n        true: \"translate-y-0 opacity-100 visible\",\n        false: \"-translate-y-4 opacity-0 invisible\",\n      } as const\n    },\n    defaultVariants: {\n      theme: \"enterprise\",\n      open: false,\n    }\n  }\n);\n\n// Extract variant props types\ntype HeaderVariantProps = VariantProps<typeof headerVariants>;\ntype NavVariantProps = VariantProps<typeof navVariants>;\ntype NavItemVariantProps = VariantProps<typeof navItemVariants>;\ntype MobileMenuButtonVariantProps = VariantProps<typeof mobileMenuButtonVariants>;\ntype MobileMenuVariantProps = VariantProps<typeof mobileMenuVariants>;\n\n// Define prop interfaces for components\nexport interface HeaderProps extends Omit<HTMLAttributes<HTMLElement>, 'logo'>, HeaderVariantProps {\n  /** Logo element or string URL to logo image */\n  logo?: ReactNode | string;\n  /** Function called when logo is clicked */\n  onLogoClick?: (event: MouseEvent<HTMLElement>) => void;\n  /** Whether to hide the header when scrolling down */\n  hideOnScroll?: boolean;\n  /** Scroll threshold in pixels to trigger header style changes */\n  scrollThreshold?: number;\n  /** Breakpoint at which to show the mobile menu */\n  mobileMenuBreakpoint?: string;\n  /** Whether to use a transparent header before scrolling */\n  transparent?: boolean;\n  /** Text color to use when header is transparent */\n  transparentColor?: TransparentColor;\n  /** ReactNode children */\n  children?: ReactNode;\n  /** Additional class names */\n  className?: string;\n}\n\nexport interface NavigationProps extends HTMLAttributes<HTMLElement>, NavVariantProps {\n  /** ReactNode children */\n  children: ReactNode;\n  /** Additional class names */\n  className?: string;\n}\n\nexport interface NavItemProps extends HTMLAttributes<HTMLElement>, NavItemVariantProps {\n  /** URL for anchor tag - if provided, renders as anchor, otherwise as button */\n  href?: string;\n  /** Click handler function */\n  onClick?: (event: MouseEvent<HTMLElement>) => void;\n  /** ReactNode children */\n  children: ReactNode;\n  /** Additional class names */\n  className?: string;\n}\n\n// Define the type for the Header component with its sub-components\nexport interface HeaderComponent extends React.ForwardRefExoticComponent<HeaderProps & React.RefAttributes<HTMLElement>> {\n  Navigation: React.ForwardRefExoticComponent<NavigationProps & React.RefAttributes<HTMLElement>>;\n  NavItem: React.ForwardRefExoticComponent<NavItemProps & React.RefAttributes<HTMLElement>>;\n}\n\n// Header Component\nconst HeaderBase = memo(forwardRef<HTMLElement, HeaderProps>(({\n  children,\n  className,\n  theme: themeProp,\n  position,\n  size,\n  width,\n  variant,\n  logo,\n  onLogoClick,\n  hideOnScroll = false,\n  scrollThreshold = 50,\n  mobileMenuBreakpoint = 'md',\n  transparent = false,\n  transparentColor = 'white',\n  ...props\n}, ref) => {\n  const { theme: contextTheme } = useSafeTheme();\n  const activeTheme = themeProp || contextTheme || 'enterprise';\n  \n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [isScrolled, setIsScrolled] = useState<boolean>(false);\n  const [isHidden, setIsHidden] = useState<boolean>(false);\n  const [lastScrollY, setLastScrollY] = useState<number>(0);\n  \n  // Toggle mobile menu\n  const toggleMenu = (): void => setIsOpen(prev => !prev);\n  \n  // Close menu on larger screens\n  useEffect(() => {\n    const handleResize = (): void => {\n      const mdBreakpoint = 768; // Standard Tailwind md breakpoint\n      if (window.innerWidth >= mdBreakpoint) {\n        setIsOpen(false);\n      }\n    };\n    \n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  \n  // Handle scroll behavior\n  useEffect(() => {\n    const handleScroll = (): void => {\n      const currentScrollY = window.scrollY;\n      \n      // Determine if scrolled past threshold\n      if (currentScrollY > scrollThreshold) {\n        setIsScrolled(true);\n      } else {\n        setIsScrolled(false);\n      }\n      \n      // Hide header on scroll down if enabled\n      if (hideOnScroll) {\n        if (currentScrollY > lastScrollY && currentScrollY > 100) {\n          setIsHidden(true);\n        } else {\n          setIsHidden(false);\n        }\n      }\n      \n      setLastScrollY(currentScrollY);\n    };\n    \n    window.addEventListener('scroll', handleScroll, { passive: true });\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [hideOnScroll, lastScrollY, scrollThreshold]);\n  \n  // Determine if we should use transparent style\n  const useTransparent = transparent && !isScrolled;\n  \n  // Set component classes\n  const headerClasses = headerVariants({\n    theme: activeTheme as HeaderTheme,\n    position,\n    size,\n    width,\n    variant: useTransparent ? 'transparent' : variant,\n    className: cn(className, {\n      'translate-y-0': !isHidden,\n      '-translate-y-full': isHidden,\n    }),\n  });\n  \n  const handleLogoClick = (e: MouseEvent<HTMLElement>): void => {\n    if (onLogoClick) {\n      e.preventDefault();\n      onLogoClick(e);\n    }\n  };\n  \n  return (\n    <header\n      ref={ref as ForwardedRef<HTMLElement>}\n      className={headerClasses}\n      style={{\n        transition: 'transform 0.3s ease',\n        ...(useTransparent && {\n          '--transparent-color': transparentColor === 'white' ? 'white' : 'var(--foreground-primary)',\n        } as React.CSSProperties),\n      }}\n      {...props}\n    >\n      <div className={cn(\n        \"flex items-center justify-between w-full\",\n        width === 'contained' && \"max-w-7xl mx-auto px-4\"\n      )}>\n        {/* Logo area */}\n        <div className=\"flex items-center\">\n          {typeof logo === 'string' ? (\n            <a \n              href=\"/\" \n              onClick={handleLogoClick}\n              className=\"focus:outline-none\"\n            >\n              <img \n                src={logo} \n                alt=\"Logo\" \n                className=\"h-8 w-auto\"\n              />\n            </a>\n          ) : logo ? (\n            <div onClick={handleLogoClick}>\n              {logo}\n            </div>\n          ) : (\n            <a \n              href=\"/\" \n              onClick={handleLogoClick}\n              className={cn(\n                \"text-xl font-bold\",\n                useTransparent ? \"text-[var(--transparent-color)]\" : \"text-foreground-primary\"\n              )}\n            >\n              Lumina UI\n            </a>\n          )}\n        </div>\n        \n        {/* Navigation for larger screens */}\n        <div className=\"hidden md:flex items-center space-x-4\">\n          {children}\n        </div>\n        \n        {/* Mobile menu button */}\n        <button\n          type=\"button\"\n          className={mobileMenuButtonVariants({ theme: activeTheme as HeaderTheme, open: isOpen })}\n          aria-expanded={isOpen}\n          onClick={toggleMenu}\n        >\n          <span className=\"sr-only\">Toggle menu</span>\n          {isOpen ? (\n            <svg className=\"h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          ) : (\n            <svg className=\"h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n            </svg>\n          )}\n        </button>\n      </div>\n      \n      {/* Mobile menu */}\n      <div className={mobileMenuVariants({ theme: activeTheme as HeaderTheme, open: isOpen })}>\n        <nav className=\"flex flex-col space-y-2 py-2\">\n          {children}\n        </nav>\n      </div>\n    </header>\n  );\n}));\n\n// Navigation Component\nconst Navigation = memo(forwardRef<HTMLElement, NavigationProps>(({\n  children,\n  className,\n  placement,\n  size,\n  ...props\n}, ref) => {\n  const navClasses = navVariants({\n    placement,\n    size,\n    className,\n  });\n  \n  return (\n    <nav\n      ref={ref as ForwardedRef<HTMLElement>}\n      className={navClasses}\n      {...props}\n    >\n      {children}\n    </nav>\n  );\n}));\n\n// NavItem Component\nconst NavItem = memo(forwardRef<HTMLElement, NavItemProps>(({\n  children,\n  className,\n  theme: themeProp,\n  size,\n  active,\n  variant,\n  href,\n  onClick,\n  ...props\n}, ref) => {\n  const { theme: contextTheme } = useSafeTheme();\n  const activeTheme = themeProp || contextTheme || 'enterprise';\n  \n  const navItemClasses = navItemVariants({\n    theme: activeTheme as HeaderTheme,\n    size,\n    active,\n    variant,\n    className,\n  });\n  \n  // If href is provided, render as an anchor tag\n  if (href) {\n    return (\n      <a\n        ref={ref as ForwardedRef<HTMLAnchorElement>}\n        href={href}\n        className={navItemClasses}\n        onClick={onClick}\n        {...props}\n      >\n        {children}\n      </a>\n    );\n  }\n  \n  // Otherwise render as a button\n  return (\n    <button\n      ref={ref as ForwardedRef<HTMLButtonElement>}\n      type=\"button\"\n      className={navItemClasses}\n      onClick={onClick}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n}));\n\n// Set display names for debugging\nHeaderBase.displayName = 'Header';\nNavigation.displayName = 'Navigation';\nNavItem.displayName = 'NavItem';\n\n// Add sub-components to Header\nconst Header = HeaderBase as HeaderComponent;\nHeader.Navigation = Navigation;\nHeader.NavItem = NavItem;\n\nexport { Header, headerVariants, navVariants, navItemVariants };"],"names":["headerVariants","cva","navVariants","navItemVariants","mobileMenuButtonVariants","mobileMenuVariants","HeaderBase","memo","forwardRef","children","className","themeProp","position","size","width","variant","logo","onLogoClick","hideOnScroll","scrollThreshold","mobileMenuBreakpoint","transparent","transparentColor","props","ref","contextTheme","useSafeTheme","activeTheme","isOpen","setIsOpen","useState","isScrolled","setIsScrolled","isHidden","setIsHidden","lastScrollY","setLastScrollY","toggleMenu","prev","useEffect","handleResize","handleScroll","currentScrollY","useTransparent","headerClasses","cn","handleLogoClick","e","jsxs","jsx","Navigation","placement","navClasses","NavItem","active","href","onClick","navItemClasses","Header"],"mappings":"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"}