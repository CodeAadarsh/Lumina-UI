{"version":3,"file":"index.esm19.js","sources":["../src/providers/ThemeProvider.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { getTheme, defaultTheme } from '../themes/themes';\n\n// Define available themes\nexport type ThemeName = 'default' | 'techDark' | 'glass' | 'enterprise';\n\n// Theme configuration interface\nexport interface ThemeConfig {\n  name: ThemeName;\n  colors: {\n    background: {\n      primary: string;\n      secondary: string;\n      tertiary: string;\n    };\n    foreground: {\n      primary: string;\n      secondary: string;\n      tertiary: string;\n      quaternary: string;\n    };\n    border: {\n      default: string;\n      strong: string;\n      focus: string;\n    };\n    primary: {\n      lighter: string;\n      light: string;\n      base: string;\n      dark: string;\n      darker: string;\n      foreground: string;\n    };\n    accent?: {\n      purple?: {\n        base: string;\n      };\n      blue?: {\n        base: string;\n      };\n      cyan?: {\n        base: string;\n      };\n      pink?: {\n        base: string;\n      };\n    };\n  };\n  shadows: {\n    xs: string;\n    sm: string;\n    md: string;\n    lg: string;\n    xl: string;\n    '2xl': string;\n    'blue-glow'?: string;\n    'purple-glow'?: string;\n    'white-glow'?: string;\n    'multi-glow'?: string;\n  };\n  radii: {\n    xs: string;\n    sm: string;\n    md: string;\n    lg: string;\n    xl: string;\n    '2xl': string;\n    full: string;\n  };\n  effects?: {\n    backdrop?: {\n      blur: {\n        sm: string;\n        md: string;\n        lg: string;\n        xl: string;\n      };\n    };\n    border?: {\n      gradient?: {\n        primary: string;\n        rainbow: string;\n      };\n    };\n  };\n  typography: {\n    fontFamily: {\n      sans: string;\n      mono: string;\n    };\n  };\n  animations: {\n    durations: {\n      normal: string;\n    };\n    easings: {\n      easeInOut: string;\n    };\n  };\n}\n\n// Theme context interface\nexport interface ThemeContextType {\n  theme: ThemeName;\n  setTheme: (theme: ThemeName) => void;\n  themes: string[];\n  themeObject: ThemeConfig;\n}\n\n// Theme provider props interface\nexport interface ThemeProviderProps {\n  children: ReactNode;\n  theme?: ThemeName;\n  storageKey?: string;\n}\n\n// Create theme context with proper typing\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\n// Theme provider component\nexport const ThemeProvider = ({\n  children,\n  theme: initialTheme = defaultTheme,\n  storageKey = 'lumina-ui-theme',\n}: ThemeProviderProps) => {\n  // Get initial theme from localStorage or use the default\n  const [themeName, setThemeName] = useState<ThemeName>(() => {\n    if (typeof window !== 'undefined') {\n      const storedTheme = localStorage.getItem(storageKey);\n      return (storedTheme as ThemeName) || initialTheme;\n    }\n    return initialTheme;\n  });\n  \n  // Get the complete theme object\n  const theme = getTheme(themeName);\n  \n  // Update localStorage and apply theme CSS variables whenever theme changes\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem(storageKey, themeName);\n      applyTheme(theme);\n    }\n  }, [themeName, theme, storageKey]);\n  \n  // Helper function to update CSS variables based on current theme\n  const applyTheme = (theme: ThemeConfig): void => {\n    const root = document.documentElement;\n    \n    // Remove previous theme classes\n    root.classList.remove('theme-enterprise', 'theme-techDark', 'theme-glass');\n    // Add current theme class\n    root.classList.add(`theme-${themeName}`);\n    \n    // Apply color variables\n    // Background colors\n    root.style.setProperty('--background-primary', theme.colors.background.primary);\n    root.style.setProperty('--background-secondary', theme.colors.background.secondary);\n    root.style.setProperty('--background-tertiary', theme.colors.background.tertiary);\n    \n    // Foreground colors\n    root.style.setProperty('--foreground-primary', theme.colors.foreground.primary);\n    root.style.setProperty('--foreground-secondary', theme.colors.foreground.secondary);\n    root.style.setProperty('--foreground-tertiary', theme.colors.foreground.tertiary);\n    root.style.setProperty('--foreground-quaternary', theme.colors.foreground.quaternary);\n    \n    // Border colors\n    root.style.setProperty('--border-default', theme.colors.border.default);\n    root.style.setProperty('--border-strong', theme.colors.border.strong);\n    root.style.setProperty('--border-focus', theme.colors.border.focus);\n    \n    // Primary colors\n    root.style.setProperty('--primary-lighter', theme.colors.primary.lighter);\n    root.style.setProperty('--primary-light', theme.colors.primary.light);\n    root.style.setProperty('--primary-base', theme.colors.primary.base);\n    root.style.setProperty('--primary-dark', theme.colors.primary.dark);\n    root.style.setProperty('--primary-darker', theme.colors.primary.darker);\n    root.style.setProperty('--primary-foreground', theme.colors.primary.foreground);\n    \n    // Shadows\n    root.style.setProperty('--shadow-xs', theme.shadows.xs);\n    root.style.setProperty('--shadow-sm', theme.shadows.sm);\n    root.style.setProperty('--shadow-md', theme.shadows.md);\n    root.style.setProperty('--shadow-lg', theme.shadows.lg);\n    root.style.setProperty('--shadow-xl', theme.shadows.xl);\n    root.style.setProperty('--shadow-2xl', theme.shadows['2xl']);\n    \n    // Radii\n    root.style.setProperty('--radius-xs', theme.radii.xs);\n    root.style.setProperty('--radius-sm', theme.radii.sm);\n    root.style.setProperty('--radius-md', theme.radii.md);\n    root.style.setProperty('--radius-lg', theme.radii.lg);\n    root.style.setProperty('--radius-xl', theme.radii.xl);\n    root.style.setProperty('--radius-2xl', theme.radii['2xl']);\n    root.style.setProperty('--radius-full', theme.radii.full);\n    \n    // Apply special variables for Glass theme\n    if (themeName === 'glass' && theme.effects?.backdrop && theme.effects.border?.gradient) {\n      // Backdrop blur values\n      root.style.setProperty('--backdrop-blur-sm', theme.effects.backdrop.blur.sm);\n      root.style.setProperty('--backdrop-blur-md', theme.effects.backdrop.blur.md);\n      root.style.setProperty('--backdrop-blur-lg', theme.effects.backdrop.blur.lg);\n      root.style.setProperty('--backdrop-blur-xl', theme.effects.backdrop.blur.xl);\n      \n      // Glow shadows\n      if (theme.shadows['blue-glow']) {\n        root.style.setProperty('--shadow-blue-glow', theme.shadows['blue-glow']);\n      }\n      if (theme.shadows['purple-glow']) {\n        root.style.setProperty('--shadow-purple-glow', theme.shadows['purple-glow']);\n      }\n      if (theme.shadows['white-glow']) {\n        root.style.setProperty('--shadow-white-glow', theme.shadows['white-glow']);\n      }\n      if (theme.shadows['multi-glow']) {\n        root.style.setProperty('--shadow-multi-glow', theme.shadows['multi-glow']);\n      }\n      \n      // Gradient borders\n      root.style.setProperty('--border-gradient-primary', theme.effects.border.gradient.primary);\n      root.style.setProperty('--border-gradient-rainbow', theme.effects.border.gradient.rainbow);\n    }\n    \n    // Apply special variables for Tech Dark theme\n    if (themeName === 'techDark' && theme.colors.accent) {\n      // Accent colors\n      if (theme.colors.accent.purple) {\n        root.style.setProperty('--accent-purple', theme.colors.accent.purple.base);\n      }\n      if (theme.colors.accent.blue) {\n        root.style.setProperty('--accent-blue', theme.colors.accent.blue.base);\n      }\n      if (theme.colors.accent.cyan) {\n        root.style.setProperty('--accent-cyan', theme.colors.accent.cyan.base);\n      }\n      if (theme.colors.accent.pink) {\n        root.style.setProperty('--accent-pink', theme.colors.accent.pink.base);\n      }\n      \n      // Glow shadows\n      if (theme.shadows['blue-glow']) {\n        root.style.setProperty('--shadow-blue-glow', theme.shadows['blue-glow']);\n      }\n      if (theme.shadows['purple-glow']) {\n        root.style.setProperty('--shadow-purple-glow', theme.shadows['purple-glow']);\n      }\n      if (theme.shadows['multi-glow']) {\n        root.style.setProperty('--shadow-multi-glow', theme.shadows['multi-glow']);\n      }\n      \n      // Gradient borders\n      if (theme.effects?.border?.gradient) {\n        root.style.setProperty('--border-gradient-primary', theme.effects.border.gradient.primary);\n        root.style.setProperty('--border-gradient-rainbow', theme.effects.border.gradient.rainbow);\n      }\n    }\n    \n    // Set font family\n    root.style.setProperty('--font-sans', theme.typography.fontFamily.sans);\n    root.style.setProperty('--font-mono', theme.typography.fontFamily.mono);\n    \n    // Set animations\n    root.style.setProperty('--duration-normal', theme.animations.durations.normal);\n    root.style.setProperty('--ease-in-out', theme.animations.easings.easeInOut);\n  };\n  \n  // Create a function to change the theme\n  const setTheme = (newTheme: ThemeName): void => {\n    if (typeof newTheme === 'string' && getTheme(newTheme)) {\n      setThemeName(newTheme);\n    }\n  };\n  \n  // Context value\n  const value: ThemeContextType = {\n    theme: themeName,\n    setTheme,\n    themes: Object.keys(getTheme('all') || {}),\n    themeObject: theme,\n  };\n  \n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\n// Custom hook to use the theme context\nexport const useTheme = (): ThemeContextType => {\n  const context = useContext(ThemeContext);\n  \n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  \n  return context;\n};"],"names":["ThemeContext","createContext","ThemeProvider","children","initialTheme","defaultTheme","storageKey","themeName","setThemeName","useState","theme","getTheme","useEffect","applyTheme","root","value","newTheme","jsx","useTheme","context","useContext"],"mappings":"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"}