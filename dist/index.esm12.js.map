{"version":3,"file":"index.esm12.js","sources":["../src/components/ui/BentoGrid.tsx"],"sourcesContent":["import React, { useRef, useState, useCallback, memo, ReactNode, CSSProperties } from 'react';\nimport { useTheme } from '../../providers/ThemeProvider';\nimport { cn } from \"@/lib/utils\";\n\n/**\n * Grid column configurations\n */\nexport type BentoGridCols = 1 | 2 | 3 | 4;\n\n/**\n * Grid gap size options\n */\nexport type BentoGridGap = 2 | 4 | 6 | 8 | 12 | 16;\n\n/**\n * Available hover effects for BentoGridItems\n */\nexport type BentoGridHoverEffect = 'none' | 'tilt' | 'float' | 'magnet' | 'glow';\n\n/**\n * Intensity level for hover effects\n */\nexport type HoverEffectIntensity = 0.5 | 1 | 1.5 | 2;\n\n/**\n * BentoGrid component props\n */\nexport interface BentoGridProps {\n  /** Additional CSS classes to apply */\n  className?: string;\n  /** Grid child components */\n  children: ReactNode;\n  /** Number of columns in the grid */\n  cols?: BentoGridCols;\n  /** Gap between grid items */\n  gap?: BentoGridGap;\n  /** Maximum width of the grid container */\n  maxWidth?: 'sm' | 'md' | 'lg' | 'xl' | '2xl' | '7xl' | 'none';\n  /** Vertical rhythm for grid rows */\n  rowHeight?: 'auto' | 'uniform';\n}\n\n/**\n * A responsive grid layout inspired by Bento box designs\n */\nexport const BentoGrid = memo<BentoGridProps>(({\n  className,\n  children,\n  cols = 3,\n  gap = 4,\n  maxWidth = '7xl',\n  rowHeight = 'uniform',\n}) => {\n  const { themeObject } = useTheme();\n  \n  // Get grid template columns based on cols\n  const getGridCols = (): string => {\n    const colsMap: Record<BentoGridCols, string> = {\n      1: 'md:grid-cols-1',\n      2: 'md:grid-cols-2',\n      3: 'md:grid-cols-3',\n      4: 'md:grid-cols-4'\n    };\n    \n    return colsMap[cols] || 'md:grid-cols-3';\n  };\n\n  // Get max width class based on maxWidth prop\n  const getMaxWidthClass = (): string => {\n    const maxWidthMap: Record<NonNullable<BentoGridProps['maxWidth']>, string> = {\n      'sm': 'max-w-sm',\n      'md': 'max-w-md',\n      'lg': 'max-w-lg',\n      'xl': 'max-w-xl',\n      '2xl': 'max-w-2xl',\n      '7xl': 'max-w-7xl',\n      'none': 'max-w-none'\n    };\n    \n    return maxWidthMap[maxWidth] || 'max-w-7xl';\n  };\n  \n  return (\n    <div\n      className={cn(\n        \"mx-auto grid grid-cols-1\",\n        rowHeight === 'uniform' ? \"md:auto-rows-[18rem]\" : \"\",\n        `gap-${gap}`,\n        getGridCols(),\n        getMaxWidthClass(),\n        className\n      )}\n    >\n      {children}\n    </div>\n  );\n});\n\nBentoGrid.displayName = 'BentoGrid';\n\n/**\n * BentoGridItem component props\n */\nexport interface BentoGridItemProps {\n  /** Additional CSS classes to apply */\n  className?: string;\n  /** Title displayed in the item */\n  title?: ReactNode;\n  /** Description text displayed in the item */\n  description?: ReactNode;\n  /** Component for the header section (usually an image) */\n  header?: ReactNode;\n  /** Icon component or content for the top section */\n  icon?: ReactNode;\n  /** Hover effect type */\n  hoverEffect?: BentoGridHoverEffect;\n  /** Intensity of the hover effect */\n  intensity?: HoverEffectIntensity;\n  /** Optional click handler */\n  onClick?: () => void;\n  /** Controls if the item spans multiple columns */\n  colSpan?: 1 | 2;\n  /** Controls if the item spans multiple rows */\n  rowSpan?: 1 | 2;\n  /** Additional style object to apply */\n  style?: CSSProperties;\n  /** Custom background content (for gradients, etc.) */\n  backgroundContent?: ReactNode;\n  /** Footer content */\n  footer?: ReactNode;\n}\n\n/**\n * Individual item component for the BentoGrid\n */\nexport const BentoGridItem = memo<BentoGridItemProps>(({\n  className,\n  title,\n  description,\n  header,\n  icon,\n  hoverEffect = \"magnet\",\n  intensity = 1,\n  onClick,\n  colSpan = 1,\n  rowSpan = 1,\n  style,\n  backgroundContent,\n  footer,\n}) => {\n  const { themeObject, theme: themeName } = useTheme();\n  const itemRef = useRef<HTMLDivElement>(null);\n  const [transform, setTransform] = useState<string>(\"\");\n  const [isHovered, setIsHovered] = useState<boolean>(false);\n  \n  // Memorize handlers to prevent unnecessary re-renders\n  const handleMouseMove = useCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!itemRef.current || hoverEffect === \"none\") return;\n    \n    const rect = itemRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    \n    const centerX = rect.width / 2;\n    const centerY = rect.height / 2;\n    \n    const moveX = (x - centerX) / centerX; // -1 to 1\n    const moveY = (y - centerY) / centerY; // -1 to 1\n    \n    // Apply different effects based on the specified hover effect\n    if (hoverEffect === \"tilt\") {\n      // Tilt the card based on mouse position\n      const tiltAmount = 10 * intensity;\n      setTransform(`perspective(1000px) rotateX(${moveY * -tiltAmount}deg) rotateY(${moveX * tiltAmount}deg)`);\n    } else if (hoverEffect === \"float\") {\n      // Simple float effect on hover\n      setTransform(\"translateY(-10px)\");\n    } else if (hoverEffect === \"magnet\") {\n      // Magnetic effect that follows the cursor\n      const magnetStrength = 12 * intensity;\n      setTransform(`translate(${moveX * magnetStrength}px, ${moveY * magnetStrength}px)`);\n    } else if (hoverEffect === \"glow\") {\n      // Glow effect without moving the card\n      setTransform(\"scale(1.02)\");\n    }\n  }, [hoverEffect, intensity]);\n  \n  const handleMouseLeave = useCallback(() => {\n    setTransform(\"\");\n    setIsHovered(false);\n  }, []);\n  \n  const handleMouseEnter = useCallback(() => {\n    setIsHovered(true);\n  }, []);\n  \n  // Get theme-based classes\n  const getThemeClasses = (): string => {\n    type ThemeClassMap = Record<string, string>;\n    \n    const themeClasses: ThemeClassMap = {\n      \"enterprise\": \"bg-white border border-gray-200 shadow-lg\",\n      \"techDark\": \"bg-gray-900 border border-gray-800 shadow-xl gradient-border-1\",\n      \"glass\": \"glass-effect border border-white/30 backdrop-blur-lg\",\n      \"neumorphicLight\": \"bg-[#e0e5ec] shadow-[20px_20px_60px_#bebebe,-20px_-20px_60px_#ffffff] border-none\",\n      \"glow\": \"bg-gray-900/90 border border-blue-500/30 shadow-[0_0_15px_rgba(59,130,246,0.5),0_0_30px_rgba(59,130,246,0.3)]\",\n      \"3d\": \"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 transform-gpu shadow-xl\",\n    };\n    \n    return themeClasses[themeName as string] || \"bg-white border border-gray-200 shadow-lg\";\n  };\n  \n  // Get text color based on theme\n  const getTextClasses = (): string => {\n    const lightThemes = [\"enterprise\", \"neumorphicLight\", \"3d\"];\n    return lightThemes.includes(themeName as string) \n      ? \"text-gray-900 dark:text-white\" \n      : \"text-white\";\n  };\n  \n  // Get glow effect classes\n  const getGlowClasses = (): string => {\n    if (hoverEffect !== \"glow\") return \"\";\n    \n    type GlowClassMap = Record<string, string>;\n    \n    const glowClasses: GlowClassMap = {\n      \"enterprise\": \"hover:shadow-blue-glow\",\n      \"techDark\": \"hover:shadow-purple-glow\",\n      \"glass\": \"hover:shadow-white-glow\",\n      \"neumorphicLight\": \"hover:shadow-[10px_10px_20px_#bebebe,-10px_-10px_20px_#ffffff]\",\n      \"glow\": \"hover:shadow-multi-glow\",\n      \"3d\": \"hover:shadow-blue-glow dark:hover:shadow-blue-glow\",\n    };\n    \n    return glowClasses[themeName as string] || \"hover:shadow-lg\";\n  };\n  \n  // Get grid span classes\n  const getSpanClasses = (): string => {\n    const colSpanClasses: Record<NonNullable<BentoGridItemProps['colSpan']>, string> = {\n      1: '',\n      2: 'md:col-span-2'\n    };\n    \n    const rowSpanClasses: Record<NonNullable<BentoGridItemProps['rowSpan']>, string> = {\n      1: '',\n      2: 'md:row-span-2'\n    };\n    \n    return cn(colSpanClasses[colSpan], rowSpanClasses[rowSpan]);\n  };\n  \n  return (\n    <div\n      ref={itemRef}\n      className={cn(\n        \"group/bento row-span-1 flex flex-col justify-between space-y-4 rounded-xl p-4 transition-all duration-300 will-change-transform\",\n        getThemeClasses(),\n        getTextClasses(),\n        getGlowClasses(),\n        getSpanClasses(),\n        onClick && \"cursor-pointer\",\n        className\n      )}\n      style={{\n        transform,\n        transition: isHovered ? \"transform 0.2s cubic-bezier(0.17, 0.67, 0.83, 0.67)\" : \"transform 0.5s ease-out\",\n        ...style,\n      }}\n      onMouseMove={handleMouseMove}\n      onMouseLeave={handleMouseLeave}\n      onMouseEnter={handleMouseEnter}\n      onClick={onClick}\n    >\n      {backgroundContent && (\n        <div className=\"absolute inset-0 overflow-hidden rounded-xl\">\n          {backgroundContent}\n        </div>\n      )}\n      \n      {header && (\n        <div className=\"relative overflow-hidden rounded-lg bg-gray-900 dark:bg-black aspect-[2/1]\">\n          {header}\n        </div>\n      )}\n      \n      <div className=\"transition duration-200 group-hover/bento:translate-x-2 z-10\">\n        {icon && (\n          <div className=\"mb-2 text-xs font-medium text-blue-500 dark:text-blue-400\">\n            {icon}\n          </div>\n        )}\n        \n        {title && (\n          <div className=\"mb-2 font-sans text-lg font-bold text-neutral-600 dark:text-neutral-200\">\n            {title}\n          </div>\n        )}\n        \n        {description && (\n          <div className=\"font-sans text-sm font-normal text-neutral-600 dark:text-neutral-300\">\n            {description}\n          </div>\n        )}\n      </div>\n      \n      {footer && (\n        <div className=\"mt-auto pt-2\">\n          {footer}\n        </div>\n      )}\n    </div>\n  );\n});\n\nBentoGridItem.displayName = 'BentoGridItem';"],"names":["BentoGrid","memo","className","children","cols","gap","maxWidth","rowHeight","themeObject","useTheme","getGridCols","getMaxWidthClass","jsx","cn","BentoGridItem","title","description","header","icon","hoverEffect","intensity","onClick","colSpan","rowSpan","style","backgroundContent","footer","themeName","itemRef","useRef","transform","setTransform","useState","isHovered","setIsHovered","handleMouseMove","useCallback","e","rect","x","y","centerX","centerY","moveX","moveY","tiltAmount","magnetStrength","handleMouseLeave","handleMouseEnter","getThemeClasses","getTextClasses","getGlowClasses","getSpanClasses","colSpanClasses","rowSpanClasses","jsxs"],"mappings":"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"}