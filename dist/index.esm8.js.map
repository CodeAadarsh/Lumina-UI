{"version":3,"file":"index.esm8.js","sources":["../src/components/ui/Spotlight.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { cva } from 'class-variance-authority';\nimport { cn } from '../../utils/cn';\nimport { useSafeTheme } from '../../hooks/useSafeTheme';\n\n// Define the variants with class-variance-authority\nconst spotlightVariants = cva(\n  // Base styles for all Spotlight components\n  \"relative overflow-hidden\",\n  {\n    variants: {\n      // Theme variants\n      theme: {\n        enterprise: \"bg-white text-gray-900\",\n        techDark: \"bg-gray-950 text-white\",\n        glass: \"backdrop-blur-lg text-white\",\n        neumorphicLight: \"bg-[#e0e5ec] text-gray-800\",\n        glow: \"bg-gray-950 text-white\",\n        '3d': \"bg-white dark:bg-gray-900 text-gray-900 dark:text-white\",\n      },\n      // Size variants\n      size: {\n        sm: \"min-h-40\",\n        md: \"min-h-64\",\n        lg: \"min-h-96\",\n        full: \"min-h-screen\",\n      },\n      // Spotlight size variants\n      spotSize: {\n        sm: \"\", // small spotlight\n        md: \"\", // medium spotlight\n        lg: \"\", // large spotlight\n      },\n      // Spotlight intensity variants\n      intensity: {\n        low: \"\",\n        medium: \"\",\n        high: \"\",\n      },\n      // Animation variants\n      animation: {\n        none: \"\",\n        pulse: \"\",\n        breathe: \"\",\n        rainbow: \"\",\n      },\n      // Spotlight color variants\n      color: {\n        blue: \"\",\n        purple: \"\",\n        cyan: \"\",\n        pink: \"\",\n        amber: \"\",\n        multi: \"\",\n      },\n      // Spotlight type variants\n      type: {\n        radial: \"\",\n        directional: \"\",\n        beam: \"\",\n      },\n    },\n    defaultVariants: {\n      theme: \"enterprise\",\n      size: \"md\",\n      spotSize: \"md\",\n      intensity: \"medium\",\n      animation: \"none\",\n      color: \"blue\",\n      type: \"radial\",\n    },\n  }\n);\n\n// Get spotlight color based on color prop\nconst getSpotlightColor = (color, theme) => {\n  // Base colors\n  const colors = {\n    blue: {\n      enterprise: 'rgba(59, 130, 246, 0.15)',\n      techDark: 'rgba(59, 130, 246, 0.2)',\n      glass: 'rgba(59, 130, 246, 0.15)',\n      neumorphicLight: 'rgba(59, 130, 246, 0.15)',\n      glow: 'rgba(59, 130, 246, 0.25)',\n      '3d': 'rgba(59, 130, 246, 0.15)',\n    },\n    purple: {\n      enterprise: 'rgba(139, 92, 246, 0.15)',\n      techDark: 'rgba(139, 92, 246, 0.2)',\n      glass: 'rgba(139, 92, 246, 0.15)',\n      neumorphicLight: 'rgba(139, 92, 246, 0.15)',\n      glow: 'rgba(139, 92, 246, 0.25)',\n      '3d': 'rgba(139, 92, 246, 0.15)',\n    },\n    cyan: {\n      enterprise: 'rgba(6, 182, 212, 0.15)',\n      techDark: 'rgba(6, 182, 212, 0.2)',\n      glass: 'rgba(6, 182, 212, 0.15)',\n      neumorphicLight: 'rgba(6, 182, 212, 0.15)',\n      glow: 'rgba(6, 182, 212, 0.25)',\n      '3d': 'rgba(6, 182, 212, 0.15)',\n    },\n    pink: {\n      enterprise: 'rgba(236, 72, 153, 0.15)',\n      techDark: 'rgba(236, 72, 153, 0.2)',\n      glass: 'rgba(236, 72, 153, 0.15)',\n      neumorphicLight: 'rgba(236, 72, 153, 0.15)',\n      glow: 'rgba(236, 72, 153, 0.25)',\n      '3d': 'rgba(236, 72, 153, 0.15)',\n    },\n    amber: {\n      enterprise: 'rgba(245, 158, 11, 0.15)',\n      techDark: 'rgba(245, 158, 11, 0.2)',\n      glass: 'rgba(245, 158, 11, 0.15)',\n      neumorphicLight: 'rgba(245, 158, 11, 0.15)',\n      glow: 'rgba(245, 158, 11, 0.25)',\n      '3d': 'rgba(245, 158, 11, 0.15)',\n    },\n  };\n  \n  // Special case for multi-color\n  if (color === 'multi') {\n    return 'multi';\n  }\n  \n  return colors[color]?.[theme] || colors.blue[theme];\n};\n\n// Get spotlight size based on spotSize prop\nconst getSpotlightSize = (spotSize) => {\n  switch (spotSize) {\n    case 'sm': return 200;\n    case 'lg': return 600;\n    default: return 400; // medium\n  }\n};\n\n// Get spotlight intensity based on intensity prop\nconst getSpotlightIntensity = (intensity, theme) => {\n  // Base multiplier\n  const baseMultiplier = {\n    low: 0.7,\n    medium: 1,\n    high: 1.5,\n  }[intensity] || 1;\n  \n  // Theme-specific adjustments\n  const themeMultiplier = {\n    enterprise: 1,\n    techDark: 1.2,\n    glass: 0.8,\n    neumorphicLight: 0.9,\n    glow: 1.5,\n    '3d': 1.1,\n  }[theme] || 1;\n  \n  return baseMultiplier * themeMultiplier;\n};\n\nconst Spotlight = ({\n  children,\n  className,\n  theme: themeProp,\n  size,\n  spotSize,\n  intensity,\n  animation,\n  color,\n  type,\n  ...props\n}) => {\n  // Get the current theme from context\n  const { theme: contextTheme } = useSafeTheme();\n  \n  // Use prop theme or fall back to context\n  const activeTheme = themeProp || contextTheme;\n  \n  // Refs for container and animation\n  const containerRef = useRef(null);\n  const spotlightRef = useRef(null);\n  const rafRef = useRef(null);\n  const multiColorIndex = useRef(0);\n  \n  // State for mouse position and animation\n  const [mousePosition, setMousePosition] = useState({ x: -1000, y: -1000 });\n  const [isVisible, setIsVisible] = useState(false);\n  const [animationPhase, setAnimationPhase] = useState(0);\n  \n  // Classes based on variants\n  const containerClasses = spotlightVariants({\n    theme: activeTheme,\n    size,\n    spotSize,\n    intensity,\n    animation,\n    color,\n    type,\n    className,\n  });\n  \n  // Get configuration based on props\n  const spotlightColor = getSpotlightColor(color, activeTheme);\n  const spotlightSizePx = getSpotlightSize(spotSize);\n  const intensityValue = getSpotlightIntensity(intensity, activeTheme);\n  \n  // Handle mouse move\n  const handleMouseMove = (e) => {\n    if (!containerRef.current) return;\n    \n    const rect = containerRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    \n    setMousePosition({ x, y });\n    setIsVisible(true);\n    \n    // Apply 3D parallax effect to content\n    if (containerRef.current.querySelector('.spotlight-content')) {\n      const content = containerRef.current.querySelector('.spotlight-content');\n      const centerX = rect.width / 2;\n      const centerY = rect.height / 2;\n      \n      const moveX = (x - centerX) / rect.width * 10; // max 10px movement\n      const moveY = (y - centerY) / rect.height * 10;\n      \n      content.style.transform = `translate3d(${moveX}px, ${moveY}px, 0)`;\n    }\n  };\n  \n  const handleMouseLeave = () => {\n    // Fade out spotlight gradually\n    setIsVisible(false);\n    \n    // Reset content position\n    if (containerRef.current?.querySelector('.spotlight-content')) {\n      const content = containerRef.current.querySelector('.spotlight-content');\n      content.style.transform = 'translate3d(0, 0, 0)';\n    }\n  };\n  \n  // Animation loop for special effects\n  useEffect(() => {\n    if (animation === 'none') return;\n    \n    let startTime = Date.now();\n    \n    const animateSpotlight = () => {\n      if (!spotlightRef.current) {\n        rafRef.current = requestAnimationFrame(animateSpotlight);\n        return;\n      }\n      \n      const elapsed = Date.now() - startTime;\n      \n      if (animation === 'pulse') {\n        // Pulse animation - change size\n        const scale = 1 + Math.sin(elapsed / 1000) * 0.2;\n        spotlightRef.current.style.transform = `translate(-50%, -50%) scale(${scale})`;\n      } else if (animation === 'breathe') {\n        // Breathe animation - change opacity\n        const opacity = 0.5 + Math.sin(elapsed / 1500) * 0.3;\n        spotlightRef.current.style.opacity = opacity;\n      } else if (animation === 'rainbow' && color === 'multi') {\n        // Rainbow animation - cycle through colors\n        const hue = (elapsed / 50) % 360;\n        \n        if (type === 'radial') {\n          spotlightRef.current.style.background = `radial-gradient(circle at center, \n            hsla(${hue}, 100%, 60%, 0.25), \n            transparent 70%)`;\n        } else if (type === 'directional') {\n          spotlightRef.current.style.background = `linear-gradient(45deg, \n            hsla(${hue}, 100%, 60%, 0.25), \n            hsla(${hue + 60}, 100%, 60%, 0.1))`;\n        } else if (type === 'beam') {\n          spotlightRef.current.style.background = `linear-gradient(90deg, \n            transparent, \n            hsla(${hue}, 100%, 60%, 0.25), \n            transparent)`;\n        }\n      }\n      \n      // Continue animation\n      rafRef.current = requestAnimationFrame(animateSpotlight);\n      \n      // Update animation phase for component re-renders\n      if (elapsed > 1000) {\n        setAnimationPhase(prev => (prev + 1) % 1000);\n        startTime = Date.now();\n      }\n    };\n    \n    // Start animation\n    rafRef.current = requestAnimationFrame(animateSpotlight);\n    \n    // Cleanup\n    return () => {\n      if (rafRef.current) {\n        cancelAnimationFrame(rafRef.current);\n      }\n    };\n  }, [animation, type, color, animationPhase]);\n  \n  // Create spotlight styles based on configuration\n  const getSpotlightStyles = () => {\n    const baseStyles = {\n      position: 'absolute',\n      top: `${mousePosition.y}px`,\n      left: `${mousePosition.x}px`,\n      width: `${spotlightSizePx}px`,\n      height: `${spotlightSizePx}px`,\n      transform: 'translate(-50%, -50%)',\n      pointerEvents: 'none',\n      opacity: isVisible ? 1 : 0,\n      transition: 'opacity 0.3s ease',\n    };\n    \n    // For multi-color but not rainbow animation\n    if (color === 'multi' && animation !== 'rainbow') {\n      const multiColors = [\n        getSpotlightColor('blue', activeTheme),\n        getSpotlightColor('purple', activeTheme),\n        getSpotlightColor('cyan', activeTheme),\n        getSpotlightColor('pink', activeTheme),\n      ];\n      \n      const currentColor = multiColors[multiColorIndex.current % multiColors.length];\n      \n      // Auto-cycle colors during mouse movement\n      if (isVisible) {\n        setTimeout(() => {\n          multiColorIndex.current += 1;\n        }, 2000);\n      }\n      \n      if (type === 'radial') {\n        baseStyles.background = `radial-gradient(circle at center, ${currentColor}, transparent 70%)`;\n      } else if (type === 'directional') {\n        baseStyles.background = `linear-gradient(45deg, ${currentColor}, rgba(255, 255, 255, 0) 80%)`;\n      } else if (type === 'beam') {\n        baseStyles.width = '100%';\n        baseStyles.height = '200px';\n        baseStyles.background = `linear-gradient(90deg, transparent, ${currentColor}, transparent)`;\n      }\n    } else if (color === 'multi' && animation === 'rainbow') {\n      // Rainbow animation styles are handled in the animation loop\n      if (type === 'radial') {\n        baseStyles.background = 'radial-gradient(circle at center, rgba(59, 130, 246, 0.2), transparent 70%)';\n      } else if (type === 'directional') {\n        baseStyles.background = 'linear-gradient(45deg, rgba(59, 130, 246, 0.2), rgba(139, 92, 246, 0.1))';\n      } else if (type === 'beam') {\n        baseStyles.width = '100%';\n        baseStyles.height = '200px';\n        baseStyles.background = 'linear-gradient(90deg, transparent, rgba(59, 130, 246, 0.2), transparent)';\n      }\n    } else {\n      // Single color spotlight\n      if (type === 'radial') {\n        baseStyles.background = `radial-gradient(circle at center, ${spotlightColor}, transparent 70%)`;\n      } else if (type === 'directional') {\n        baseStyles.background = `linear-gradient(45deg, ${spotlightColor}, rgba(255, 255, 255, 0) 80%)`;\n      } else if (type === 'beam') {\n        baseStyles.width = '100%';\n        baseStyles.height = '200px';\n        baseStyles.background = `linear-gradient(90deg, transparent, ${spotlightColor}, transparent)`;\n      }\n    }\n    \n    // Apply intensity multiplier\n    if (intensityValue !== 1) {\n      // Extract current values and apply intensity\n      const adjustOpacity = (cssValue) => {\n        const opacityMatch = cssValue.match(/rgba\\((\\d+),\\s*(\\d+),\\s*(\\d+),\\s*([\\d.]+)\\)/);\n        if (opacityMatch) {\n          const r = opacityMatch[1];\n          const g = opacityMatch[2];\n          const b = opacityMatch[3];\n          const a = parseFloat(opacityMatch[4]) * intensityValue;\n          return `rgba(${r}, ${g}, ${b}, ${a})`;\n        }\n        return cssValue;\n      };\n      \n      if (baseStyles.background.includes('radial-gradient')) {\n        baseStyles.background = baseStyles.background.replace(/rgba\\([^)]+\\)/, adjustOpacity);\n      } else if (baseStyles.background.includes('linear-gradient')) {\n        baseStyles.background = baseStyles.background.replace(/rgba\\([^)]+\\)/, adjustOpacity);\n      }\n    }\n    \n    return baseStyles;\n  };\n  \n  return (\n    <div \n      ref={containerRef}\n      className={cn(containerClasses)}\n      onMouseMove={handleMouseMove}\n      onMouseLeave={handleMouseLeave}\n      {...props}\n    >\n      <div \n        ref={spotlightRef}\n        style={getSpotlightStyles()}\n      />\n      <div className=\"relative z-10 spotlight-content transition-transform duration-200\">\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport { Spotlight, spotlightVariants };"],"names":["spotlightVariants","cva","getSpotlightColor","color","theme","colors","_a","getSpotlightSize","spotSize","getSpotlightIntensity","intensity","baseMultiplier","themeMultiplier","Spotlight","children","className","themeProp","size","animation","type","props","contextTheme","useSafeTheme","activeTheme","containerRef","useRef","spotlightRef","rafRef","multiColorIndex","mousePosition","setMousePosition","useState","isVisible","setIsVisible","animationPhase","setAnimationPhase","containerClasses","spotlightColor","spotlightSizePx","intensityValue","handleMouseMove","rect","x","y","content","centerX","centerY","moveX","moveY","handleMouseLeave","useEffect","startTime","animateSpotlight","elapsed","scale","opacity","hue","prev","getSpotlightStyles","baseStyles","multiColors","currentColor","adjustOpacity","cssValue","opacityMatch","r","g","b","a","jsxs","cn","jsx"],"mappings":"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"}