{"version":3,"file":"index.esm18.js","sources":["../src/components/ui/ScrollMotion.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState, forwardRef, ReactNode, CSSProperties, ElementType, RefObject } from 'react';\nimport { cva, VariantProps } from 'class-variance-authority';\nimport { useTheme } from '../../providers/ThemeProvider';\n\n// Types for animation options\nexport type AnimationType = \n  | 'none' \n  | 'fadeIn' \n  | 'fadeInUp' \n  | 'fadeInDown' \n  | 'fadeInLeft' \n  | 'fadeInRight'\n  | 'scaleIn' \n  | 'scaleInUp' \n  | 'rotateIn' \n  | 'rotateInLeft' \n  | 'flipInX' \n  | 'flipInY' \n  | 'tiltIn'\n  | 'bounceIn' \n  | 'blurIn' \n  | 'glowIn';\n\nexport type DurationType = 'faster' | 'fast' | 'normal' | 'slow' | 'slower';\nexport type DelayType = 'none' | 'small' | 'medium' | 'large' | 'extraLarge';\nexport type EasingType = 'linear' | 'ease' | 'easeIn' | 'easeOut' | 'easeInOut' | 'spring' | 'bounce';\nexport type StaggerType = 'none' | 'small' | 'medium' | 'large';\nexport type ThresholdType = 'default' | 'half' | 'most' | 'full';\nexport type OffsetType = 'none' | 'small' | 'medium' | 'large';\nexport type DirectionType = 'x' | 'y' | 'both';\n\n// ScrollMotion container variants\nconst scrollMotionVariants = cva(\n  // Base styles\n  'relative transition-all',\n  {\n    variants: {\n      // Animation variants\n      animation: {\n        // No animation\n        none: '',\n        \n        // Fade animations\n        fadeIn: 'opacity-0 motion-fade-in',\n        fadeInUp: 'opacity-0 translate-y-10 motion-fade-in-up',\n        fadeInDown: 'opacity-0 -translate-y-10 motion-fade-in-down',\n        fadeInLeft: 'opacity-0 translate-x-10 motion-fade-in-left',\n        fadeInRight: 'opacity-0 -translate-x-10 motion-fade-in-right',\n        \n        // Scale animations\n        scaleIn: 'opacity-0 scale-95 motion-scale-in',\n        scaleInUp: 'opacity-0 scale-95 translate-y-10 motion-scale-in-up',\n        \n        // Rotate animations\n        rotateIn: 'opacity-0 rotate-12 motion-rotate-in',\n        rotateInLeft: 'opacity-0 -rotate-12 motion-rotate-in-left',\n        \n        // 3D Animations\n        flipInX: 'opacity-0 rotateX-90 motion-flip-in-x',\n        flipInY: 'opacity-0 rotateY-90 motion-flip-in-y',\n        tiltIn: 'opacity-0 perspective-1000 rotateX-10 motion-tilt-in',\n        \n        // Special animations\n        bounceIn: 'opacity-0 scale-90 motion-bounce-in',\n        blurIn: 'opacity-0 blur-sm motion-blur-in',\n        glowIn: 'opacity-0 motion-glow-in',\n      } as const,\n      \n      // Animation duration\n      duration: {\n        faster: 'motion-duration-300',\n        fast: 'motion-duration-500',\n        normal: 'motion-duration-700',\n        slow: 'motion-duration-1000',\n        slower: 'motion-duration-1500',\n      } as const,\n      \n      // Animation delay\n      delay: {\n        none: 'motion-delay-0',\n        small: 'motion-delay-100',\n        medium: 'motion-delay-300',\n        large: 'motion-delay-500',\n        extraLarge: 'motion-delay-1000',\n      } as const,\n      \n      // Animation easing\n      easing: {\n        linear: 'motion-easing-linear',\n        ease: 'motion-easing-ease',\n        easeIn: 'motion-easing-ease-in',\n        easeOut: 'motion-easing-ease-out',\n        easeInOut: 'motion-easing-ease-in-out',\n        spring: 'motion-easing-spring',\n        bounce: 'motion-easing-bounce',\n      } as const,\n      \n      // Animation stagger (for children)\n      stagger: {\n        none: 'motion-stagger-none',\n        small: 'motion-stagger-50',\n        medium: 'motion-stagger-100',\n        large: 'motion-stagger-200',\n      } as const,\n      \n      // Animation once or every time in viewport\n      once: {\n        true: 'motion-once',\n        false: '',\n      } as const,\n      \n      // Animation threshold (when to start)\n      threshold: {\n        default: 'motion-threshold-default', // 0.1\n        half: 'motion-threshold-half', // 0.5\n        most: 'motion-threshold-most', // 0.8\n        full: 'motion-threshold-full', // 1.0\n      } as const,\n      \n      // Animation offset (start before fully in viewport)\n      offset: {\n        none: 'motion-offset-none',\n        small: 'motion-offset-50',\n        medium: 'motion-offset-100',\n        large: 'motion-offset-200',\n      } as const,\n    },\n    defaultVariants: {\n      animation: 'fadeIn',\n      duration: 'normal',\n      delay: 'none',\n      easing: 'easeOut',\n      stagger: 'none',\n      once: true,\n      threshold: 'default',\n      offset: 'none',\n    },\n  }\n);\n\n// Get variant props type from scrollMotionVariants\nexport type ScrollMotionVariantProps = VariantProps<typeof scrollMotionVariants>;\n\n// ScrollMotion Component Props\nexport interface ScrollMotionProps extends Omit<React.HTMLAttributes<HTMLElement>, 'as'> {\n  /** Animation type to apply */\n  animation?: AnimationType;\n  /** Animation duration preset */\n  duration?: DurationType;\n  /** Animation delay preset */\n  delay?: DelayType;\n  /** Animation easing function */\n  easing?: EasingType;\n  /** Stagger animation for children */\n  stagger?: StaggerType;\n  /** Whether to animate only once or on every scroll */\n  once?: boolean;\n  /** Viewport threshold to trigger animation */\n  threshold?: ThresholdType;\n  /** Offset to start animation before fully in viewport */\n  offset?: OffsetType;\n  /** HTML element type to render */\n  as?: ElementType;\n  /** React children */\n  children: ReactNode;\n  /** Additional class name */\n  className?: string;\n  /** Custom inline styles */\n  style?: CSSProperties;\n  /** 3D perspective value in pixels */\n  perspective?: number;\n  /** 3D depth value in pixels */\n  depth?: number;\n  /** Initial X rotation in degrees */\n  rotateX?: number;\n  /** Initial Y rotation in degrees */\n  rotateY?: number;\n  /** Initial Z rotation in degrees */\n  rotateZ?: number;\n}\n\n// Utility to get numeric values for settings\nconst getDelayValue = (delay: DelayType | undefined): number => {\n  switch (delay) {\n    case 'small': return 100;\n    case 'medium': return 300;\n    case 'large': return 500;\n    case 'extraLarge': return 1000;\n    default: return 0;\n  }\n};\n\nconst getThresholdValue = (threshold: ThresholdType | undefined): number => {\n  switch (threshold) {\n    case 'half': return 0.5;\n    case 'most': return 0.8;\n    case 'full': return 1.0;\n    default: return 0.1;\n  }\n};\n\nconst getOffsetValue = (offset: OffsetType | undefined): number => {\n  switch (offset) {\n    case 'small': return 50;\n    case 'medium': return 100;\n    case 'large': return 200;\n    default: return 0;\n  }\n};\n\nconst getStaggerValue = (stagger: StaggerType | undefined): number => {\n  switch (stagger) {\n    case 'small': return 50;\n    case 'medium': return 100;\n    case 'large': return 200;\n    default: return 0;\n  }\n};\n\nconst getDurationValue = (duration: DurationType | undefined): number => {\n  switch (duration) {\n    case 'faster': return 300;\n    case 'fast': return 500;\n    case 'slow': return 1000;\n    case 'slower': return 1500;\n    default: return 700; // normal\n  }\n};\n\n/**\n * ScrollMotion Component\n * Triggers animations based on scroll position\n */\nconst ScrollMotion = forwardRef<HTMLElement, ScrollMotionProps>(({\n  // Animation props\n  animation,\n  duration,\n  delay,\n  easing,\n  stagger,\n  once = true,\n  threshold,\n  offset,\n  \n  // Component props\n  children,\n  as = 'div',\n  className = '',\n  style = {},\n  \n  // Special 3D props\n  perspective = 1000,\n  depth = 0,\n  rotateX = 0,\n  rotateY = 0,\n  rotateZ = 0,\n  \n  // Other props\n  ...props\n}, ref) => {\n  const { theme } = useTheme();\n  const localRef = useRef<HTMLElement>(null);\n  const combinedRef = (ref || localRef) as RefObject<HTMLElement>;\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n  const [isAnimated, setIsAnimated] = useState<boolean>(false);\n  \n  // Store child elements for staggered animations\n  const [childElements, setChildElements] = useState<HTMLElement[]>([]);\n  const [childAnimationIndex, setChildAnimationIndex] = useState<number>(0);\n  \n  // Get motion classes\n  const motionClasses = scrollMotionVariants({\n    animation,\n    duration,\n    delay,\n    easing,\n    stagger,\n    once,\n    threshold,\n    offset,\n    className,\n  });\n  \n  // Check if element is in viewport\n  const checkVisibility = (): void => {\n    if (!combinedRef.current) return;\n    \n    const element = combinedRef.current;\n    const rect = element.getBoundingClientRect();\n    \n    // Get threshold and offset values\n    const thresholdValue = getThresholdValue(threshold);\n    const offsetValue = getOffsetValue(offset);\n    \n    // Check if element is in viewport with threshold and offset\n    const inView = \n      rect.top + offsetValue <= (window.innerHeight * thresholdValue) &&\n      rect.bottom >= 0 &&\n      rect.left <= window.innerWidth &&\n      rect.right >= 0;\n      \n    // Update visibility state\n    if (inView) {\n      setIsVisible(true);\n      \n      // If animation should only happen once, track that it's been animated\n      if (once) {\n        setIsAnimated(true);\n      }\n    } else if (!once) {\n      setIsVisible(false);\n    }\n  };\n  \n  // Set up intersection observer for staggered child animations\n  useEffect(() => {\n    if (!combinedRef.current || stagger === 'none') return;\n    \n    // Get direct child elements\n    const children = Array.from(combinedRef.current.children) as HTMLElement[];\n    setChildElements(children);\n    \n    // Add initial invisible class to children\n    children.forEach(child => {\n      child.classList.add('opacity-0');\n      child.style.transition = `opacity ${getDurationValue(duration)}ms, transform ${getDurationValue(duration)}ms ${easing || 'ease-out'}`;\n    });\n    \n    // Reset animation index when component mounts or children change\n    setChildAnimationIndex(0);\n    \n  }, [stagger, duration, easing, children]);\n  \n  // Handle staggered animation of children\n  useEffect(() => {\n    if (!isVisible || stagger === 'none' || childElements.length === 0) return;\n    \n    // Get stagger delay value\n    const staggerDelay = getStaggerValue(stagger);\n    \n    // Calculate initial delay based on the component's delay prop\n    const initialDelay = getDelayValue(delay);\n    \n    // Staggered animation for children\n    const animateNextChild = (index: number): void => {\n      if (index < childElements.length) {\n        const child = childElements[index];\n        \n        // Add visible class and remove invisible class\n        child.classList.remove('opacity-0');\n        child.classList.add('opacity-100');\n        \n        // Add transform based on animation type\n        if (animation?.includes('Up')) {\n          child.style.transform = 'translateY(0)';\n        } else if (animation?.includes('Down')) {\n          child.style.transform = 'translateY(0)';\n        } else if (animation?.includes('Left')) {\n          child.style.transform = 'translateX(0)';\n        } else if (animation?.includes('Right')) {\n          child.style.transform = 'translateX(0)';\n        } else if (animation?.includes('scale')) {\n          child.style.transform = 'scale(1)';\n        } else if (animation?.includes('rotate')) {\n          child.style.transform = 'rotate(0)';\n        }\n        \n        // Schedule the next child animation\n        setTimeout(() => {\n          setChildAnimationIndex(index + 1);\n          animateNextChild(index + 1);\n        }, staggerDelay);\n      }\n    };\n    \n    // Start animation with initial delay only when first becoming visible\n    if (childAnimationIndex === 0) {\n      setTimeout(() => {\n        animateNextChild(0);\n      }, initialDelay);\n    }\n    \n  }, [isVisible, childElements, childAnimationIndex, stagger, animation, delay]);\n  \n  // Apply 3D transforms when in view\n  useEffect(() => {\n    if (!combinedRef.current) return;\n    \n    const element = combinedRef.current;\n    \n    if (isVisible) {\n      // Apply 3D transforms\n      element.style.transform = `\n        perspective(${perspective}px) \n        translateZ(${depth}px) \n        rotateX(0deg) \n        rotateY(0deg) \n        rotateZ(0deg)\n        scale(1)\n      `;\n      element.style.opacity = '1';\n    } else {\n      // Reset 3D transforms when not visible (unless once is true and already animated)\n      if (!(once && isAnimated)) {\n        // Only apply initial rotation values if they exist\n        const initialRotateX = animation?.includes('flipInX') ? '90deg' : \n                              animation?.includes('tiltIn') ? '10deg' : \n                              rotateX ? `${rotateX}deg` : '0deg';\n                              \n        const initialRotateY = animation?.includes('flipInY') ? '90deg' : \n                              rotateY ? `${rotateY}deg` : '0deg';\n                              \n        const initialRotateZ = rotateZ ? `${rotateZ}deg` : '0deg';\n        \n        // Apply scale based on animation\n        const initialScale = animation?.includes('scale') || animation?.includes('bounce') ? '0.95' : '1';\n        \n        element.style.transform = `\n          perspective(${perspective}px) \n          translateZ(${depth}px) \n          rotateX(${initialRotateX}) \n          rotateY(${initialRotateY}) \n          rotateZ(${initialRotateZ})\n          scale(${initialScale})\n        `;\n        element.style.opacity = '0';\n      }\n    }\n  }, [isVisible, isAnimated, once, perspective, depth, rotateX, rotateY, rotateZ, animation]);\n  \n  // Set up scroll event listener\n  useEffect(() => {\n    // Check visibility on initial render\n    checkVisibility();\n    \n    // Add scroll event listener\n    window.addEventListener('scroll', checkVisibility);\n    window.addEventListener('resize', checkVisibility);\n    \n    // Clean up\n    return () => {\n      window.removeEventListener('scroll', checkVisibility);\n      window.removeEventListener('resize', checkVisibility);\n    };\n  }, [once, threshold, offset]);\n  \n  // Create the element\n  const Component = as;\n  \n  // Prepare styles\n  const combinedStyles: CSSProperties = {\n    transformStyle: 'preserve-3d',\n    willChange: 'transform, opacity',\n    ...style,\n  };\n  \n  return (\n    <Component\n      ref={combinedRef}\n      className={motionClasses}\n      style={combinedStyles}\n      {...props}\n    >\n      {children}\n    </Component>\n  );\n});\n\nScrollMotion.displayName = 'ScrollMotion';\n\n// ScrollMotionItem Component Props\nexport interface ScrollMotionItemProps extends React.HTMLAttributes<HTMLDivElement> {\n  /** React children */\n  children: ReactNode;\n  /** Additional class name */\n  className?: string;\n  /** Custom inline styles */\n  style?: CSSProperties;\n}\n\n/**\n * ScrollMotionItem Component\n * For use inside ScrollMotion when using staggered animations\n */\nconst ScrollMotionItem = forwardRef<HTMLDivElement, ScrollMotionItemProps>(({\n  children,\n  className = '',\n  style = {},\n  ...props\n}, ref) => {\n  const combinedClasses = `transition-all ${className}`;\n  \n  return (\n    <div\n      ref={ref}\n      className={combinedClasses}\n      style={style}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n});\n\nScrollMotionItem.displayName = 'ScrollMotionItem';\n\n// ScrollMotion3D Component Props\nexport interface ScrollMotion3DProps extends ScrollMotionProps {\n  /** 3D perspective value in pixels */\n  perspective?: number;\n  /** 3D depth value in pixels */\n  depth?: number;\n  /** Initial X rotation in degrees */\n  rotateX?: number;\n  /** Initial Y rotation in degrees */\n  rotateY?: number;\n  /** Initial Z rotation in degrees */\n  rotateZ?: number;\n}\n\n/**\n * ScrollMotion3D Component\n * Enhanced ScrollMotion specifically for 3D motion effects\n */\nconst ScrollMotion3D = forwardRef<HTMLElement, ScrollMotion3DProps>(({\n  // 3D specific props\n  perspective = 1000,\n  depth = 50,\n  rotateX = 0,\n  rotateY = 0,\n  rotateZ = 0,\n  \n  // Animation props with 3D defaults\n  animation = 'tiltIn',\n  duration = 'normal',\n  easing = 'spring',\n  \n  // Other props\n  ...props\n}, ref) => {\n  return (\n    <ScrollMotion\n      ref={ref}\n      animation={animation}\n      duration={duration}\n      easing={easing}\n      perspective={perspective}\n      depth={depth}\n      rotateX={rotateX}\n      rotateY={rotateY}\n      rotateZ={rotateZ}\n      {...props}\n    />\n  );\n});\n\nScrollMotion3D.displayName = 'ScrollMotion3D';\n\n// ParallaxScrollItem Component Props\nexport interface ParallaxScrollItemProps extends React.HTMLAttributes<HTMLDivElement> {\n  /** Parallax speed multiplier (0-1 for normal, negative for opposite direction) */\n  speed?: number;\n  /** Direction of parallax effect */\n  direction?: DirectionType;\n  /** React children */\n  children: ReactNode;\n  /** Additional class name */\n  className?: string;\n  /** Custom inline styles */\n  style?: CSSProperties;\n}\n\n/**\n * ParallaxScrollItem Component\n * Creates a parallax effect on scroll\n */\nconst ParallaxScrollItem = forwardRef<HTMLDivElement, ParallaxScrollItemProps>(({\n  // Parallax specific props\n  speed = 0.5, // 0-1 for normal, negative for opposite direction\n  direction = 'y', // 'x', 'y', or 'both'\n  \n  // Component props\n  children,\n  className = '',\n  style = {},\n  ...props\n}, ref) => {\n  const localRef = useRef<HTMLDivElement>(null);\n  const combinedRef = (ref || localRef) as RefObject<HTMLDivElement>;\n  const [offset, setOffset] = useState<number>(0);\n  \n  // Calculate parallax effect\n  const calculateParallax = (): void => {\n    if (!combinedRef.current) return;\n    \n    const scrollY = window.scrollY;\n    const element = combinedRef.current;\n    const rect = element.getBoundingClientRect();\n    const elementTop = rect.top + scrollY;\n    const elementCenter = elementTop + (rect.height / 2);\n    const windowCenter = scrollY + (window.innerHeight / 2);\n    const distance = windowCenter - elementCenter;\n    \n    // Calculate offset with speed factor\n    setOffset(distance * speed);\n  };\n  \n  // Set up scroll event listener\n  useEffect(() => {\n    window.addEventListener('scroll', calculateParallax);\n    \n    // Initial calculation\n    calculateParallax();\n    \n    return () => {\n      window.removeEventListener('scroll', calculateParallax);\n    };\n  }, [speed, direction]);\n  \n  // Apply parallax transform\n  const parallaxStyle: CSSProperties = {\n    transform: direction === 'x' \n      ? `translateX(${offset}px)` \n      : direction === 'y' \n        ? `translateY(${offset}px)`\n        : `translate(${offset}px, ${offset}px)`,\n    transition: 'transform 0.1s linear',\n    willChange: 'transform',\n    ...style,\n  };\n  \n  return (\n    <div\n      ref={combinedRef}\n      className={className}\n      style={parallaxStyle}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n});\n\nParallaxScrollItem.displayName = 'ParallaxScrollItem';\n\n// CSS keyframes and custom properties for ScrollMotion\nconst scrollMotionStyles = `\n/* ScrollMotion Animation Classes */\n.motion-fade-in.opacity-0 {\n  transition-property: opacity, transform;\n}\n.motion-fade-in.opacity-100 {\n  opacity: 1;\n}\n\n.motion-fade-in-up.opacity-0 {\n  transform: translateY(40px);\n  transition-property: opacity, transform;\n}\n.motion-fade-in-up.opacity-100 {\n  opacity: 1;\n  transform: translateY(0);\n}\n\n.motion-fade-in-down.opacity-0 {\n  transform: translateY(-40px);\n  transition-property: opacity, transform;\n}\n.motion-fade-in-down.opacity-100 {\n  opacity: 1;\n  transform: translateY(0);\n}\n\n.motion-fade-in-left.opacity-0 {\n  transform: translateX(40px);\n  transition-property: opacity, transform;\n}\n.motion-fade-in-left.opacity-100 {\n  opacity: 1;\n  transform: translateX(0);\n}\n\n.motion-fade-in-right.opacity-0 {\n  transform: translateX(-40px);\n  transition-property: opacity, transform;\n}\n.motion-fade-in-right.opacity-100 {\n  opacity: 1;\n  transform: translateX(0);\n}\n\n.motion-scale-in.opacity-0 {\n  transform: scale(0.95);\n  transition-property: opacity, transform;\n}\n.motion-scale-in.opacity-100 {\n  opacity: 1;\n  transform: scale(1);\n}\n\n.motion-scale-in-up.opacity-0 {\n  transform: scale(0.95) translateY(40px);\n  transition-property: opacity, transform;\n}\n.motion-scale-in-up.opacity-100 {\n  opacity: 1;\n  transform: scale(1) translateY(0);\n}\n\n.motion-rotate-in.opacity-0 {\n  transform: rotate(12deg);\n  transition-property: opacity, transform;\n}\n.motion-rotate-in.opacity-100 {\n  opacity: 1;\n  transform: rotate(0);\n}\n\n.motion-rotate-in-left.opacity-0 {\n  transform: rotate(-12deg);\n  transition-property: opacity, transform;\n}\n.motion-rotate-in-left.opacity-100 {\n  opacity: 1;\n  transform: rotate(0);\n}\n\n.motion-flip-in-x.opacity-0 {\n  transform: perspective(1000px) rotateX(90deg);\n  transition-property: opacity, transform;\n}\n.motion-flip-in-x.opacity-100 {\n  opacity: 1;\n  transform: perspective(1000px) rotateX(0);\n}\n\n.motion-flip-in-y.opacity-0 {\n  transform: perspective(1000px) rotateY(90deg);\n  transition-property: opacity, transform;\n}\n.motion-flip-in-y.opacity-100 {\n  opacity: 1;\n  transform: perspective(1000px) rotateY(0);\n}\n\n.motion-tilt-in.opacity-0 {\n  transform: perspective(1000px) rotateX(10deg);\n  transition-property: opacity, transform;\n}\n.motion-tilt-in.opacity-100 {\n  opacity: 1;\n  transform: perspective(1000px) rotateX(0);\n}\n\n.motion-bounce-in.opacity-0 {\n  transform: scale(0.9);\n  transition-property: opacity, transform;\n}\n.motion-bounce-in.opacity-100 {\n  opacity: 1;\n  transform: scale(1);\n}\n\n.motion-blur-in.opacity-0 {\n  filter: blur(10px);\n  transition-property: opacity, filter;\n}\n.motion-blur-in.opacity-100 {\n  opacity: 1;\n  filter: blur(0);\n}\n\n.motion-glow-in.opacity-0 {\n  box-shadow: 0 0 0 rgba(59, 130, 246, 0);\n  transition-property: opacity, box-shadow;\n}\n.motion-glow-in.opacity-100 {\n  opacity: 1;\n  box-shadow: 0 0 40px rgba(59, 130, 246, 0.5);\n}\n\n/* Duration Classes */\n.motion-duration-300 {\n  transition-duration: 300ms;\n}\n.motion-duration-500 {\n  transition-duration: 500ms;\n}\n.motion-duration-700 {\n  transition-duration: 700ms;\n}\n.motion-duration-1000 {\n  transition-duration: 1000ms;\n}\n.motion-duration-1500 {\n  transition-duration: 1500ms;\n}\n\n/* Delay Classes */\n.motion-delay-0 {\n  transition-delay: 0ms;\n}\n.motion-delay-100 {\n  transition-delay: 100ms;\n}\n.motion-delay-300 {\n  transition-delay: 300ms;\n}\n.motion-delay-500 {\n  transition-delay: 500ms;\n}\n.motion-delay-1000 {\n  transition-delay: 1000ms;\n}\n\n/* Easing Classes */\n.motion-easing-linear {\n  transition-timing-function: linear;\n}\n.motion-easing-ease {\n  transition-timing-function: ease;\n}\n.motion-easing-ease-in {\n  transition-timing-function: ease-in;\n}\n.motion-easing-ease-out {\n  transition-timing-function: ease-out;\n}\n.motion-easing-ease-in-out {\n  transition-timing-function: ease-in-out;\n}\n.motion-easing-spring {\n  transition-timing-function: cubic-bezier(0.68, -0.55, 0.265, 1.55);\n}\n.motion-easing-bounce {\n  transition-timing-function: cubic-bezier(0.34, 1.56, 0.64, 1);\n}\n`;\n\nexport { \n  ScrollMotion, \n  ScrollMotionItem, \n  ScrollMotion3D, \n  ParallaxScrollItem,\n  scrollMotionStyles \n};"],"names":["scrollMotionVariants","cva","getDelayValue","delay","getThresholdValue","threshold","getOffsetValue","offset","getStaggerValue","stagger","getDurationValue","duration","ScrollMotion","forwardRef","animation","easing","once","children","as","className","style","perspective","depth","rotateX","rotateY","rotateZ","props","ref","theme","useTheme","localRef","useRef","combinedRef","isVisible","setIsVisible","useState","isAnimated","setIsAnimated","childElements","setChildElements","childAnimationIndex","setChildAnimationIndex","motionClasses","checkVisibility","rect","thresholdValue","offsetValue","useEffect","child","staggerDelay","initialDelay","animateNextChild","index","element","initialRotateX","initialRotateY","initialRotateZ","initialScale","Component","combinedStyles","jsx","ScrollMotionItem","combinedClasses","ScrollMotion3D","ParallaxScrollItem","speed","direction","setOffset","calculateParallax","scrollY","elementCenter","distance","parallaxStyle","scrollMotionStyles"],"mappings":"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"}