{"version":3,"file":"index.esm17.js","sources":["../src/components/ui/Modal.tsx"],"sourcesContent":["import React, { forwardRef, useState, useRef, useEffect, memo, ReactNode, MouseEvent, KeyboardEvent, RefObject, CSSProperties } from 'react';\nimport { createPortal } from 'react-dom';\nimport { cva, VariantProps } from 'class-variance-authority';\nimport { useSafeTheme } from '../../hooks/useSafeTheme';\nimport { cn } from '../../utils/cn';\n\n// Define theme types\nexport type ModalTheme = 'enterprise' | 'techDark' | 'glass' | 'neumorphicLight' | 'glow' | '3d';\nexport type ModalSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | 'full';\nexport type ModalPosition = 'center' | 'top' | 'bottom' | 'left' | 'right';\nexport type ModalDepth = 'flat' | 'shallow' | 'medium' | 'deep';\nexport type ModalAnimation = 'fade' | 'zoom' | 'slide' | 'flip' | 'rotate' | 'bounce' | 'elastic';\nexport type EffectIntensity = 'subtle' | 'medium' | 'strong';\n\n// Define the variants with class-variance-authority\nconst modalVariants = cva(\n  // Base styles for all Modal components\n  \"fixed z-50 max-h-[calc(100vh-2rem)] overflow-auto perspective-1000 transform-gpu\",\n  {\n    variants: {\n      // Theme variants\n      theme: {\n        enterprise: \"bg-background-primary border border-border shadow-lg rounded-lg text-foreground-primary\",\n        techDark: \"bg-background-primary border border-transparent gradient-border-1 shadow-xl rounded-xl text-white\",\n        glass: \"glass-effect border border-border backdrop-blur-lg rounded-xl text-white\",\n        neumorphicLight: \"bg-[#e0e5ec] shadow-[20px_20px_60px_#bebebe,-20px_-20px_60px_#ffffff] border-none rounded-2xl text-gray-700\",\n        glow: \"bg-gray-900/90 border border-transparent rounded-xl text-white shadow-[0_0_15px_rgba(59,130,246,0.5),0_0_30px_rgba(59,130,246,0.3)]\",\n        '3d': \"bg-gray-50 dark:bg-gray-900 border border-gray-200 dark:border-gray-700 rounded-lg text-gray-900 dark:text-white transform-gpu shadow-xl\",\n      } as const,\n      // Size variants\n      size: {\n        xs: \"w-full max-w-xs\",\n        sm: \"w-full max-w-sm\",\n        md: \"w-full max-w-md\",\n        lg: \"w-full max-w-lg\",\n        xl: \"w-full max-w-xl\",\n        '2xl': \"w-full max-w-2xl\",\n        'full': \"w-full h-full max-w-full\",\n      } as const,\n      // Position variants\n      position: {\n        center: \"top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2\",\n        top: \"top-4 left-1/2 -translate-x-1/2\",\n        bottom: \"bottom-4 left-1/2 -translate-x-1/2\",\n        left: \"left-4 top-1/2 -translate-y-1/2\",\n        right: \"right-4 top-1/2 -translate-y-1/2\",\n      } as const,\n      // Depth effect (3D)\n      depth: {\n        flat: \"\",\n        shallow: \"transform-gpu shadow-lg\",\n        medium: \"transform-gpu shadow-xl\",\n        deep: \"transform-gpu shadow-2xl\",\n      } as const,\n    },\n    // Compound variants for specific combinations\n    compoundVariants: [\n      // Enterprise theme specifics\n      {\n        theme: \"enterprise\",\n        className: \"border-gray-200\",\n      },\n      // Tech Dark theme specifics\n      {\n        theme: \"techDark\",\n        className: \"bg-gray-900/90 text-gray-100\",\n      },\n      // Glass theme specifics\n      {\n        theme: \"glass\",\n        className: \"bg-white/20 border-white/30\",\n      },\n      // Neumorphic Light theme specifics\n      {\n        theme: \"neumorphicLight\",\n        className: \"text-gray-700\",\n      },\n      // Glow theme specifics\n      {\n        theme: \"glow\",\n        className: \"glow-effect bg-gray-900/95 text-white\",\n      },\n      // 3D theme specifics\n      {\n        theme: \"3d\",\n        depth: \"deep\",\n        className: \"transform-style-3d\",\n      },\n    ],\n    // Default variant values\n    defaultVariants: {\n      theme: \"enterprise\",\n      size: \"md\",\n      position: \"center\",\n      depth: \"medium\",\n    },\n  }\n);\n\n// Get variant props type from modalVariants\nexport type ModalVariantProps = VariantProps<typeof modalVariants>;\n\n// Overlay variants\nconst overlayVariants = cva(\n  \"fixed inset-0 z-40 transition-opacity\",\n  {\n    variants: {\n      theme: {\n        enterprise: \"bg-black/50\",\n        techDark: \"bg-black/70\",\n        glass: \"backdrop-blur-sm bg-black/30\",\n        neumorphicLight: \"bg-gray-900/20 backdrop-blur-sm\",\n        glow: \"bg-black/80 backdrop-blur-sm\",\n        '3d': \"bg-black/60\",\n      } as const,\n    },\n    defaultVariants: {\n      theme: \"enterprise\",\n    },\n  }\n);\n\n// Interface for animation classes\ninterface AnimationClasses {\n  enter: string;\n  enterFrom: string;\n  enterTo: string;\n  leave: string;\n  leaveFrom: string;\n  leaveTo: string;\n}\n\n// Define animation variants\nconst animationVariants: Record<string, AnimationClasses | Record<string, AnimationClasses>> = {\n  fade: {\n    enter: \"transition-opacity ease-out duration-300\",\n    enterFrom: \"opacity-0\",\n    enterTo: \"opacity-100\",\n    leave: \"transition-opacity ease-in duration-200\",\n    leaveFrom: \"opacity-100\",\n    leaveTo: \"opacity-0\",\n  },\n  zoom: {\n    enter: \"transition-all ease-out duration-300\",\n    enterFrom: \"opacity-0 scale-95\",\n    enterTo: \"opacity-100 scale-100\",\n    leave: \"transition-all ease-in duration-200\",\n    leaveFrom: \"opacity-100 scale-100\",\n    leaveTo: \"opacity-0 scale-95\",\n  },\n  slide: {\n    top: {\n      enter: \"transition-all ease-out duration-300\",\n      enterFrom: \"opacity-0 -translate-y-8\",\n      enterTo: \"opacity-100 translate-y-0\",\n      leave: \"transition-all ease-in duration-200\",\n      leaveFrom: \"opacity-100 translate-y-0\",\n      leaveTo: \"opacity-0 -translate-y-8\",\n    },\n    bottom: {\n      enter: \"transition-all ease-out duration-300\",\n      enterFrom: \"opacity-0 translate-y-8\",\n      enterTo: \"opacity-100 translate-y-0\",\n      leave: \"transition-all ease-in duration-200\",\n      leaveFrom: \"opacity-100 translate-y-0\",\n      leaveTo: \"opacity-0 translate-y-8\",\n    },\n    left: {\n      enter: \"transition-all ease-out duration-300\",\n      enterFrom: \"opacity-0 -translate-x-8\",\n      enterTo: \"opacity-100 translate-x-0\",\n      leave: \"transition-all ease-in duration-200\",\n      leaveFrom: \"opacity-100 translate-x-0\",\n      leaveTo: \"opacity-0 -translate-x-8\",\n    },\n    right: {\n      enter: \"transition-all ease-out duration-300\",\n      enterFrom: \"opacity-0 translate-x-8\",\n      enterTo: \"opacity-100 translate-x-0\",\n      leave: \"transition-all ease-in duration-200\",\n      leaveFrom: \"opacity-100 translate-x-0\",\n      leaveTo: \"opacity-0 translate-x-8\",\n    },\n  },\n  flip: {\n    enter: \"transition-all ease-out duration-300 perspective-1000\",\n    enterFrom: \"opacity-0 rotateX(-20deg)\",\n    enterTo: \"opacity-100 rotateX(0)\",\n    leave: \"transition-all ease-in duration-200 perspective-1000\",\n    leaveFrom: \"opacity-100 rotateX(0)\",\n    leaveTo: \"opacity-0 rotateX(20deg)\",\n  },\n  rotate: {\n    enter: \"transition-all ease-out duration-300 perspective-1000\",\n    enterFrom: \"opacity-0 rotate-12\",\n    enterTo: \"opacity-100 rotate-0\",\n    leave: \"transition-all ease-in duration-200 perspective-1000\",\n    leaveFrom: \"opacity-100 rotate-0\",\n    leaveTo: \"opacity-0 -rotate-12\",\n  },\n  bounce: {\n    enter: \"transition-all ease-out duration-300\",\n    enterFrom: \"opacity-0 translate-y-12\",\n    enterTo: \"opacity-100 translate-y-0 animate-bounce-gentle\",\n    leave: \"transition-all ease-in duration-200\",\n    leaveFrom: \"opacity-100 translate-y-0\",\n    leaveTo: \"opacity-0 translate-y-12\",\n  },\n  elastic: {\n    enter: \"transition-all ease-elastic duration-500\",\n    enterFrom: \"opacity-0 scale-75\",\n    enterTo: \"opacity-100 scale-100\",\n    leave: \"transition-all ease-in duration-200\",\n    leaveFrom: \"opacity-100 scale-100\",\n    leaveTo: \"opacity-0 scale-75\",\n  },\n};\n\n// Glare position type\ninterface GlarePosition {\n  x: number;\n  y: number;\n}\n\n// Effect intensity type\ninterface EffectIntensityConfig {\n  maxRotation: number;\n  glareOpacity: number;\n}\n\n// Modal props interface\nexport interface ModalProps extends React.HTMLAttributes<HTMLDivElement>, Omit<ModalVariantProps, 'theme'> {\n  /** Whether the modal is open */\n  isOpen: boolean;\n  /** Function to call when the modal is closed */\n  onClose: () => void;\n  /** Modal theme */\n  theme?: ModalTheme;\n  /** Animation type */\n  animation?: ModalAnimation;\n  /** Whether to close the modal when clicking outside */\n  closeOnOutsideClick?: boolean;\n  /** Whether to show the close button */\n  showCloseButton?: boolean;\n  /** ID of the element that labels the modal */\n  ariaLabelledby?: string;\n  /** ID of the element that describes the modal */\n  ariaDescribedby?: string;\n  /** Additional class name for the overlay */\n  overlayClassName?: string;\n  /** Additional class name for the modal body */\n  bodyClassName?: string;\n  /** Additional class name for the close button */\n  closeButtonClassName?: string;\n  /** Ref to the element to focus when the modal opens */\n  initialFocus?: RefObject<HTMLElement>;\n  /** Whether to lock scrolling on the body when the modal is open */\n  lockScroll?: boolean;\n  /** Target element to render the modal in */\n  portalTarget?: HTMLElement | string;\n  /** Whether to show a glare effect when moving the mouse (for 3D effect) */\n  showGlareEffect?: boolean;\n  /** Whether to show a 3D effect when moving the mouse */\n  show3DEffect?: boolean;\n  /** Intensity of the 3D/glare effect */\n  effectIntensity?: EffectIntensity;\n  /** React children */\n  children: ReactNode;\n}\n\n// Modal Header props interface\nexport interface ModalHeaderProps extends React.HTMLAttributes<HTMLDivElement> {\n  /** Modal theme */\n  theme?: ModalTheme;\n  /** React children */\n  children: ReactNode;\n  /** Additional class name */\n  className?: string;\n}\n\n// Modal Body props interface\nexport interface ModalBodyProps extends React.HTMLAttributes<HTMLDivElement> {\n  /** React children */\n  children: ReactNode;\n  /** Additional class name */\n  className?: string;\n}\n\n// Modal Footer props interface\nexport interface ModalFooterProps extends React.HTMLAttributes<HTMLDivElement> {\n  /** Modal theme */\n  theme?: ModalTheme;\n  /** React children */\n  children: ReactNode;\n  /** Additional class name */\n  className?: string;\n}\n\n// Main Modal Component with React.memo for optimization\nconst Modal = memo(forwardRef<HTMLDivElement, ModalProps>(({\n  children,\n  isOpen,\n  onClose,\n  className,\n  theme: themeProp,\n  size,\n  position,\n  depth = 'medium',\n  animation = 'zoom',\n  closeOnOutsideClick = true,\n  showCloseButton = true,\n  ariaLabelledby,\n  ariaDescribedby,\n  overlayClassName,\n  bodyClassName,\n  closeButtonClassName,\n  initialFocus,\n  lockScroll = true,\n  portalTarget,\n  showGlareEffect = false,\n  show3DEffect = false,\n  effectIntensity = 'medium',\n  ...props\n}, ref) => {\n  // Get the current theme from context\n  const { theme: contextTheme } = useSafeTheme();\n  \n  // Use prop theme or fall back to context\n  const activeTheme = (themeProp || contextTheme || 'enterprise') as ModalTheme;\n  \n  // Closing state for animations\n  const [isClosing, setIsClosing] = useState<boolean>(false);\n  const [isMounted, setIsMounted] = useState<boolean>(false);\n  \n  // State for 3D effect\n  const [rotateX, setRotateX] = useState<number>(0);\n  const [rotateY, setRotateY] = useState<number>(0);\n  const [glarePosition, setGlarePosition] = useState<GlarePosition>({ x: 50, y: 50 });\n  \n  // Refs\n  const modalRef = useRef<HTMLDivElement>(null);\n  const overlayRef = useRef<HTMLDivElement>(null);\n  const prevActiveElement = useRef<Element | null>(null);\n  \n  // Handle close with animation\n  const handleClose = (): void => {\n    setIsClosing(true);\n    // Wait for animation to complete\n    setTimeout(() => {\n      onClose();\n      setIsClosing(false);\n    }, 200); // Match this with animation duration\n  };\n  \n  // Handle outside click\n  const handleOverlayClick = (e: MouseEvent<HTMLDivElement>): void => {\n    if (\n      closeOnOutsideClick && \n      overlayRef.current === e.target\n    ) {\n      handleClose();\n    }\n  };\n  \n  // Handle escape key\n  const handleEscapeKey = (e: KeyboardEvent): void => {\n    if (e.key === 'Escape') {\n      handleClose();\n    }\n  };\n  \n  // Get animation classes based on animation prop and position\n  const getAnimationClasses = (): AnimationClasses => {\n    if (animation === 'slide') {\n      const slidePosition = position || 'center';\n      const slideDirection = \n        slidePosition === 'top' ? 'top' :\n        slidePosition === 'bottom' ? 'bottom' :\n        slidePosition === 'left' ? 'left' :\n        slidePosition === 'right' ? 'right' : 'top';\n      \n      return (animationVariants.slide as Record<string, AnimationClasses>)[slideDirection];\n    }\n    \n    return animationVariants[animation] as AnimationClasses || animationVariants.fade as AnimationClasses;\n  };\n  \n  const animClasses = getAnimationClasses();\n  \n  // Calculate 3D effect intensity\n  const getEffectIntensity = (): EffectIntensityConfig => {\n    switch (effectIntensity) {\n      case 'subtle':\n        return { maxRotation: 3, glareOpacity: 0.05 };\n      case 'medium':\n        return { maxRotation: 5, glareOpacity: 0.1 };\n      case 'strong':\n        return { maxRotation: 10, glareOpacity: 0.15 };\n      default:\n        return { maxRotation: 5, glareOpacity: 0.1 };\n    }\n  };\n  \n  const { maxRotation, glareOpacity } = getEffectIntensity();\n  \n  // Handle 3D effect on mouse move\n  const handle3DEffect = (e: MouseEvent<HTMLDivElement>): void => {\n    if (!show3DEffect || !modalRef.current) return;\n    \n    const rect = modalRef.current.getBoundingClientRect();\n    const centerX = rect.left + rect.width / 2;\n    const centerY = rect.top + rect.height / 2;\n    \n    // Calculate normalized position (-1 to 1)\n    const normalizedX = (e.clientX - centerX) / (rect.width / 2);\n    const normalizedY = (e.clientY - centerY) / (rect.height / 2);\n    \n    // Calculate rotation values\n    const rotX = normalizedY * -maxRotation; // Invert Y axis\n    const rotY = normalizedX * maxRotation;\n    \n    // Update state\n    setRotateX(rotX);\n    setRotateY(rotY);\n    \n    // Update glare position if enabled\n    if (showGlareEffect) {\n      const glareX = (normalizedX + 1) * 50; // Convert to percentage (0-100)\n      const glareY = (normalizedY + 1) * 50;\n      setGlarePosition({ x: glareX, y: glareY });\n    }\n  };\n  \n  // Reset 3D effect on mouse leave\n  const resetEffects = (): void => {\n    setRotateX(0);\n    setRotateY(0);\n  };\n  \n  // Manage focus and scroll lock\n  useEffect(() => {\n    if (isOpen && !isMounted) {\n      setIsMounted(true);\n      prevActiveElement.current = document.activeElement;\n      \n      // Focus the modal or a specific element\n      setTimeout(() => {\n        if (initialFocus && initialFocus.current) {\n          initialFocus.current.focus();\n        } else if (modalRef.current) {\n          modalRef.current.focus();\n        }\n      }, 0);\n      \n      // Lock body scroll\n      if (lockScroll) {\n        document.body.style.overflow = 'hidden';\n      }\n      \n      // Add escape key event listener\n      document.addEventListener('keydown', handleEscapeKey as unknown as EventListener);\n    }\n    \n    return () => {\n      if (isOpen || isMounted) {\n        // Restore focus\n        if (prevActiveElement.current instanceof HTMLElement) {\n          prevActiveElement.current.focus();\n        }\n        \n        // Restore scroll\n        if (lockScroll) {\n          document.body.style.overflow = '';\n        }\n        \n        // Remove event listener\n        document.removeEventListener('keydown', handleEscapeKey as unknown as EventListener);\n        \n        if (isMounted) {\n          setIsMounted(false);\n        }\n      }\n    };\n  }, [isOpen, initialFocus, lockScroll]);\n  \n  // Don't render anything if the modal is not open\n  if (!isOpen && !isClosing) {\n    return null;\n  }\n  \n  // Get the portal target element\n  const target = typeof portalTarget === 'string' \n    ? document.querySelector(portalTarget) \n    : portalTarget || document.body;\n  \n  // Get appropriate theme-based classes\n  const modalClasses = modalVariants({\n    theme: activeTheme,\n    size,\n    position,\n    depth,\n    className,\n  });\n  \n  const overlayClasses = cn(\n    overlayVariants({ theme: activeTheme }),\n    isClosing ? animClasses.leave : animClasses.enter,\n    isClosing ? animClasses.leaveTo : animClasses.enterTo,\n    !isMounted ? animClasses.enterFrom : '',\n    overlayClassName\n  );\n  \n  // Define close button styles based on theme\n  const closeButtonStyles = cn(\n    \"absolute top-3 right-3 p-2 rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-primary z-10\",\n    activeTheme === 'enterprise' && \"text-gray-500 hover:text-gray-700 hover:bg-gray-100\",\n    activeTheme === 'techDark' && \"text-gray-400 hover:text-gray-200 hover:bg-gray-800/50\",\n    activeTheme === 'glass' && \"text-white/70 hover:text-white hover:bg-white/20\",\n    activeTheme === 'neumorphicLight' && \"text-gray-500 hover:text-gray-700 hover:shadow-[inset_2px_2px_5px_#b8b9be,inset_-3px_-3px_7px_#ffffff]\",\n    activeTheme === 'glow' && \"text-white/80 hover:text-white hover:bg-white/10\",\n    activeTheme === '3d' && \"text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800/50\",\n    closeButtonClassName\n  );\n  \n  // Generate 3D transform style\n  const get3DStyle = (): CSSProperties => {\n    if (!show3DEffect) return {};\n    \n    return {\n      transform: `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`,\n      transition: 'transform 0.1s ease-out',\n    };\n  };\n  \n  // Generate glare effect style\n  const getGlareStyle = (): CSSProperties => {\n    if (!showGlareEffect) return {};\n    \n    return {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      pointerEvents: 'none',\n      backgroundImage: `radial-gradient(circle at ${glarePosition.x}% ${glarePosition.y}%, rgba(255, 255, 255, ${glareOpacity}), transparent 80%)`,\n      borderRadius: 'inherit',\n      zIndex: 0,\n    };\n  };\n  \n  // Calculate styles based on effects\n  const modal3DStyle = get3DStyle();\n  const glareStyle = getGlareStyle();\n  \n  // Create modal content\n  const modalContent = (\n    <div\n      ref={overlayRef}\n      className={overlayClasses}\n      onClick={handleOverlayClick}\n      aria-hidden=\"true\"\n    >\n      <div\n        ref={(node) => {\n          // Handle both the forwarded ref and the internal ref\n          if (ref) {\n            if (typeof ref === 'function') ref(node);\n            else if (ref.current !== undefined) ref.current = node;\n          }\n          if (modalRef.current !== node) {\n            modalRef.current = node;\n          }\n        }}\n        role=\"dialog\"\n        aria-modal=\"true\"\n        aria-labelledby={ariaLabelledby}\n        aria-describedby={ariaDescribedby}\n        className={cn(\n          modalClasses,\n          isClosing ? animClasses.leave : animClasses.enter,\n          isClosing ? animClasses.leaveTo : animClasses.enterTo,\n          !isMounted ? animClasses.enterFrom : '',\n          activeTheme === 'glow' && 'animate-glow',\n        )}\n        style={modal3DStyle}\n        onMouseMove={handle3DEffect}\n        onMouseLeave={resetEffects}\n        tabIndex={-1}\n        {...props}\n      >\n        {showGlareEffect && <div style={glareStyle} />}\n        \n        {showCloseButton && (\n          <button\n            type=\"button\"\n            className={closeButtonStyles}\n            onClick={handleClose}\n            aria-label=\"Close modal\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n            </svg>\n          </button>\n        )}\n        \n        <div className={cn(\"p-6 relative z-1\", bodyClassName)}>\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n  \n  // Render the modal through a portal\n  return createPortal(modalContent, target);\n}));\n\n// Display name for debugging\nModal.displayName = 'Modal';\n\n// Modal Header Component\nconst ModalHeader = forwardRef<HTMLDivElement, ModalHeaderProps>(({ \n  className, \n  theme: themeProp, \n  children, \n  ...props \n}, ref) => {\n  const { theme: contextTheme } = useSafeTheme();\n  const activeTheme = (themeProp || contextTheme || 'enterprise') as ModalTheme;\n  \n  const headerClasses = cn(\n    \"mb-4 pb-3 text-xl font-semibold leading-6\",\n    activeTheme === 'enterprise' && \"border-b border-gray-200 text-gray-900\",\n    activeTheme === 'techDark' && \"border-b border-gray-700 text-white\",\n    activeTheme === 'glass' && \"border-b border-white/20 text-white\",\n    activeTheme === 'neumorphicLight' && \"border-b border-gray-200 text-gray-700\",\n    activeTheme === 'glow' && \"border-b border-blue-500/30 text-white\",\n    activeTheme === '3d' && \"border-b border-gray-200 dark:border-gray-700 text-gray-900 dark:text-white\",\n    className\n  );\n  \n  return (\n    <header ref={ref} className={headerClasses} {...props}>\n      {children}\n    </header>\n  );\n});\n\nModalHeader.displayName = 'ModalHeader';\n\n// Modal Body Component\nconst ModalBody = forwardRef<HTMLDivElement, ModalBodyProps>(({ \n  className, \n  children,\n  ...props \n}, ref) => {\n  return (\n    <div ref={ref} className={cn(\"py-2\", className)} {...props}>\n      {children}\n    </div>\n  );\n});\n\nModalBody.displayName = 'ModalBody';\n\n// Modal Footer Component\nconst ModalFooter = forwardRef<HTMLDivElement, ModalFooterProps>(({ \n  className, \n  theme: themeProp, \n  children, \n  ...props \n}, ref) => {\n  const { theme: contextTheme } = useSafeTheme();\n  const activeTheme = (themeProp || contextTheme || 'enterprise') as ModalTheme;\n  \n  const footerClasses = cn(\n    \"mt-6 pt-3 flex justify-end space-x-3\",\n    activeTheme === 'enterprise' && \"border-t border-gray-200\",\n    activeTheme === 'techDark' && \"border-t border-gray-700\",\n    activeTheme === 'glass' && \"border-t border-white/20\",\n    activeTheme === 'neumorphicLight' && \"border-t border-gray-200\",\n    activeTheme === 'glow' && \"border-t border-blue-500/30\",\n    activeTheme === '3d' && \"border-t border-gray-200 dark:border-gray-700\",\n    className\n  );\n  \n  return (\n    <footer ref={ref} className={footerClasses} {...props}>\n      {children}\n    </footer>\n  );\n});\n\nModalFooter.displayName = 'ModalFooter';\n\nexport { Modal, ModalHeader, ModalBody, ModalFooter, modalVariants };"],"names":["modalVariants","cva","overlayVariants","animationVariants","Modal","memo","forwardRef","children","isOpen","onClose","className","themeProp","size","position","depth","animation","closeOnOutsideClick","showCloseButton","ariaLabelledby","ariaDescribedby","overlayClassName","bodyClassName","closeButtonClassName","initialFocus","lockScroll","portalTarget","showGlareEffect","show3DEffect","effectIntensity","props","ref","contextTheme","useSafeTheme","activeTheme","isClosing","setIsClosing","useState","isMounted","setIsMounted","rotateX","setRotateX","rotateY","setRotateY","glarePosition","setGlarePosition","modalRef","useRef","overlayRef","prevActiveElement","handleClose","handleOverlayClick","e","handleEscapeKey","animClasses","slidePosition","slideDirection","getEffectIntensity","maxRotation","glareOpacity","handle3DEffect","rect","centerX","centerY","normalizedX","normalizedY","rotX","rotY","glareX","glareY","resetEffects","useEffect","target","modalClasses","overlayClasses","cn","closeButtonStyles","get3DStyle","getGlareStyle","modal3DStyle","glareStyle","modalContent","jsx","jsxs","node","createPortal","ModalHeader","headerClasses","ModalBody","ModalFooter","footerClasses"],"mappings":"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"}