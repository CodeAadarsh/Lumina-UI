{"version":3,"file":"index.esm24.js","sources":["../src/hooks/useSafeTheme.tsx"],"sourcesContent":["import { useTheme } from '../providers/ThemeProvider';\nimport { ThemeName, ThemeConfig } from '../providers/ThemeProvider';\n\n/**\n * A safe wrapper around useTheme that returns default values if \n * ThemeProvider is not in the component tree\n */\nexport interface UseSafeThemeReturn {\n  /** The current theme name */\n  theme: ThemeName;\n  /** Complete theme configuration object */\n  themeObject: ThemeConfig;\n  /** Function to set the current theme */\n  setTheme: (theme: ThemeName) => void;\n  /** List of available themes */\n  themes: string[];\n}\n\n/**\n * Hook that safely accesses theme context\n * Falls back to default values if used outside of ThemeProvider\n */\nexport function useSafeTheme(): UseSafeThemeReturn {\n  try {\n    return useTheme();\n  } catch (error) {\n    // Return a fallback when used outside ThemeProvider\n    return {\n      theme: 'default',\n      themeObject: {} as ThemeConfig, // Empty fallback\n      setTheme: () => {\n        console.warn('ThemeProvider not found in component tree. Theme cannot be changed.');\n      },\n      themes: ['default'],\n    };\n  }\n}"],"names":["useSafeTheme","useTheme"],"mappings":";AAsBO,SAASA,IAAmC;AAC7C,MAAA;AACF,WAAOC,EAAS;AAAA,UACF;AAEP,WAAA;AAAA,MACL,OAAO;AAAA,MACP,aAAa,CAAC;AAAA;AAAA,MACd,UAAU,MAAM;AACd,gBAAQ,KAAK,qEAAqE;AAAA,MACpF;AAAA,MACA,QAAQ,CAAC,SAAS;AAAA,IACpB;AAAA,EAAA;AAEJ;"}